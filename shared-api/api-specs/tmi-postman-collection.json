{
  "info": {
    "_postman_id": "fee2697b-ee72-4931-aaf3-e9e59c0fe44e",
    "name": "TMI (Threat Modeling Improved) API",
    "description": "A RESTful API for collaborative threat modeling with full X6 graph library compatibility. This API provides schemas that align with AntV X6 cell object models for seamless integration with modern diagramming libraries. Supports OAuth 2.0 authentication with client callback integration for seamless single-page application authentication flows.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "9858033",
    "_collection_link": "https://tmisecurity.postman.co/workspace/Team-Workspace~d76c7050-80ac-4fa2-81fe-a0578999a0a7/collection/9858033-fee2697b-ee72-4931-aaf3-e9e59c0fe44e?source=collection_link"
  },
  "item": [
    {
      "name": "/",
      "item": [
        {
          "name": "Get API information",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                ""
              ]
            },
            "description": "Returns service, API, and operator information without authentication"
          },
          "response": [
            {
              "name": "Service and API information",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ""
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": {\n    \"code\": \"OK\",\n    \"time\": \"<dateTime>\"\n  },\n  \"service\": {\n    \"name\": \"<string>\",\n    \"build\": \"<string>\"\n  },\n  \"api\": {\n    \"version\": \"<string>\",\n    \"specification\": \"<uri>\"\n  },\n  \"operator\": {\n    \"name\": \"<string>\",\n    \"contact\": \"<string>\"\n  }\n}"
            },
            {
              "name": "Error response",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ""
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
            },
            {
              "name": "Error response",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ""
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is valid\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 500]);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 1000ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                  "});",
                  "",
                  "pm.test(\"Response has Content-Type header\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Response is valid JSON\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Error response has proper structure\", function () {",
                  "    if (pm.response.code >= 400) {",
                  "        const jsonData = pm.response.json();",
                  "        pm.expect(jsonData).to.have.property(\"error\");",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                  "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                  "});",
                  "",
                  "pm.test(\"Response has X-Frame-Options header\", function () {",
                  "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                  "});",
                  "",
                  "pm.test(\"Response has X-XSS-Protection header\", function () {",
                  "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                  "});",
                  "",
                  "pm.test(\"Response has Content-Security-Policy header\", function () {",
                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                  "});",
                  "",
                  "pm.test(\"Response has Referrer-Policy header\", function () {",
                  "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                  "});",
                  "",
                  "pm.test(\"Response has Permissions-Policy header\", function () {",
                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": ".well-known",
      "item": [
        {
          "name": "openid-configuration",
          "item": [
            {
              "name": "OpenID Connect Discovery Configuration",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/.well-known/openid-configuration",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ".well-known",
                    "openid-configuration"
                  ]
                },
                "description": "Returns OpenID Connect provider configuration metadata as per RFC 8414"
              },
              "response": [
                {
                  "name": "OpenID Connect configuration metadata",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/.well-known/openid-configuration",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ".well-known",
                        "openid-configuration"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"issuer\": \"<uri>\",\n  \"authorization_endpoint\": \"<uri>\",\n  \"token_endpoint\": \"<uri>\",\n  \"jwks_uri\": \"<uri>\",\n  \"response_types_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"subject_types_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id_token_signing_alg_values_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"userinfo_endpoint\": \"<uri>\",\n  \"scopes_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"claims_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"introspection_endpoint\": \"<uri>\"\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/.well-known/openid-configuration",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ".well-known",
                        "openid-configuration"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/.well-known/openid-configuration",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ".well-known",
                        "openid-configuration"
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is valid\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 500]);",
                      "});",
                      "",
                      "pm.test(\"Response time is less than 1000ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Type header\", function () {",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Response is valid JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "pm.test(\"Error response has proper structure\", function () {",
                      "    if (pm.response.code >= 400) {",
                      "        const jsonData = pm.response.json();",
                      "        pm.expect(jsonData).to.have.property(\"error\");",
                      "    }",
                      "});",
                      "",
                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                      "});",
                      "",
                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                      "});",
                      "",
                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "oauth-authorization-server",
          "item": [
            {
              "name": "OAuth 2.0 Authorization Server Metadata",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/.well-known/oauth-authorization-server",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ".well-known",
                    "oauth-authorization-server"
                  ]
                },
                "description": "Returns OAuth 2.0 authorization server metadata as per RFC 8414"
              },
              "response": [
                {
                  "name": "OAuth 2.0 authorization server metadata",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/.well-known/oauth-authorization-server",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ".well-known",
                        "oauth-authorization-server"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"issuer\": \"<uri>\",\n  \"authorization_endpoint\": \"<uri>\",\n  \"token_endpoint\": \"<uri>\",\n  \"response_types_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"introspection_endpoint\": \"<uri>\",\n  \"grant_types_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"token_endpoint_auth_methods_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/.well-known/oauth-authorization-server",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ".well-known",
                        "oauth-authorization-server"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/.well-known/oauth-authorization-server",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ".well-known",
                        "oauth-authorization-server"
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is valid\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 500]);",
                      "});",
                      "",
                      "pm.test(\"Response time is less than 1000ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Type header\", function () {",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Response is valid JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "// OAuth endpoint specific tests",
                      "",
                      "pm.test(\"Error response has proper structure\", function () {",
                      "    if (pm.response.code >= 400) {",
                      "        const jsonData = pm.response.json();",
                      "        pm.expect(jsonData).to.have.property(\"error\");",
                      "    }",
                      "});",
                      "",
                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                      "});",
                      "",
                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                      "});",
                      "",
                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "jwks.json",
          "item": [
            {
              "name": "JSON Web Key Set",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/.well-known/jwks.json",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    ".well-known",
                    "jwks.json"
                  ]
                },
                "description": "Returns the JSON Web Key Set (JWKS) for JWT signature verification"
              },
              "response": [
                {
                  "name": "JSON Web Key Set",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/.well-known/jwks.json",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ".well-known",
                        "jwks.json"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"keys\": [\n    {\n      \"kty\": \"<string>\",\n      \"use\": \"<string>\",\n      \"alg\": \"<string>\",\n      \"kid\": \"<string>\"\n    },\n    {\n      \"kty\": \"<string>\",\n      \"use\": \"<string>\",\n      \"alg\": \"<string>\",\n      \"kid\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/.well-known/jwks.json",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ".well-known",
                        "jwks.json"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/.well-known/jwks.json",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        ".well-known",
                        "jwks.json"
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is valid\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 500]);",
                      "});",
                      "",
                      "pm.test(\"Response time is less than 1000ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Type header\", function () {",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Response is valid JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "pm.test(\"Error response has proper structure\", function () {",
                      "    if (pm.response.code >= 400) {",
                      "        const jsonData = pm.response.json();",
                      "        pm.expect(jsonData).to.have.property(\"error\");",
                      "    }",
                      "});",
                      "",
                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                      "});",
                      "",
                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                      "});",
                      "",
                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "oauth2",
      "item": [
        {
          "name": "introspect",
          "item": [
            {
              "name": "Token Introspection",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "token",
                      "value": "<string>",
                      "description": "(Required) The JWT token to introspect"
                    },
                    {
                      "key": "token_type_hint",
                      "value": "<string>",
                      "description": "Optional hint about the type of token being introspected"
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/oauth2/introspect",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "oauth2",
                    "introspect"
                  ]
                },
                "description": "Introspects a JWT token to determine its validity and metadata as per RFC 7662"
              },
              "response": [
                {
                  "name": "Token introspection result",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "token",
                          "value": "<string>",
                          "description": "(Required) The JWT token to introspect"
                        },
                        {
                          "key": "token_type_hint",
                          "value": "<string>",
                          "description": "Optional hint about the type of token being introspected"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/introspect",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "introspect"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"active\": \"<boolean>\",\n  \"sub\": \"<string>\",\n  \"email\": \"<string>\",\n  \"email_verified\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"exp\": \"<integer>\",\n  \"iat\": \"<integer>\",\n  \"iss\": \"<string>\"\n}"
                },
                {
                  "name": "Invalid request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "token",
                          "value": "<string>",
                          "description": "(Required) The JWT token to introspect"
                        },
                        {
                          "key": "token_type_hint",
                          "value": "<string>",
                          "description": "Optional hint about the type of token being introspected"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/introspect",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "introspect"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is valid\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 400]);",
                      "});",
                      "",
                      "pm.test(\"Response time is less than 1000ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Type header\", function () {",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Response is valid JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "pm.test(\"Error response has proper structure\", function () {",
                      "    if (pm.response.code >= 400) {",
                      "        const jsonData = pm.response.json();",
                      "        pm.expect(jsonData).to.have.property(\"error\");",
                      "    }",
                      "});",
                      "",
                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                      "});",
                      "",
                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                      "});",
                      "",
                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "providers",
          "item": [
            {
              "name": "List available OAuth providers",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/oauth2/providers",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "oauth2",
                    "providers"
                  ]
                },
                "description": "Returns a list of configured OAuth providers available for authentication"
              },
              "response": [
                {
                  "name": "List of available OAuth providers",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/providers",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "providers"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"providers\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"icon\": \"<string>\",\n      \"auth_url\": \"<uri>\",\n      \"redirect_uri\": \"<uri>\",\n      \"client_id\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"icon\": \"<string>\",\n      \"auth_url\": \"<uri>\",\n      \"redirect_uri\": \"<uri>\",\n      \"client_id\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/providers",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "providers"
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is valid\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 500]);",
                      "});",
                      "",
                      "pm.test(\"Response time is less than 1000ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Type header\", function () {",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Response is valid JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "// OAuth endpoint specific tests",
                      "",
                      "pm.test(\"Error response has proper structure\", function () {",
                      "    if (pm.response.code >= 400) {",
                      "        const jsonData = pm.response.json();",
                      "        pm.expect(jsonData).to.have.property(\"error\");",
                      "    }",
                      "});",
                      "",
                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                      "});",
                      "",
                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                      "});",
                      "",
                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "authorize",
          "item": [
            {
              "name": "Initiate OAuth authorization flow",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/oauth2/authorize?idp=<string>&client_callback=<uri>&state=<string>&login_hint=F2ewS61yb5G-&scope=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "oauth2",
                    "authorize"
                  ],
                  "query": [
                    {
                      "key": "idp",
                      "value": "<string>",
                      "description": "OAuth provider identifier. Defaults to 'test' provider in non-production builds if not specified."
                    },
                    {
                      "key": "client_callback",
                      "value": "<uri>",
                      "description": "Client callback URL where TMI should redirect after successful OAuth completion with tokens as query parameters. If not provided, tokens are returned as JSON response."
                    },
                    {
                      "key": "state",
                      "value": "<string>",
                      "description": "CSRF protection state parameter. Recommended for security. Will be included in the callback response."
                    },
                    {
                      "key": "login_hint",
                      "value": "F2ewS61yb5G-",
                      "description": "User identity hint for test OAuth provider. Allows specifying a desired user identity for testing and automation. Only supported by the test provider (ignored by production providers like Google, GitHub, etc.). Must be 3-20 characters, alphanumeric and hyphens only."
                    },
                    {
                      "key": "scope",
                      "value": "<string>",
                      "description": "(Required) OAuth 2.0 scope parameter. For OpenID Connect, must include \"openid\". Supports \"profile\" and \"email\" scopes. Other scopes are silently ignored. Space-separated values."
                    }
                  ]
                },
                "description": "Redirects user to OAuth provider's authorization page. Supports client callback URL for seamless client integration. Generates state parameter for CSRF protection."
              },
              "response": [
                {
                  "name": "Redirect to OAuth provider authorization page",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/authorize?idp=<string>&client_callback=<uri>&state=<string>&login_hint=F2ewS61yb5G-&scope=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "authorize"
                      ],
                      "query": [
                        {
                          "key": "idp",
                          "value": "<string>",
                          "description": "OAuth provider identifier. Defaults to 'test' provider in non-production builds if not specified."
                        },
                        {
                          "key": "client_callback",
                          "value": "<uri>",
                          "description": "Client callback URL where TMI should redirect after successful OAuth completion with tokens as query parameters. If not provided, tokens are returned as JSON response."
                        },
                        {
                          "key": "state",
                          "value": "<string>",
                          "description": "CSRF protection state parameter. Recommended for security. Will be included in the callback response."
                        },
                        {
                          "key": "login_hint",
                          "value": "F2ewS61yb5G-",
                          "description": "User identity hint for test OAuth provider. Allows specifying a desired user identity for testing and automation. Only supported by the test provider (ignored by production providers like Google, GitHub, etc.). Must be 3-20 characters, alphanumeric and hyphens only."
                        },
                        {
                          "key": "scope",
                          "value": "<string>",
                          "description": "(Required) OAuth 2.0 scope parameter. For OpenID Connect, must include \"openid\". Supports \"profile\" and \"email\" scopes. Other scopes are silently ignored. Space-separated values."
                        }
                      ]
                    }
                  },
                  "status": "Found",
                  "code": 302,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Location",
                      "value": "<uri>",
                      "description": {
                        "content": "OAuth provider authorization URL with client_id, redirect_uri, response_type, scope, and state parameters",
                        "type": "text/plain"
                      }
                    }
                  ],
                  "cookie": [],
                  "body": null
                },
                {
                  "name": "Invalid provider or provider not configured",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/authorize?idp=<string>&client_callback=<uri>&state=<string>&login_hint=F2ewS61yb5G-&scope=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "authorize"
                      ],
                      "query": [
                        {
                          "key": "idp",
                          "value": "<string>",
                          "description": "OAuth provider identifier. Defaults to 'test' provider in non-production builds if not specified."
                        },
                        {
                          "key": "client_callback",
                          "value": "<uri>",
                          "description": "Client callback URL where TMI should redirect after successful OAuth completion with tokens as query parameters. If not provided, tokens are returned as JSON response."
                        },
                        {
                          "key": "state",
                          "value": "<string>",
                          "description": "CSRF protection state parameter. Recommended for security. Will be included in the callback response."
                        },
                        {
                          "key": "login_hint",
                          "value": "F2ewS61yb5G-",
                          "description": "User identity hint for test OAuth provider. Allows specifying a desired user identity for testing and automation. Only supported by the test provider (ignored by production providers like Google, GitHub, etc.). Must be 3-20 characters, alphanumeric and hyphens only."
                        },
                        {
                          "key": "scope",
                          "value": "<string>",
                          "description": "(Required) OAuth 2.0 scope parameter. For OpenID Connect, must include \"openid\". Supports \"profile\" and \"email\" scopes. Other scopes are silently ignored. Space-separated values."
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Internal server error generating authorization URL",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/authorize?idp=<string>&client_callback=<uri>&state=<string>&login_hint=F2ewS61yb5G-&scope=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "authorize"
                      ],
                      "query": [
                        {
                          "key": "idp",
                          "value": "<string>",
                          "description": "OAuth provider identifier. Defaults to 'test' provider in non-production builds if not specified."
                        },
                        {
                          "key": "client_callback",
                          "value": "<uri>",
                          "description": "Client callback URL where TMI should redirect after successful OAuth completion with tokens as query parameters. If not provided, tokens are returned as JSON response."
                        },
                        {
                          "key": "state",
                          "value": "<string>",
                          "description": "CSRF protection state parameter. Recommended for security. Will be included in the callback response."
                        },
                        {
                          "key": "login_hint",
                          "value": "F2ewS61yb5G-",
                          "description": "User identity hint for test OAuth provider. Allows specifying a desired user identity for testing and automation. Only supported by the test provider (ignored by production providers like Google, GitHub, etc.). Must be 3-20 characters, alphanumeric and hyphens only."
                        },
                        {
                          "key": "scope",
                          "value": "<string>",
                          "description": "(Required) OAuth 2.0 scope parameter. For OpenID Connect, must include \"openid\". Supports \"profile\" and \"email\" scopes. Other scopes are silently ignored. Space-separated values."
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is valid\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([302, 400, 500]);",
                      "});",
                      "",
                      "pm.test(\"Response time is less than 1000ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Type header\", function () {",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Response is valid JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "// OAuth endpoint specific tests",
                      "",
                      "pm.test(\"Error response has proper structure\", function () {",
                      "    if (pm.response.code >= 400) {",
                      "        const jsonData = pm.response.json();",
                      "        pm.expect(jsonData).to.have.property(\"error\");",
                      "    }",
                      "});",
                      "",
                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                      "});",
                      "",
                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                      "});",
                      "",
                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "token",
          "item": [
            {
              "name": "Exchange OAuth authorization code for JWT tokens",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"code\": \"<string>\",\n  \"redirect_uri\": \"<uri>\",\n  \"state\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/oauth2/token?idp=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "oauth2",
                    "token"
                  ],
                  "query": [
                    {
                      "key": "idp",
                      "value": "<string>",
                      "description": "OAuth provider identifier. Defaults to 'test' provider in non-production builds if not specified."
                    }
                  ]
                },
                "description": "Provider-neutral endpoint to exchange OAuth authorization codes for TMI JWT tokens. Supports Google, GitHub, and Microsoft OAuth providers."
              },
              "response": [
                {
                  "name": "OAuth exchange successful, TMI JWT tokens issued",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"code\": \"<string>\",\n  \"redirect_uri\": \"<uri>\",\n  \"state\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/token?idp=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "token"
                      ],
                      "query": [
                        {
                          "key": "idp",
                          "value": "<string>",
                          "description": "OAuth provider identifier. Defaults to 'test' provider in non-production builds if not specified."
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"access_token\": \"<string>\",\n  \"refresh_token\": \"<string>\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": \"<integer>\"\n}"
                },
                {
                  "name": "Bad request - invalid provider, missing parameters, or invalid state",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"code\": \"<string>\",\n  \"redirect_uri\": \"<uri>\",\n  \"state\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/token?idp=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "token"
                      ],
                      "query": [
                        {
                          "key": "idp",
                          "value": "<string>",
                          "description": "OAuth provider identifier. Defaults to 'test' provider in non-production builds if not specified."
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Internal server error - OAuth provider communication failed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"code\": \"<string>\",\n  \"redirect_uri\": \"<uri>\",\n  \"state\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/token?idp=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "token"
                      ],
                      "query": [
                        {
                          "key": "idp",
                          "value": "<string>",
                          "description": "OAuth provider identifier. Defaults to 'test' provider in non-production builds if not specified."
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is valid\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 500]);",
                      "});",
                      "",
                      "pm.test(\"Response time is less than 1000ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Type header\", function () {",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Response is valid JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "// OAuth endpoint specific tests",
                      "pm.test(\"Token response contains required fields\", function () {",
                      "    if (pm.response.code === 200) {",
                      "        const jsonData = pm.response.json();",
                      "        pm.expect(jsonData).to.have.property(\"access_token\");",
                      "        pm.expect(jsonData).to.have.property(\"token_type\");",
                      "    }",
                      "});",
                      "",
                      "pm.test(\"Error response has proper structure\", function () {",
                      "    if (pm.response.code >= 400) {",
                      "        const jsonData = pm.response.json();",
                      "        pm.expect(jsonData).to.have.property(\"error\");",
                      "    }",
                      "});",
                      "",
                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                      "});",
                      "",
                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                      "});",
                      "",
                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "refresh",
          "item": [
            {
              "name": "Refresh JWT token",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"refresh_token\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/oauth2/refresh",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "oauth2",
                    "refresh"
                  ]
                },
                "description": "Exchanges a refresh token for a new JWT access token"
              },
              "response": [
                {
                  "name": "New JWT issued successfully",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"refresh_token\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/refresh",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "refresh"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"access_token\": \"<string>\",\n  \"refresh_token\": \"<string>\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": \"<integer>\"\n}"
                },
                {
                  "name": "Bad request - missing or invalid refresh token",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"refresh_token\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/refresh",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "refresh"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Unauthorized - invalid or expired refresh token",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"refresh_token\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/refresh",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "refresh"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Internal server error",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"refresh_token\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/refresh",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "refresh"
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is valid\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 401, 500]);",
                      "});",
                      "",
                      "pm.test(\"Response time is less than 1000ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Type header\", function () {",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Response is valid JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "pm.test(\"Error response has proper structure\", function () {",
                      "    if (pm.response.code >= 400) {",
                      "        const jsonData = pm.response.json();",
                      "        pm.expect(jsonData).to.have.property(\"error\");",
                      "    }",
                      "});",
                      "",
                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                      "});",
                      "",
                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                      "});",
                      "",
                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "userinfo",
          "item": [
            {
              "name": "Get current user information",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/oauth2/userinfo",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "oauth2",
                    "userinfo"
                  ]
                },
                "description": "Returns information about the currently authenticated user"
              },
              "response": [
                {
                  "name": "Current user information",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/userinfo",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "userinfo"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"email\": \"<email>\",\n  \"name\": \"<string>\",\n  \"providers\": [\n    {\n      \"provider\": \"<string>\",\n      \"is_primary\": \"<boolean>\"\n    },\n    {\n      \"provider\": \"<string>\",\n      \"is_primary\": \"<boolean>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/userinfo",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "userinfo"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/userinfo",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "userinfo"
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is valid\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 500]);",
                      "});",
                      "",
                      "pm.test(\"Response time is less than 1000ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Type header\", function () {",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Response is valid JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "pm.test(\"Error response has proper structure\", function () {",
                      "    if (pm.response.code >= 400) {",
                      "        const jsonData = pm.response.json();",
                      "        pm.expect(jsonData).to.have.property(\"error\");",
                      "    }",
                      "});",
                      "",
                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                      "});",
                      "",
                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                      "});",
                      "",
                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "callback",
          "item": [
            {
              "name": "Handle OAuth callback",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/oauth2/callback?code=<string>&state=<string>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "oauth2",
                    "callback"
                  ],
                  "query": [
                    {
                      "key": "code",
                      "value": "<string>",
                      "description": "(Required) Authorization code from the OAuth provider"
                    },
                    {
                      "key": "state",
                      "value": "<string>",
                      "description": "Optional state parameter for CSRF protection"
                    }
                  ]
                },
                "description": "Exchanges OAuth authorization code for JWT tokens. If client_callback was provided during authorization, redirects to client with tokens. Otherwise returns tokens as JSON response."
              },
              "response": [
                {
                  "name": "JWT tokens issued successfully (legacy mode when no client_callback provided)",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/callback?code=<string>&state=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "callback"
                      ],
                      "query": [
                        {
                          "key": "code",
                          "value": "<string>",
                          "description": "(Required) Authorization code from the OAuth provider"
                        },
                        {
                          "key": "state",
                          "value": "<string>",
                          "description": "Optional state parameter for CSRF protection"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"access_token\": \"<string>\",\n  \"refresh_token\": \"<string>\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": \"<integer>\"\n}"
                },
                {
                  "name": "Redirect to client callback URL with tokens (when client_callback was provided)",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/callback?code=<string>&state=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "callback"
                      ],
                      "query": [
                        {
                          "key": "code",
                          "value": "<string>",
                          "description": "(Required) Authorization code from the OAuth provider"
                        },
                        {
                          "key": "state",
                          "value": "<string>",
                          "description": "Optional state parameter for CSRF protection"
                        }
                      ]
                    }
                  },
                  "status": "Found",
                  "code": 302,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Location",
                      "value": "<uri>",
                      "description": {
                        "content": "Client callback URL with access_token, refresh_token, expires_in, token_type, and state as query parameters",
                        "type": "text/plain"
                      }
                    }
                  ],
                  "cookie": [],
                  "body": null
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/callback?code=<string>&state=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "callback"
                      ],
                      "query": [
                        {
                          "key": "code",
                          "value": "<string>",
                          "description": "(Required) Authorization code from the OAuth provider"
                        },
                        {
                          "key": "state",
                          "value": "<string>",
                          "description": "Optional state parameter for CSRF protection"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/callback?code=<string>&state=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "callback"
                      ],
                      "query": [
                        {
                          "key": "code",
                          "value": "<string>",
                          "description": "(Required) Authorization code from the OAuth provider"
                        },
                        {
                          "key": "state",
                          "value": "<string>",
                          "description": "Optional state parameter for CSRF protection"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/callback?code=<string>&state=<string>",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "callback"
                      ],
                      "query": [
                        {
                          "key": "code",
                          "value": "<string>",
                          "description": "(Required) Authorization code from the OAuth provider"
                        },
                        {
                          "key": "state",
                          "value": "<string>",
                          "description": "Optional state parameter for CSRF protection"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is valid\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 302, 400, 401, 500]);",
                      "});",
                      "",
                      "pm.test(\"Response time is less than 1000ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Type header\", function () {",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Response is valid JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "// OAuth endpoint specific tests",
                      "",
                      "pm.test(\"Error response has proper structure\", function () {",
                      "    if (pm.response.code >= 400) {",
                      "        const jsonData = pm.response.json();",
                      "        pm.expect(jsonData).to.have.property(\"error\");",
                      "    }",
                      "});",
                      "",
                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                      "});",
                      "",
                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                      "});",
                      "",
                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "revoke",
          "item": [
            {
              "name": "Logout user",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/oauth2/revoke",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "oauth2",
                    "revoke"
                  ]
                },
                "description": "Invalidates the user's JWT token by adding it to a blacklist, effectively ending the session. Once logged out, the token cannot be used for further authenticated requests until it naturally expires. The token blacklist is maintained in Redis with automatic cleanup based on token expiration times."
              },
              "response": [
                {
                  "name": "User logged out successfully. The JWT token has been invalidated and added to the blacklist.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/revoke",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "revoke"
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "X-Request-ID",
                      "value": "<string>",
                      "description": {
                        "content": "Unique request identifier for tracking",
                        "type": "text/plain"
                      }
                    }
                  ],
                  "cookie": [],
                  "body": null
                },
                {
                  "name": "Authentication failed - invalid, missing, or malformed token",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/revoke",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "revoke"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Internal server error - token blacklisting failed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/oauth2/revoke",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "oauth2",
                        "revoke"
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is valid\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([204, 401, 500]);",
                      "});",
                      "",
                      "pm.test(\"Response time is less than 1000ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Type header\", function () {",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Response is valid JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "pm.test(\"Error response has proper structure\", function () {",
                      "    if (pm.response.code >= 400) {",
                      "        const jsonData = pm.response.json();",
                      "        pm.expect(jsonData).to.have.property(\"error\");",
                      "    }",
                      "});",
                      "",
                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                      "});",
                      "",
                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                      "});",
                      "",
                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "collaboration",
      "item": [
        {
          "name": "sessions",
          "item": [
            {
              "name": "List active collaboration sessions",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/collaboration/sessions",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "collaboration",
                    "sessions"
                  ]
                },
                "description": "Returns all currently active collaboration sessions for diagrams. Clients can use this endpoint to discover existing sessions before connecting via WebSocket."
              },
              "response": [
                {
                  "name": "List of active collaboration sessions",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/collaboration/sessions",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "collaboration",
                        "sessions"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n  {\n    \"session_id\": \"<uuid>\",\n    \"host\": \"<string>\",\n    \"threat_model_id\": \"<uuid>\",\n    \"threat_model_name\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"diagram_name\": \"<string>\",\n    \"participants\": [\n      {\n        \"user\": {\n          \"user_id\": \"<string>\",\n          \"email\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"last_activity\": \"<dateTime>\",\n        \"permissions\": \"reader\"\n      },\n      {\n        \"user\": {\n          \"user_id\": \"<string>\",\n          \"email\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"last_activity\": \"<dateTime>\",\n        \"permissions\": \"writer\"\n      }\n    ],\n    \"websocket_url\": \"<string>\",\n    \"presenter\": \"<string>\"\n  },\n  {\n    \"session_id\": \"<uuid>\",\n    \"host\": \"<string>\",\n    \"threat_model_id\": \"<uuid>\",\n    \"threat_model_name\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"diagram_name\": \"<string>\",\n    \"participants\": [\n      {\n        \"user\": {\n          \"user_id\": \"<string>\",\n          \"email\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"last_activity\": \"<dateTime>\",\n        \"permissions\": \"writer\"\n      },\n      {\n        \"user\": {\n          \"user_id\": \"<string>\",\n          \"email\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"last_activity\": \"<dateTime>\",\n        \"permissions\": \"writer\"\n      }\n    ],\n    \"websocket_url\": \"<string>\",\n    \"presenter\": \"<string>\"\n  }\n]"
                },
                {
                  "name": "Authentication failed - invalid, missing, or malformed token",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/collaboration/sessions",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "collaboration",
                        "sessions"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Internal server error",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/collaboration/sessions",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "collaboration",
                        "sessions"
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is valid\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 500]);",
                      "});",
                      "",
                      "pm.test(\"Response time is less than 1000ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Type header\", function () {",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Response is valid JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "pm.test(\"Error response has proper structure\", function () {",
                      "    if (pm.response.code >= 400) {",
                      "        const jsonData = pm.response.json();",
                      "        pm.expect(jsonData).to.have.property(\"error\");",
                      "    }",
                      "});",
                      "",
                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                      "});",
                      "",
                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                      "});",
                      "",
                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "threat_models",
      "item": [
        {
          "name": "{threat_model_id}",
          "item": [
            {
              "name": "threats",
              "item": [
                {
                  "name": "{threat_id}",
                  "item": [
                    {
                      "name": "metadata",
                      "item": [
                        {
                          "name": "{key}",
                          "item": [
                            {
                              "name": "Get threat metadata by key",
                              "request": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/:key",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "threats",
                                    ":threat_id",
                                    "metadata",
                                    ":key"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the threat model (UUID)"
                                    },
                                    {
                                      "key": "threat_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the threat (UUID)"
                                    },
                                    {
                                      "key": "key",
                                      "value": "<string>",
                                      "description": "(Required) Metadata key to retrieve"
                                    }
                                  ]
                                },
                                "description": "Returns a specific metadata entry by key for the specified threat"
                              },
                              "response": [
                                {
                                  "name": "Metadata entry",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "threats",
                                        ":threat_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "threat_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "OK",
                                  "code": 200,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "threats",
                                        ":threat_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "threat_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "threats",
                                        ":threat_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "threat_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Forbidden",
                                  "code": 403,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "threats",
                                        ":threat_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "threat_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "threats",
                                        ":threat_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "threat_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Internal Server Error",
                                  "code": 500,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                }
                              ],
                              "event": [
                                {
                                  "listen": "test",
                                  "script": {
                                    "exec": [
                                      "pm.test(\"Status code is valid\", function () {",
                                      "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 403, 404, 500]);",
                                      "});",
                                      "",
                                      "pm.test(\"Response time is less than 1000ms\", function () {",
                                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Type header\", function () {",
                                      "    pm.response.to.have.header(\"Content-Type\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response is valid JSON\", function () {",
                                      "    pm.response.to.be.json;",
                                      "});",
                                      "",
                                      "pm.test(\"Error response has proper structure\", function () {",
                                      "    if (pm.response.code >= 400) {",
                                      "        const jsonData = pm.response.json();",
                                      "        pm.expect(jsonData).to.have.property(\"error\");",
                                      "    }",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                      "});"
                                    ],
                                    "type": "text/javascript"
                                  }
                                }
                              ]
                            },
                            {
                              "name": "Update threat metadata by key",
                              "request": {
                                "method": "PUT",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"value\": \"<string>\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/:key",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "threats",
                                    ":threat_id",
                                    "metadata",
                                    ":key"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the threat model (UUID)"
                                    },
                                    {
                                      "key": "threat_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the threat (UUID)"
                                    },
                                    {
                                      "key": "key",
                                      "value": "<string>",
                                      "description": "(Required) Metadata key to update"
                                    }
                                  ]
                                },
                                "description": "Updates a specific metadata entry by key for the specified threat"
                              },
                              "response": [
                                {
                                  "name": "Metadata entry updated successfully",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "threats",
                                        ":threat_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "threat_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "OK",
                                  "code": 200,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "threats",
                                        ":threat_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "threat_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Bad Request",
                                  "code": 400,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "threats",
                                        ":threat_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "threat_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "threats",
                                        ":threat_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "threat_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Forbidden",
                                  "code": 403,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "threats",
                                        ":threat_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "threat_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "threats",
                                        ":threat_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "threat_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Internal Server Error",
                                  "code": 500,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                }
                              ],
                              "event": [
                                {
                                  "listen": "test",
                                  "script": {
                                    "exec": [
                                      "pm.test(\"Status code is valid\", function () {",
                                      "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 401, 403, 404, 500]);",
                                      "});",
                                      "",
                                      "pm.test(\"Response time is less than 1000ms\", function () {",
                                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Type header\", function () {",
                                      "    pm.response.to.have.header(\"Content-Type\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response is valid JSON\", function () {",
                                      "    pm.response.to.be.json;",
                                      "});",
                                      "",
                                      "pm.test(\"Error response has proper structure\", function () {",
                                      "    if (pm.response.code >= 400) {",
                                      "        const jsonData = pm.response.json();",
                                      "        pm.expect(jsonData).to.have.property(\"error\");",
                                      "    }",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                      "});"
                                    ],
                                    "type": "text/javascript"
                                  }
                                }
                              ]
                            },
                            {
                              "name": "Delete threat metadata by key",
                              "request": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/:key",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "threats",
                                    ":threat_id",
                                    "metadata",
                                    ":key"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the threat model (UUID)"
                                    },
                                    {
                                      "key": "threat_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the threat (UUID)"
                                    },
                                    {
                                      "key": "key",
                                      "value": "<string>",
                                      "description": "(Required) Metadata key to delete"
                                    }
                                  ]
                                },
                                "description": "Deletes a specific metadata entry by key for the specified threat"
                              },
                              "response": [
                                {
                                  "name": "Metadata entry deleted successfully",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "threats",
                                        ":threat_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "threat_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "No Content",
                                  "code": 204,
                                  "_postman_previewlanguage": "text",
                                  "header": [],
                                  "cookie": [],
                                  "body": null
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "threats",
                                        ":threat_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "threat_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "threats",
                                        ":threat_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "threat_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Forbidden",
                                  "code": 403,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "threats",
                                        ":threat_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "threat_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "threats",
                                        ":threat_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "threat_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Internal Server Error",
                                  "code": 500,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                }
                              ],
                              "event": [
                                {
                                  "listen": "test",
                                  "script": {
                                    "exec": [
                                      "pm.test(\"Status code is valid\", function () {",
                                      "    pm.expect(pm.response.code).to.be.oneOf([204, 401, 403, 404, 500]);",
                                      "});",
                                      "",
                                      "pm.test(\"Response time is less than 1000ms\", function () {",
                                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                      "});",
                                      "",
                                      "pm.test(\"Response is valid JSON\", function () {",
                                      "    pm.response.to.be.json;",
                                      "});",
                                      "",
                                      "pm.test(\"Error response has proper structure\", function () {",
                                      "    if (pm.response.code >= 400) {",
                                      "        const jsonData = pm.response.json();",
                                      "        pm.expect(jsonData).to.have.property(\"error\");",
                                      "    }",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                      "});"
                                    ],
                                    "type": "text/javascript"
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "name": "bulk",
                          "item": [
                            {
                              "name": "Bulk create threat metadata",
                              "request": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/bulk",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "threats",
                                    ":threat_id",
                                    "metadata",
                                    "bulk"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the threat model (UUID)"
                                    },
                                    {
                                      "key": "threat_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the threat (UUID)"
                                    }
                                  ]
                                },
                                "description": "Creates multiple metadata entries in a single operation for the specified threat"
                              },
                              "response": [
                                {
                                  "name": "Metadata entries created successfully",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "threats",
                                        ":threat_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "threat_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Created",
                                  "code": 201,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "[\n  {\n    \"key\": \"7wVCWI1C4r\",\n    \"value\": \"'Nv66\"\n  },\n  {\n    \"key\": \"1bc\",\n    \"value\": \")X7mee8Z\"\n  }\n]"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "threats",
                                        ":threat_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "threat_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Bad Request",
                                  "code": 400,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "threats",
                                        ":threat_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "threat_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "threats",
                                        ":threat_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "threat_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Forbidden",
                                  "code": 403,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "threats",
                                        ":threat_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "threat_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "threats",
                                        ":threat_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "threat_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Internal Server Error",
                                  "code": 500,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                }
                              ],
                              "event": [
                                {
                                  "listen": "test",
                                  "script": {
                                    "exec": [
                                      "pm.test(\"Status code is valid\", function () {",
                                      "    pm.expect(pm.response.code).to.be.oneOf([201, 400, 401, 403, 404, 500]);",
                                      "});",
                                      "",
                                      "pm.test(\"Response time is less than 1000ms\", function () {",
                                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Type header\", function () {",
                                      "    pm.response.to.have.header(\"Content-Type\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response is valid JSON\", function () {",
                                      "    pm.response.to.be.json;",
                                      "});",
                                      "",
                                      "pm.test(\"Error response has proper structure\", function () {",
                                      "    if (pm.response.code >= 400) {",
                                      "        const jsonData = pm.response.json();",
                                      "        pm.expect(jsonData).to.have.property(\"error\");",
                                      "    }",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                      "});"
                                    ],
                                    "type": "text/javascript"
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "name": "Get threat metadata",
                          "request": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id",
                                "metadata"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the threat model (UUID)"
                                },
                                {
                                  "key": "threat_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the threat (UUID)"
                                }
                              ]
                            },
                            "description": "Returns all metadata key-value pairs for the specified threat"
                          },
                          "response": [
                            {
                              "name": "Threat metadata list",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "threats",
                                    ":threat_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "threat_id"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "[\n  {\n    \"key\": \"7wVCWI1C4r\",\n    \"value\": \"'Nv66\"\n  },\n  {\n    \"key\": \"1bc\",\n    \"value\": \")X7mee8Z\"\n  }\n]"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "threats",
                                    ":threat_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "threat_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "threats",
                                    ":threat_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "threat_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "threats",
                                    ":threat_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "threat_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "threats",
                                    ":threat_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "threat_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Internal Server Error",
                              "code": 500,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"Status code is valid\", function () {",
                                  "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 403, 404, 500]);",
                                  "});",
                                  "",
                                  "pm.test(\"Response time is less than 1000ms\", function () {",
                                  "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Type header\", function () {",
                                  "    pm.response.to.have.header(\"Content-Type\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response is valid JSON\", function () {",
                                  "    pm.response.to.be.json;",
                                  "});",
                                  "",
                                  "pm.test(\"Error response has proper structure\", function () {",
                                  "    if (pm.response.code >= 400) {",
                                  "        const jsonData = pm.response.json();",
                                  "        pm.expect(jsonData).to.have.property(\"error\");",
                                  "    }",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Frame-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Referrer-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Permissions-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ]
                        },
                        {
                          "name": "Create threat metadata",
                          "request": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id",
                                "metadata"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the threat model (UUID)"
                                },
                                {
                                  "key": "threat_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the threat (UUID)"
                                }
                              ]
                            },
                            "description": "Creates new metadata entry for the specified threat"
                          },
                          "response": [
                            {
                              "name": "Metadata entry created successfully",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "threats",
                                    ":threat_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "threat_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Created",
                              "code": 201,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "threats",
                                    ":threat_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "threat_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Bad Request",
                              "code": 400,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "threats",
                                    ":threat_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "threat_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "threats",
                                    ":threat_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "threat_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "threats",
                                    ":threat_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "threat_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "threats",
                                    ":threat_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "threat_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Internal Server Error",
                              "code": 500,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"Status code is valid\", function () {",
                                  "    pm.expect(pm.response.code).to.be.oneOf([201, 400, 401, 403, 404, 500]);",
                                  "});",
                                  "",
                                  "pm.test(\"Response time is less than 1000ms\", function () {",
                                  "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Type header\", function () {",
                                  "    pm.response.to.have.header(\"Content-Type\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response is valid JSON\", function () {",
                                  "    pm.response.to.be.json;",
                                  "});",
                                  "",
                                  "pm.test(\"Error response has proper structure\", function () {",
                                  "    if (pm.response.code >= 400) {",
                                  "        const jsonData = pm.response.json();",
                                  "        pm.expect(jsonData).to.have.property(\"error\");",
                                  "    }",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Frame-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Referrer-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Permissions-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Get a specific threat",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "threats",
                            ":threat_id"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat model (UUID)"
                            },
                            {
                              "key": "threat_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat (UUID)"
                            }
                          ]
                        },
                        "description": "Returns details of a specific threat within the threat model"
                      },
                      "response": [
                        {
                          "name": "Threat details",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "threat_id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"name\": \"<string>\",\n  \"severity\": \"Medium\",\n  \"priority\": \"<string>\",\n  \"mitigated\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"threat_type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mitigation\": \"<string>\",\n  \"diagram_id\": \"<uuid>\",\n  \"cell_id\": \"<uuid>\",\n  \"score\": \"<number>\",\n  \"issue_url\": \"<uri>\",\n  \"metadata\": [\n    {\n      \"key\": \"QzK5E\",\n      \"value\": \"K`p\"\n    },\n    {\n      \"key\": \"DEkAd:9185\",\n      \"value\": \"w}9s47X\"\n    }\n  ],\n  \"id\": \"<uuid>\",\n  \"threat_model_id\": \"<uuid>\",\n  \"created_at\": \"<dateTime>\",\n  \"modified_at\": \"<dateTime>\"\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "threat_id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "threat_id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "threat_id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "threat_id"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is valid\", function () {",
                              "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 403, 404, 500]);",
                              "});",
                              "",
                              "pm.test(\"Response time is less than 1000ms\", function () {",
                              "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Type header\", function () {",
                              "    pm.response.to.have.header(\"Content-Type\");",
                              "});",
                              "",
                              "pm.test(\"Response is valid JSON\", function () {",
                              "    pm.response.to.be.json;",
                              "});",
                              "",
                              "pm.test(\"Error response has proper structure\", function () {",
                              "    if (pm.response.code >= 400) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"error\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-Frame-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-XSS-Protection header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Security-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                              "});",
                              "",
                              "pm.test(\"Response has Referrer-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                              "});",
                              "",
                              "pm.test(\"Response has Permissions-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ]
                    },
                    {
                      "name": "Update a threat",
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"severity\": \"None\",\n  \"priority\": \"<string>\",\n  \"mitigated\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"threat_type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mitigation\": \"<string>\",\n  \"diagram_id\": \"<uuid>\",\n  \"cell_id\": \"<uuid>\",\n  \"score\": \"<number>\",\n  \"issue_url\": \"<uri>\",\n  \"metadata\": [\n    {\n      \"key\": \"jlQju\",\n      \"value\": \"RV|}p|qZ@b\"\n    },\n    {\n      \"key\": \"kw\",\n      \"value\": \"vFDD,89[\"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "threats",
                            ":threat_id"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat model (UUID)"
                            },
                            {
                              "key": "threat_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat (UUID)"
                            }
                          ]
                        },
                        "description": "Updates a specific threat within the threat model"
                      },
                      "response": [
                        {
                          "name": "Threat updated successfully",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"name\": \"<string>\",\n  \"severity\": \"None\",\n  \"priority\": \"<string>\",\n  \"mitigated\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"threat_type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mitigation\": \"<string>\",\n  \"diagram_id\": \"<uuid>\",\n  \"cell_id\": \"<uuid>\",\n  \"score\": \"<number>\",\n  \"issue_url\": \"<uri>\",\n  \"metadata\": [\n    {\n      \"key\": \"jlQju\",\n      \"value\": \"RV|}p|qZ@b\"\n    },\n    {\n      \"key\": \"kw\",\n      \"value\": \"vFDD,89[\"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "threat_id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"name\": \"<string>\",\n  \"severity\": \"Medium\",\n  \"priority\": \"<string>\",\n  \"mitigated\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"threat_type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mitigation\": \"<string>\",\n  \"diagram_id\": \"<uuid>\",\n  \"cell_id\": \"<uuid>\",\n  \"score\": \"<number>\",\n  \"issue_url\": \"<uri>\",\n  \"metadata\": [\n    {\n      \"key\": \"QzK5E\",\n      \"value\": \"K`p\"\n    },\n    {\n      \"key\": \"DEkAd:9185\",\n      \"value\": \"w}9s47X\"\n    }\n  ],\n  \"id\": \"<uuid>\",\n  \"threat_model_id\": \"<uuid>\",\n  \"created_at\": \"<dateTime>\",\n  \"modified_at\": \"<dateTime>\"\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"name\": \"<string>\",\n  \"severity\": \"None\",\n  \"priority\": \"<string>\",\n  \"mitigated\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"threat_type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mitigation\": \"<string>\",\n  \"diagram_id\": \"<uuid>\",\n  \"cell_id\": \"<uuid>\",\n  \"score\": \"<number>\",\n  \"issue_url\": \"<uri>\",\n  \"metadata\": [\n    {\n      \"key\": \"jlQju\",\n      \"value\": \"RV|}p|qZ@b\"\n    },\n    {\n      \"key\": \"kw\",\n      \"value\": \"vFDD,89[\"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "threat_id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"name\": \"<string>\",\n  \"severity\": \"None\",\n  \"priority\": \"<string>\",\n  \"mitigated\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"threat_type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mitigation\": \"<string>\",\n  \"diagram_id\": \"<uuid>\",\n  \"cell_id\": \"<uuid>\",\n  \"score\": \"<number>\",\n  \"issue_url\": \"<uri>\",\n  \"metadata\": [\n    {\n      \"key\": \"jlQju\",\n      \"value\": \"RV|}p|qZ@b\"\n    },\n    {\n      \"key\": \"kw\",\n      \"value\": \"vFDD,89[\"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "threat_id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"name\": \"<string>\",\n  \"severity\": \"None\",\n  \"priority\": \"<string>\",\n  \"mitigated\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"threat_type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mitigation\": \"<string>\",\n  \"diagram_id\": \"<uuid>\",\n  \"cell_id\": \"<uuid>\",\n  \"score\": \"<number>\",\n  \"issue_url\": \"<uri>\",\n  \"metadata\": [\n    {\n      \"key\": \"jlQju\",\n      \"value\": \"RV|}p|qZ@b\"\n    },\n    {\n      \"key\": \"kw\",\n      \"value\": \"vFDD,89[\"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "threat_id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"name\": \"<string>\",\n  \"severity\": \"None\",\n  \"priority\": \"<string>\",\n  \"mitigated\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"threat_type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mitigation\": \"<string>\",\n  \"diagram_id\": \"<uuid>\",\n  \"cell_id\": \"<uuid>\",\n  \"score\": \"<number>\",\n  \"issue_url\": \"<uri>\",\n  \"metadata\": [\n    {\n      \"key\": \"jlQju\",\n      \"value\": \"RV|}p|qZ@b\"\n    },\n    {\n      \"key\": \"kw\",\n      \"value\": \"vFDD,89[\"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "threat_id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"name\": \"<string>\",\n  \"severity\": \"None\",\n  \"priority\": \"<string>\",\n  \"mitigated\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"threat_type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mitigation\": \"<string>\",\n  \"diagram_id\": \"<uuid>\",\n  \"cell_id\": \"<uuid>\",\n  \"score\": \"<number>\",\n  \"issue_url\": \"<uri>\",\n  \"metadata\": [\n    {\n      \"key\": \"jlQju\",\n      \"value\": \"RV|}p|qZ@b\"\n    },\n    {\n      \"key\": \"kw\",\n      \"value\": \"vFDD,89[\"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "threat_id"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is valid\", function () {",
                              "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 401, 403, 404, 500]);",
                              "});",
                              "",
                              "pm.test(\"Response time is less than 1000ms\", function () {",
                              "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Type header\", function () {",
                              "    pm.response.to.have.header(\"Content-Type\");",
                              "});",
                              "",
                              "pm.test(\"Response is valid JSON\", function () {",
                              "    pm.response.to.be.json;",
                              "});",
                              "",
                              "pm.test(\"Error response has proper structure\", function () {",
                              "    if (pm.response.code >= 400) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"error\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-Frame-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-XSS-Protection header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Security-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                              "});",
                              "",
                              "pm.test(\"Response has Referrer-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                              "});",
                              "",
                              "pm.test(\"Response has Permissions-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ]
                    },
                    {
                      "name": "Partially update a threat",
                      "request": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json-patch+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  },\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "threats",
                            ":threat_id"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat model (UUID)"
                            },
                            {
                              "key": "threat_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat (UUID)"
                            }
                          ]
                        },
                        "description": "Applies JSON patch operations to a specific threat within the threat model"
                      },
                      "response": [
                        {
                          "name": "Threat patched successfully",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json-patch+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  },\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "threat_id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"name\": \"<string>\",\n  \"severity\": \"Medium\",\n  \"priority\": \"<string>\",\n  \"mitigated\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"threat_type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mitigation\": \"<string>\",\n  \"diagram_id\": \"<uuid>\",\n  \"cell_id\": \"<uuid>\",\n  \"score\": \"<number>\",\n  \"issue_url\": \"<uri>\",\n  \"metadata\": [\n    {\n      \"key\": \"QzK5E\",\n      \"value\": \"K`p\"\n    },\n    {\n      \"key\": \"DEkAd:9185\",\n      \"value\": \"w}9s47X\"\n    }\n  ],\n  \"id\": \"<uuid>\",\n  \"threat_model_id\": \"<uuid>\",\n  \"created_at\": \"<dateTime>\",\n  \"modified_at\": \"<dateTime>\"\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json-patch+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  },\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "threat_id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json-patch+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  },\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "threat_id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json-patch+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  },\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "threat_id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json-patch+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  },\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "threat_id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json-patch+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  },\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "threat_id"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is valid\", function () {",
                              "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 401, 403, 404, 500]);",
                              "});",
                              "",
                              "pm.test(\"Response time is less than 1000ms\", function () {",
                              "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Type header\", function () {",
                              "    pm.response.to.have.header(\"Content-Type\");",
                              "});",
                              "",
                              "pm.test(\"Response is valid JSON\", function () {",
                              "    pm.response.to.be.json;",
                              "});",
                              "",
                              "pm.test(\"Error response has proper structure\", function () {",
                              "    if (pm.response.code >= 400) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"error\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-Frame-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-XSS-Protection header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Security-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                              "});",
                              "",
                              "pm.test(\"Response has Referrer-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                              "});",
                              "",
                              "pm.test(\"Response has Permissions-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ]
                    },
                    {
                      "name": "Delete a threat",
                      "request": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "threats",
                            ":threat_id"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat model (UUID)"
                            },
                            {
                              "key": "threat_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat (UUID)"
                            }
                          ]
                        },
                        "description": "Deletes a specific threat from the threat model"
                      },
                      "response": [
                        {
                          "name": "Threat deleted successfully",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "threat_id"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": null
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "threat_id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "threat_id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "threat_id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/:threat_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                ":threat_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "threat_id"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is valid\", function () {",
                              "    pm.expect(pm.response.code).to.be.oneOf([204, 401, 403, 404, 500]);",
                              "});",
                              "",
                              "pm.test(\"Response time is less than 1000ms\", function () {",
                              "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                              "});",
                              "",
                              "pm.test(\"Response is valid JSON\", function () {",
                              "    pm.response.to.be.json;",
                              "});",
                              "",
                              "pm.test(\"Error response has proper structure\", function () {",
                              "    if (pm.response.code >= 400) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"error\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-Frame-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-XSS-Protection header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Security-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                              "});",
                              "",
                              "pm.test(\"Response has Referrer-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                              "});",
                              "",
                              "pm.test(\"Response has Permissions-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "bulk",
                  "item": [
                    {
                      "name": "Bulk create threats",
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"None\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"u\",\n        \"value\": \"Y1GR8\"\n      },\n      {\n        \"key\": \"DDSHUGjH2zU\",\n        \"value\": \"iRZavK)(!X\"\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"High\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"Z8\",\n        \"value\": \"aR\"\n      },\n      {\n        \"key\": \"BWC4j\",\n        \"value\": \"TULl?\"\n      }\n    ]\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/bulk",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "threats",
                            "bulk"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat model (UUID)"
                            }
                          ]
                        },
                        "description": "Creates multiple threats in a single operation for the specified threat model"
                      },
                      "response": [
                        {
                          "name": "Threats created successfully",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"None\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"u\",\n        \"value\": \"Y1GR8\"\n      },\n      {\n        \"key\": \"DDSHUGjH2zU\",\n        \"value\": \"iRZavK)(!X\"\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"High\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"Z8\",\n        \"value\": \"aR\"\n      },\n      {\n        \"key\": \"BWC4j\",\n        \"value\": \"TULl?\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "[\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"High\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"vc\",\n        \"value\": \"6`cdO~Ge9\"\n      },\n      {\n        \"key\": \"D9dOa4qkgZw\",\n        \"value\": \"l.MSj\"\n      }\n    ],\n    \"id\": \"<uuid>\",\n    \"threat_model_id\": \"<uuid>\",\n    \"created_at\": \"<dateTime>\",\n    \"modified_at\": \"<dateTime>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"High\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"cHNA7MLn:q:\",\n        \"value\": \"gId\"\n      },\n      {\n        \"key\": \"KSor\",\n        \"value\": \" \"\n      }\n    ],\n    \"id\": \"<uuid>\",\n    \"threat_model_id\": \"<uuid>\",\n    \"created_at\": \"<dateTime>\",\n    \"modified_at\": \"<dateTime>\"\n  }\n]"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"None\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"u\",\n        \"value\": \"Y1GR8\"\n      },\n      {\n        \"key\": \"DDSHUGjH2zU\",\n        \"value\": \"iRZavK)(!X\"\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"High\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"Z8\",\n        \"value\": \"aR\"\n      },\n      {\n        \"key\": \"BWC4j\",\n        \"value\": \"TULl?\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"None\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"u\",\n        \"value\": \"Y1GR8\"\n      },\n      {\n        \"key\": \"DDSHUGjH2zU\",\n        \"value\": \"iRZavK)(!X\"\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"High\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"Z8\",\n        \"value\": \"aR\"\n      },\n      {\n        \"key\": \"BWC4j\",\n        \"value\": \"TULl?\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"None\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"u\",\n        \"value\": \"Y1GR8\"\n      },\n      {\n        \"key\": \"DDSHUGjH2zU\",\n        \"value\": \"iRZavK)(!X\"\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"High\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"Z8\",\n        \"value\": \"aR\"\n      },\n      {\n        \"key\": \"BWC4j\",\n        \"value\": \"TULl?\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"None\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"u\",\n        \"value\": \"Y1GR8\"\n      },\n      {\n        \"key\": \"DDSHUGjH2zU\",\n        \"value\": \"iRZavK)(!X\"\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"High\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"Z8\",\n        \"value\": \"aR\"\n      },\n      {\n        \"key\": \"BWC4j\",\n        \"value\": \"TULl?\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"None\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"u\",\n        \"value\": \"Y1GR8\"\n      },\n      {\n        \"key\": \"DDSHUGjH2zU\",\n        \"value\": \"iRZavK)(!X\"\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"High\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"Z8\",\n        \"value\": \"aR\"\n      },\n      {\n        \"key\": \"BWC4j\",\n        \"value\": \"TULl?\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is valid\", function () {",
                              "    pm.expect(pm.response.code).to.be.oneOf([201, 400, 401, 403, 404, 500]);",
                              "});",
                              "",
                              "pm.test(\"Response time is less than 1000ms\", function () {",
                              "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Type header\", function () {",
                              "    pm.response.to.have.header(\"Content-Type\");",
                              "});",
                              "",
                              "pm.test(\"Response is valid JSON\", function () {",
                              "    pm.response.to.be.json;",
                              "});",
                              "",
                              "pm.test(\"Error response has proper structure\", function () {",
                              "    if (pm.response.code >= 400) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"error\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-Frame-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-XSS-Protection header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Security-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                              "});",
                              "",
                              "pm.test(\"Response has Referrer-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                              "});",
                              "",
                              "pm.test(\"Response has Permissions-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ]
                    },
                    {
                      "name": "Bulk update threats",
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"Unknown\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"_8W6ACiC\",\n        \"value\": \"|0)YFc~&^\"\n      },\n      {\n        \"key\": \"N1Q5YQ\",\n        \"value\": \"M\"\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"Medium\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"RKFm3Q6bC\",\n        \"value\": \"cHM\"\n      },\n      {\n        \"key\": \"mPn\",\n        \"value\": \"6SPBqu\"\n      }\n    ]\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/bulk",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "threats",
                            "bulk"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat model (UUID)"
                            }
                          ]
                        },
                        "description": "Updates multiple threats in a single operation for the specified threat model"
                      },
                      "response": [
                        {
                          "name": "Threats updated successfully",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"Unknown\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"_8W6ACiC\",\n        \"value\": \"|0)YFc~&^\"\n      },\n      {\n        \"key\": \"N1Q5YQ\",\n        \"value\": \"M\"\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"Medium\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"RKFm3Q6bC\",\n        \"value\": \"cHM\"\n      },\n      {\n        \"key\": \"mPn\",\n        \"value\": \"6SPBqu\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "[\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"High\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"vc\",\n        \"value\": \"6`cdO~Ge9\"\n      },\n      {\n        \"key\": \"D9dOa4qkgZw\",\n        \"value\": \"l.MSj\"\n      }\n    ],\n    \"id\": \"<uuid>\",\n    \"threat_model_id\": \"<uuid>\",\n    \"created_at\": \"<dateTime>\",\n    \"modified_at\": \"<dateTime>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"High\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"cHNA7MLn:q:\",\n        \"value\": \"gId\"\n      },\n      {\n        \"key\": \"KSor\",\n        \"value\": \" \"\n      }\n    ],\n    \"id\": \"<uuid>\",\n    \"threat_model_id\": \"<uuid>\",\n    \"created_at\": \"<dateTime>\",\n    \"modified_at\": \"<dateTime>\"\n  }\n]"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"Unknown\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"_8W6ACiC\",\n        \"value\": \"|0)YFc~&^\"\n      },\n      {\n        \"key\": \"N1Q5YQ\",\n        \"value\": \"M\"\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"Medium\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"RKFm3Q6bC\",\n        \"value\": \"cHM\"\n      },\n      {\n        \"key\": \"mPn\",\n        \"value\": \"6SPBqu\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"Unknown\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"_8W6ACiC\",\n        \"value\": \"|0)YFc~&^\"\n      },\n      {\n        \"key\": \"N1Q5YQ\",\n        \"value\": \"M\"\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"Medium\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"RKFm3Q6bC\",\n        \"value\": \"cHM\"\n      },\n      {\n        \"key\": \"mPn\",\n        \"value\": \"6SPBqu\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"Unknown\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"_8W6ACiC\",\n        \"value\": \"|0)YFc~&^\"\n      },\n      {\n        \"key\": \"N1Q5YQ\",\n        \"value\": \"M\"\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"Medium\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"RKFm3Q6bC\",\n        \"value\": \"cHM\"\n      },\n      {\n        \"key\": \"mPn\",\n        \"value\": \"6SPBqu\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"Unknown\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"_8W6ACiC\",\n        \"value\": \"|0)YFc~&^\"\n      },\n      {\n        \"key\": \"N1Q5YQ\",\n        \"value\": \"M\"\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"Medium\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"RKFm3Q6bC\",\n        \"value\": \"cHM\"\n      },\n      {\n        \"key\": \"mPn\",\n        \"value\": \"6SPBqu\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"Unknown\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"_8W6ACiC\",\n        \"value\": \"|0)YFc~&^\"\n      },\n      {\n        \"key\": \"N1Q5YQ\",\n        \"value\": \"M\"\n      }\n    ]\n  },\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"Medium\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"RKFm3Q6bC\",\n        \"value\": \"cHM\"\n      },\n      {\n        \"key\": \"mPn\",\n        \"value\": \"6SPBqu\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is valid\", function () {",
                              "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 401, 403, 404, 500]);",
                              "});",
                              "",
                              "pm.test(\"Response time is less than 1000ms\", function () {",
                              "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Type header\", function () {",
                              "    pm.response.to.have.header(\"Content-Type\");",
                              "});",
                              "",
                              "pm.test(\"Response is valid JSON\", function () {",
                              "    pm.response.to.be.json;",
                              "});",
                              "",
                              "pm.test(\"Error response has proper structure\", function () {",
                              "    if (pm.response.code >= 400) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"error\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-Frame-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-XSS-Protection header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Security-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                              "});",
                              "",
                              "pm.test(\"Response has Referrer-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                              "});",
                              "",
                              "pm.test(\"Response has Permissions-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "batch",
                  "item": [
                    {
                      "name": "patch",
                      "item": [
                        {
                          "name": "Batch patch threats",
                          "request": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json-patch+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"patches\": [\n    {\n      \"threat_id\": \"<uuid>\",\n      \"operations\": [\n        {\n          \"op\": \"remove\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        },\n        {\n          \"op\": \"add\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        }\n      ]\n    },\n    {\n      \"threat_id\": \"<uuid>\",\n      \"operations\": [\n        {\n          \"op\": \"move\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        },\n        {\n          \"op\": \"remove\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        }\n      ]\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/batch/patch",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                "batch",
                                "patch"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the threat model (UUID)"
                                }
                              ]
                            },
                            "description": "Applies JSON Patch operations to multiple threats in a single operation"
                          },
                          "response": [
                            {
                              "name": "Threats patched successfully",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json-patch+json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"patches\": [\n    {\n      \"threat_id\": \"<uuid>\",\n      \"operations\": [\n        {\n          \"op\": \"remove\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        },\n        {\n          \"op\": \"add\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        }\n      ]\n    },\n    {\n      \"threat_id\": \"<uuid>\",\n      \"operations\": [\n        {\n          \"op\": \"move\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        },\n        {\n          \"op\": \"remove\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        }\n      ]\n    }\n  ]\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/batch/patch",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "threats",
                                    "batch",
                                    "patch"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "[\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"High\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"vc\",\n        \"value\": \"6`cdO~Ge9\"\n      },\n      {\n        \"key\": \"D9dOa4qkgZw\",\n        \"value\": \"l.MSj\"\n      }\n    ],\n    \"id\": \"<uuid>\",\n    \"threat_model_id\": \"<uuid>\",\n    \"created_at\": \"<dateTime>\",\n    \"modified_at\": \"<dateTime>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"severity\": \"High\",\n    \"priority\": \"<string>\",\n    \"mitigated\": \"<boolean>\",\n    \"status\": \"<string>\",\n    \"threat_type\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mitigation\": \"<string>\",\n    \"diagram_id\": \"<uuid>\",\n    \"cell_id\": \"<uuid>\",\n    \"score\": \"<number>\",\n    \"issue_url\": \"<uri>\",\n    \"metadata\": [\n      {\n        \"key\": \"cHNA7MLn:q:\",\n        \"value\": \"gId\"\n      },\n      {\n        \"key\": \"KSor\",\n        \"value\": \" \"\n      }\n    ],\n    \"id\": \"<uuid>\",\n    \"threat_model_id\": \"<uuid>\",\n    \"created_at\": \"<dateTime>\",\n    \"modified_at\": \"<dateTime>\"\n  }\n]"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json-patch+json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"patches\": [\n    {\n      \"threat_id\": \"<uuid>\",\n      \"operations\": [\n        {\n          \"op\": \"remove\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        },\n        {\n          \"op\": \"add\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        }\n      ]\n    },\n    {\n      \"threat_id\": \"<uuid>\",\n      \"operations\": [\n        {\n          \"op\": \"move\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        },\n        {\n          \"op\": \"remove\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        }\n      ]\n    }\n  ]\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/batch/patch",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "threats",
                                    "batch",
                                    "patch"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Bad Request",
                              "code": 400,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json-patch+json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"patches\": [\n    {\n      \"threat_id\": \"<uuid>\",\n      \"operations\": [\n        {\n          \"op\": \"remove\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        },\n        {\n          \"op\": \"add\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        }\n      ]\n    },\n    {\n      \"threat_id\": \"<uuid>\",\n      \"operations\": [\n        {\n          \"op\": \"move\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        },\n        {\n          \"op\": \"remove\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        }\n      ]\n    }\n  ]\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/batch/patch",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "threats",
                                    "batch",
                                    "patch"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json-patch+json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"patches\": [\n    {\n      \"threat_id\": \"<uuid>\",\n      \"operations\": [\n        {\n          \"op\": \"remove\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        },\n        {\n          \"op\": \"add\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        }\n      ]\n    },\n    {\n      \"threat_id\": \"<uuid>\",\n      \"operations\": [\n        {\n          \"op\": \"move\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        },\n        {\n          \"op\": \"remove\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        }\n      ]\n    }\n  ]\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/batch/patch",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "threats",
                                    "batch",
                                    "patch"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json-patch+json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"patches\": [\n    {\n      \"threat_id\": \"<uuid>\",\n      \"operations\": [\n        {\n          \"op\": \"remove\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        },\n        {\n          \"op\": \"add\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        }\n      ]\n    },\n    {\n      \"threat_id\": \"<uuid>\",\n      \"operations\": [\n        {\n          \"op\": \"move\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        },\n        {\n          \"op\": \"remove\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        }\n      ]\n    }\n  ]\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/batch/patch",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "threats",
                                    "batch",
                                    "patch"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json-patch+json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"patches\": [\n    {\n      \"threat_id\": \"<uuid>\",\n      \"operations\": [\n        {\n          \"op\": \"remove\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        },\n        {\n          \"op\": \"add\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        }\n      ]\n    },\n    {\n      \"threat_id\": \"<uuid>\",\n      \"operations\": [\n        {\n          \"op\": \"move\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        },\n        {\n          \"op\": \"remove\",\n          \"path\": \"<string>\",\n          \"value\": {\n            \"description\": \"Value to apply\"\n          }\n        }\n      ]\n    }\n  ]\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/batch/patch",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "threats",
                                    "batch",
                                    "patch"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Internal Server Error",
                              "code": 500,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"Status code is valid\", function () {",
                                  "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 401, 403, 404, 500]);",
                                  "});",
                                  "",
                                  "pm.test(\"Response time is less than 1000ms\", function () {",
                                  "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Type header\", function () {",
                                  "    pm.response.to.have.header(\"Content-Type\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response is valid JSON\", function () {",
                                  "    pm.response.to.be.json;",
                                  "});",
                                  "",
                                  "pm.test(\"Error response has proper structure\", function () {",
                                  "    if (pm.response.code >= 400) {",
                                  "        const jsonData = pm.response.json();",
                                  "        pm.expect(jsonData).to.have.property(\"error\");",
                                  "    }",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Frame-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Referrer-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Permissions-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Batch delete threats",
                      "request": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/batch?threat_ids=<uuid>",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "threats",
                            "batch"
                          ],
                          "query": [
                            {
                              "key": "threat_ids",
                              "value": "<uuid>",
                              "description": "(Required) Comma-separated list of threat IDs to delete (e.g., id1,id2,id3)"
                            }
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat model (UUID)"
                            }
                          ]
                        },
                        "description": "Deletes multiple threats in a single operation for the specified threat model"
                      },
                      "response": [
                        {
                          "name": "Threats deleted successfully",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/batch?threat_ids=<uuid>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                "batch"
                              ],
                              "query": [
                                {
                                  "key": "threat_ids",
                                  "value": "<uuid>",
                                  "description": "(Required) Comma-separated list of threat IDs to delete (e.g., id1,id2,id3)"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"deleted_count\": \"<integer>\",\n  \"deleted_ids\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/batch?threat_ids=<uuid>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                "batch"
                              ],
                              "query": [
                                {
                                  "key": "threat_ids",
                                  "value": "<uuid>",
                                  "description": "(Required) Comma-separated list of threat IDs to delete (e.g., id1,id2,id3)"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/batch?threat_ids=<uuid>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                "batch"
                              ],
                              "query": [
                                {
                                  "key": "threat_ids",
                                  "value": "<uuid>",
                                  "description": "(Required) Comma-separated list of threat IDs to delete (e.g., id1,id2,id3)"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/batch?threat_ids=<uuid>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                "batch"
                              ],
                              "query": [
                                {
                                  "key": "threat_ids",
                                  "value": "<uuid>",
                                  "description": "(Required) Comma-separated list of threat IDs to delete (e.g., id1,id2,id3)"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/batch?threat_ids=<uuid>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                "batch"
                              ],
                              "query": [
                                {
                                  "key": "threat_ids",
                                  "value": "<uuid>",
                                  "description": "(Required) Comma-separated list of threat IDs to delete (e.g., id1,id2,id3)"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats/batch?threat_ids=<uuid>",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "threats",
                                "batch"
                              ],
                              "query": [
                                {
                                  "key": "threat_ids",
                                  "value": "<uuid>",
                                  "description": "(Required) Comma-separated list of threat IDs to delete (e.g., id1,id2,id3)"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is valid\", function () {",
                              "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 401, 403, 404, 500]);",
                              "});",
                              "",
                              "pm.test(\"Response time is less than 1000ms\", function () {",
                              "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                              "});",
                              "",
                              "pm.test(\"Response is valid JSON\", function () {",
                              "    pm.response.to.be.json;",
                              "});",
                              "",
                              "pm.test(\"Error response has proper structure\", function () {",
                              "    if (pm.response.code >= 400) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"error\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-Frame-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-XSS-Protection header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Security-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                              "});",
                              "",
                              "pm.test(\"Response has Referrer-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                              "});",
                              "",
                              "pm.test(\"Response has Permissions-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "List threats in a threat model",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats?limit=20&offset=0",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id",
                        "threats"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "20",
                          "description": "Maximum number of threats to return"
                        },
                        {
                          "key": "offset",
                          "value": "0",
                          "description": "Number of threats to skip"
                        }
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier of the threat model (UUID)"
                        }
                      ]
                    },
                    "description": "Returns a paginated list of threats within the specified threat model"
                  },
                  "response": [
                    {
                      "name": "List of threats",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats?limit=20&offset=0",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "threats"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Maximum number of threats to return"
                            },
                            {
                              "key": "offset",
                              "value": "0",
                              "description": "Number of threats to skip"
                            }
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"threats\": [\n    {\n      \"name\": \"<string>\",\n      \"severity\": \"Medium\",\n      \"priority\": \"<string>\",\n      \"mitigated\": \"<boolean>\",\n      \"status\": \"<string>\",\n      \"threat_type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"mitigation\": \"<string>\",\n      \"diagram_id\": \"<uuid>\",\n      \"cell_id\": \"<uuid>\",\n      \"score\": \"<number>\",\n      \"issue_url\": \"<uri>\",\n      \"metadata\": [\n        {\n          \"key\": \"/C1W3iyjXvX\",\n          \"value\": \"W \"\n        },\n        {\n          \"key\": \"LP-:iaV\",\n          \"value\": \"\\\\SRwF\\\\j44P\"\n        }\n      ],\n      \"id\": \"<uuid>\",\n      \"threat_model_id\": \"<uuid>\",\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"severity\": \"None\",\n      \"priority\": \"<string>\",\n      \"mitigated\": \"<boolean>\",\n      \"status\": \"<string>\",\n      \"threat_type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"mitigation\": \"<string>\",\n      \"diagram_id\": \"<uuid>\",\n      \"cell_id\": \"<uuid>\",\n      \"score\": \"<number>\",\n      \"issue_url\": \"<uri>\",\n      \"metadata\": [\n        {\n          \"key\": \"sdFdo\",\n          \"value\": \"[;/|fpSsm\"\n        },\n        {\n          \"key\": \"N/VV15n_t2Q\",\n          \"value\": \"bMA#C\"\n        }\n      ],\n      \"id\": \"<uuid>\",\n      \"threat_model_id\": \"<uuid>\",\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\"\n    }\n  ],\n  \"total_count\": \"<integer>\"\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats?limit=20&offset=0",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "threats"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Maximum number of threats to return"
                            },
                            {
                              "key": "offset",
                              "value": "0",
                              "description": "Number of threats to skip"
                            }
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats?limit=20&offset=0",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "threats"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Maximum number of threats to return"
                            },
                            {
                              "key": "offset",
                              "value": "0",
                              "description": "Number of threats to skip"
                            }
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats?limit=20&offset=0",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "threats"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Maximum number of threats to return"
                            },
                            {
                              "key": "offset",
                              "value": "0",
                              "description": "Number of threats to skip"
                            }
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats?limit=20&offset=0",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "threats"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Maximum number of threats to return"
                            },
                            {
                              "key": "offset",
                              "value": "0",
                              "description": "Number of threats to skip"
                            }
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is valid\", function () {",
                          "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 403, 404, 500]);",
                          "});",
                          "",
                          "pm.test(\"Response time is less than 1000ms\", function () {",
                          "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                          "});",
                          "",
                          "pm.test(\"Response has Content-Type header\", function () {",
                          "    pm.response.to.have.header(\"Content-Type\");",
                          "});",
                          "",
                          "pm.test(\"Response is valid JSON\", function () {",
                          "    pm.response.to.be.json;",
                          "});",
                          "",
                          "pm.test(\"Error response has proper structure\", function () {",
                          "    if (pm.response.code >= 400) {",
                          "        const jsonData = pm.response.json();",
                          "        pm.expect(jsonData).to.have.property(\"error\");",
                          "    }",
                          "});",
                          "",
                          "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                          "});",
                          "",
                          "pm.test(\"Response has X-Frame-Options header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                          "});",
                          "",
                          "pm.test(\"Response has X-XSS-Protection header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                          "});",
                          "",
                          "pm.test(\"Response has Content-Security-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                          "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                          "});",
                          "",
                          "pm.test(\"Response has Referrer-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                          "});",
                          "",
                          "pm.test(\"Response has Permissions-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                          "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ]
                },
                {
                  "name": "Create a new threat",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"severity\": \"None\",\n  \"priority\": \"<string>\",\n  \"mitigated\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"threat_type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mitigation\": \"<string>\",\n  \"diagram_id\": \"<uuid>\",\n  \"cell_id\": \"<uuid>\",\n  \"score\": \"<number>\",\n  \"issue_url\": \"<uri>\",\n  \"metadata\": [\n    {\n      \"key\": \"jlQju\",\n      \"value\": \"RV|}p|qZ@b\"\n    },\n    {\n      \"key\": \"kw\",\n      \"value\": \"vFDD,89[\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id",
                        "threats"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier of the threat model (UUID)"
                        }
                      ]
                    },
                    "description": "Creates a new threat within the specified threat model"
                  },
                  "response": [
                    {
                      "name": "Threat created successfully",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"severity\": \"None\",\n  \"priority\": \"<string>\",\n  \"mitigated\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"threat_type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mitigation\": \"<string>\",\n  \"diagram_id\": \"<uuid>\",\n  \"cell_id\": \"<uuid>\",\n  \"score\": \"<number>\",\n  \"issue_url\": \"<uri>\",\n  \"metadata\": [\n    {\n      \"key\": \"jlQju\",\n      \"value\": \"RV|}p|qZ@b\"\n    },\n    {\n      \"key\": \"kw\",\n      \"value\": \"vFDD,89[\"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "threats"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"name\": \"<string>\",\n  \"severity\": \"Medium\",\n  \"priority\": \"<string>\",\n  \"mitigated\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"threat_type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mitigation\": \"<string>\",\n  \"diagram_id\": \"<uuid>\",\n  \"cell_id\": \"<uuid>\",\n  \"score\": \"<number>\",\n  \"issue_url\": \"<uri>\",\n  \"metadata\": [\n    {\n      \"key\": \"QzK5E\",\n      \"value\": \"K`p\"\n    },\n    {\n      \"key\": \"DEkAd:9185\",\n      \"value\": \"w}9s47X\"\n    }\n  ],\n  \"id\": \"<uuid>\",\n  \"threat_model_id\": \"<uuid>\",\n  \"created_at\": \"<dateTime>\",\n  \"modified_at\": \"<dateTime>\"\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"severity\": \"None\",\n  \"priority\": \"<string>\",\n  \"mitigated\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"threat_type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mitigation\": \"<string>\",\n  \"diagram_id\": \"<uuid>\",\n  \"cell_id\": \"<uuid>\",\n  \"score\": \"<number>\",\n  \"issue_url\": \"<uri>\",\n  \"metadata\": [\n    {\n      \"key\": \"jlQju\",\n      \"value\": \"RV|}p|qZ@b\"\n    },\n    {\n      \"key\": \"kw\",\n      \"value\": \"vFDD,89[\"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "threats"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"severity\": \"None\",\n  \"priority\": \"<string>\",\n  \"mitigated\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"threat_type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mitigation\": \"<string>\",\n  \"diagram_id\": \"<uuid>\",\n  \"cell_id\": \"<uuid>\",\n  \"score\": \"<number>\",\n  \"issue_url\": \"<uri>\",\n  \"metadata\": [\n    {\n      \"key\": \"jlQju\",\n      \"value\": \"RV|}p|qZ@b\"\n    },\n    {\n      \"key\": \"kw\",\n      \"value\": \"vFDD,89[\"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "threats"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"severity\": \"None\",\n  \"priority\": \"<string>\",\n  \"mitigated\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"threat_type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mitigation\": \"<string>\",\n  \"diagram_id\": \"<uuid>\",\n  \"cell_id\": \"<uuid>\",\n  \"score\": \"<number>\",\n  \"issue_url\": \"<uri>\",\n  \"metadata\": [\n    {\n      \"key\": \"jlQju\",\n      \"value\": \"RV|}p|qZ@b\"\n    },\n    {\n      \"key\": \"kw\",\n      \"value\": \"vFDD,89[\"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "threats"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"severity\": \"None\",\n  \"priority\": \"<string>\",\n  \"mitigated\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"threat_type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mitigation\": \"<string>\",\n  \"diagram_id\": \"<uuid>\",\n  \"cell_id\": \"<uuid>\",\n  \"score\": \"<number>\",\n  \"issue_url\": \"<uri>\",\n  \"metadata\": [\n    {\n      \"key\": \"jlQju\",\n      \"value\": \"RV|}p|qZ@b\"\n    },\n    {\n      \"key\": \"kw\",\n      \"value\": \"vFDD,89[\"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "threats"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"severity\": \"None\",\n  \"priority\": \"<string>\",\n  \"mitigated\": \"<boolean>\",\n  \"status\": \"<string>\",\n  \"threat_type\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mitigation\": \"<string>\",\n  \"diagram_id\": \"<uuid>\",\n  \"cell_id\": \"<uuid>\",\n  \"score\": \"<number>\",\n  \"issue_url\": \"<uri>\",\n  \"metadata\": [\n    {\n      \"key\": \"jlQju\",\n      \"value\": \"RV|}p|qZ@b\"\n    },\n    {\n      \"key\": \"kw\",\n      \"value\": \"vFDD,89[\"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/threats",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "threats"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is valid\", function () {",
                          "    pm.expect(pm.response.code).to.be.oneOf([201, 400, 401, 403, 404, 500]);",
                          "});",
                          "",
                          "pm.test(\"Response time is less than 1000ms\", function () {",
                          "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                          "});",
                          "",
                          "pm.test(\"Response has Content-Type header\", function () {",
                          "    pm.response.to.have.header(\"Content-Type\");",
                          "});",
                          "",
                          "pm.test(\"Response is valid JSON\", function () {",
                          "    pm.response.to.be.json;",
                          "});",
                          "",
                          "pm.test(\"Error response has proper structure\", function () {",
                          "    if (pm.response.code >= 400) {",
                          "        const jsonData = pm.response.json();",
                          "        pm.expect(jsonData).to.have.property(\"error\");",
                          "    }",
                          "});",
                          "",
                          "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                          "});",
                          "",
                          "pm.test(\"Response has X-Frame-Options header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                          "});",
                          "",
                          "pm.test(\"Response has X-XSS-Protection header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                          "});",
                          "",
                          "pm.test(\"Response has Content-Security-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                          "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                          "});",
                          "",
                          "pm.test(\"Response has Referrer-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                          "});",
                          "",
                          "pm.test(\"Response has Permissions-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                          "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "name": "documents",
              "item": [
                {
                  "name": "{document_id}",
                  "item": [
                    {
                      "name": "metadata",
                      "item": [
                        {
                          "name": "{key}",
                          "item": [
                            {
                              "name": "Get document metadata by key",
                              "request": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/:key",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "documents",
                                    ":document_id",
                                    "metadata",
                                    ":key"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the threat model (UUID)"
                                    },
                                    {
                                      "key": "document_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the document (UUID)"
                                    },
                                    {
                                      "key": "key",
                                      "value": "<string>",
                                      "description": "(Required) Metadata key to retrieve"
                                    }
                                  ]
                                },
                                "description": "Returns a specific metadata entry by key for the specified document"
                              },
                              "response": [
                                {
                                  "name": "Metadata entry",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "documents",
                                        ":document_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "document_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "OK",
                                  "code": 200,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "documents",
                                        ":document_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "document_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "documents",
                                        ":document_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "document_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Forbidden",
                                  "code": 403,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "documents",
                                        ":document_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "document_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "documents",
                                        ":document_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "document_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Internal Server Error",
                                  "code": 500,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                }
                              ],
                              "event": [
                                {
                                  "listen": "test",
                                  "script": {
                                    "exec": [
                                      "pm.test(\"Status code is valid\", function () {",
                                      "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 403, 404, 500]);",
                                      "});",
                                      "",
                                      "pm.test(\"Response time is less than 1000ms\", function () {",
                                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Type header\", function () {",
                                      "    pm.response.to.have.header(\"Content-Type\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response is valid JSON\", function () {",
                                      "    pm.response.to.be.json;",
                                      "});",
                                      "",
                                      "pm.test(\"Error response has proper structure\", function () {",
                                      "    if (pm.response.code >= 400) {",
                                      "        const jsonData = pm.response.json();",
                                      "        pm.expect(jsonData).to.have.property(\"error\");",
                                      "    }",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                      "});"
                                    ],
                                    "type": "text/javascript"
                                  }
                                }
                              ]
                            },
                            {
                              "name": "Update document metadata by key",
                              "request": {
                                "method": "PUT",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"value\": \"<string>\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/:key",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "documents",
                                    ":document_id",
                                    "metadata",
                                    ":key"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the threat model (UUID)"
                                    },
                                    {
                                      "key": "document_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the document (UUID)"
                                    },
                                    {
                                      "key": "key",
                                      "value": "<string>",
                                      "description": "(Required) Metadata key to update"
                                    }
                                  ]
                                },
                                "description": "Updates a specific metadata entry by key for the specified document"
                              },
                              "response": [
                                {
                                  "name": "Metadata entry updated successfully",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "documents",
                                        ":document_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "document_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "OK",
                                  "code": 200,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "documents",
                                        ":document_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "document_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Bad Request",
                                  "code": 400,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "documents",
                                        ":document_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "document_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "documents",
                                        ":document_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "document_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Forbidden",
                                  "code": 403,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "documents",
                                        ":document_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "document_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "documents",
                                        ":document_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "document_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Internal Server Error",
                                  "code": 500,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                }
                              ],
                              "event": [
                                {
                                  "listen": "test",
                                  "script": {
                                    "exec": [
                                      "pm.test(\"Status code is valid\", function () {",
                                      "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 401, 403, 404, 500]);",
                                      "});",
                                      "",
                                      "pm.test(\"Response time is less than 1000ms\", function () {",
                                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Type header\", function () {",
                                      "    pm.response.to.have.header(\"Content-Type\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response is valid JSON\", function () {",
                                      "    pm.response.to.be.json;",
                                      "});",
                                      "",
                                      "pm.test(\"Error response has proper structure\", function () {",
                                      "    if (pm.response.code >= 400) {",
                                      "        const jsonData = pm.response.json();",
                                      "        pm.expect(jsonData).to.have.property(\"error\");",
                                      "    }",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                      "});"
                                    ],
                                    "type": "text/javascript"
                                  }
                                }
                              ]
                            },
                            {
                              "name": "Delete document metadata by key",
                              "request": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/:key",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "documents",
                                    ":document_id",
                                    "metadata",
                                    ":key"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the threat model (UUID)"
                                    },
                                    {
                                      "key": "document_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the document (UUID)"
                                    },
                                    {
                                      "key": "key",
                                      "value": "<string>",
                                      "description": "(Required) Metadata key to delete"
                                    }
                                  ]
                                },
                                "description": "Deletes a specific metadata entry by key for the specified document"
                              },
                              "response": [
                                {
                                  "name": "Metadata entry deleted successfully",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "documents",
                                        ":document_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "document_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "No Content",
                                  "code": 204,
                                  "_postman_previewlanguage": "text",
                                  "header": [],
                                  "cookie": [],
                                  "body": null
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "documents",
                                        ":document_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "document_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "documents",
                                        ":document_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "document_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Forbidden",
                                  "code": 403,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "documents",
                                        ":document_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "document_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "documents",
                                        ":document_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "document_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Internal Server Error",
                                  "code": 500,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                }
                              ],
                              "event": [
                                {
                                  "listen": "test",
                                  "script": {
                                    "exec": [
                                      "pm.test(\"Status code is valid\", function () {",
                                      "    pm.expect(pm.response.code).to.be.oneOf([204, 401, 403, 404, 500]);",
                                      "});",
                                      "",
                                      "pm.test(\"Response time is less than 1000ms\", function () {",
                                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                      "});",
                                      "",
                                      "pm.test(\"Response is valid JSON\", function () {",
                                      "    pm.response.to.be.json;",
                                      "});",
                                      "",
                                      "pm.test(\"Error response has proper structure\", function () {",
                                      "    if (pm.response.code >= 400) {",
                                      "        const jsonData = pm.response.json();",
                                      "        pm.expect(jsonData).to.have.property(\"error\");",
                                      "    }",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                      "});"
                                    ],
                                    "type": "text/javascript"
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "name": "bulk",
                          "item": [
                            {
                              "name": "Bulk create document metadata",
                              "request": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/bulk",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "documents",
                                    ":document_id",
                                    "metadata",
                                    "bulk"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the threat model (UUID)"
                                    },
                                    {
                                      "key": "document_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the document (UUID)"
                                    }
                                  ]
                                },
                                "description": "Creates multiple metadata entries in a single operation for the specified document"
                              },
                              "response": [
                                {
                                  "name": "Metadata entries created successfully",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "documents",
                                        ":document_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "document_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Created",
                                  "code": 201,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "[\n  {\n    \"key\": \"7wVCWI1C4r\",\n    \"value\": \"'Nv66\"\n  },\n  {\n    \"key\": \"1bc\",\n    \"value\": \")X7mee8Z\"\n  }\n]"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "documents",
                                        ":document_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "document_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Bad Request",
                                  "code": 400,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "documents",
                                        ":document_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "document_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "documents",
                                        ":document_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "document_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Forbidden",
                                  "code": 403,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "documents",
                                        ":document_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "document_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "documents",
                                        ":document_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "document_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Internal Server Error",
                                  "code": 500,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                }
                              ],
                              "event": [
                                {
                                  "listen": "test",
                                  "script": {
                                    "exec": [
                                      "pm.test(\"Status code is valid\", function () {",
                                      "    pm.expect(pm.response.code).to.be.oneOf([201, 400, 401, 403, 404, 500]);",
                                      "});",
                                      "",
                                      "pm.test(\"Response time is less than 1000ms\", function () {",
                                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Type header\", function () {",
                                      "    pm.response.to.have.header(\"Content-Type\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response is valid JSON\", function () {",
                                      "    pm.response.to.be.json;",
                                      "});",
                                      "",
                                      "pm.test(\"Error response has proper structure\", function () {",
                                      "    if (pm.response.code >= 400) {",
                                      "        const jsonData = pm.response.json();",
                                      "        pm.expect(jsonData).to.have.property(\"error\");",
                                      "    }",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                      "});"
                                    ],
                                    "type": "text/javascript"
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "name": "Get document metadata",
                          "request": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                ":document_id",
                                "metadata"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the threat model (UUID)"
                                },
                                {
                                  "key": "document_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the document (UUID)"
                                }
                              ]
                            },
                            "description": "Returns all metadata key-value pairs for the specified document"
                          },
                          "response": [
                            {
                              "name": "Document metadata list",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "documents",
                                    ":document_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "document_id"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "[\n  {\n    \"key\": \"7wVCWI1C4r\",\n    \"value\": \"'Nv66\"\n  },\n  {\n    \"key\": \"1bc\",\n    \"value\": \")X7mee8Z\"\n  }\n]"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "documents",
                                    ":document_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "document_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "documents",
                                    ":document_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "document_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "documents",
                                    ":document_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "document_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "documents",
                                    ":document_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "document_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Internal Server Error",
                              "code": 500,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"Status code is valid\", function () {",
                                  "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 403, 404, 500]);",
                                  "});",
                                  "",
                                  "pm.test(\"Response time is less than 1000ms\", function () {",
                                  "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Type header\", function () {",
                                  "    pm.response.to.have.header(\"Content-Type\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response is valid JSON\", function () {",
                                  "    pm.response.to.be.json;",
                                  "});",
                                  "",
                                  "pm.test(\"Error response has proper structure\", function () {",
                                  "    if (pm.response.code >= 400) {",
                                  "        const jsonData = pm.response.json();",
                                  "        pm.expect(jsonData).to.have.property(\"error\");",
                                  "    }",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Frame-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Referrer-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Permissions-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ]
                        },
                        {
                          "name": "Create document metadata",
                          "request": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                ":document_id",
                                "metadata"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the threat model (UUID)"
                                },
                                {
                                  "key": "document_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the document (UUID)"
                                }
                              ]
                            },
                            "description": "Creates new metadata entry for the specified document"
                          },
                          "response": [
                            {
                              "name": "Metadata entry created successfully",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "documents",
                                    ":document_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "document_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Created",
                              "code": 201,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "documents",
                                    ":document_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "document_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Bad Request",
                              "code": 400,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "documents",
                                    ":document_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "document_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "documents",
                                    ":document_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "document_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "documents",
                                    ":document_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "document_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "documents",
                                    ":document_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "document_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Internal Server Error",
                              "code": 500,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"Status code is valid\", function () {",
                                  "    pm.expect(pm.response.code).to.be.oneOf([201, 400, 401, 403, 404, 500]);",
                                  "});",
                                  "",
                                  "pm.test(\"Response time is less than 1000ms\", function () {",
                                  "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Type header\", function () {",
                                  "    pm.response.to.have.header(\"Content-Type\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response is valid JSON\", function () {",
                                  "    pm.response.to.be.json;",
                                  "});",
                                  "",
                                  "pm.test(\"Error response has proper structure\", function () {",
                                  "    if (pm.response.code >= 400) {",
                                  "        const jsonData = pm.response.json();",
                                  "        pm.expect(jsonData).to.have.property(\"error\");",
                                  "    }",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Frame-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Referrer-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Permissions-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Get a specific document",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "documents",
                            ":document_id"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat model (UUID)"
                            },
                            {
                              "key": "document_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the document (UUID)"
                            }
                          ]
                        },
                        "description": "Returns details of a specific document within the threat model"
                      },
                      "response": [
                        {
                          "name": "Document details",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                ":document_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "document_id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"name\": \"{)zA?@HZQ\",\n  \"url\": \"<uri>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"metadata\": [\n    {\n      \"key\": \"xli40d0\",\n      \"value\": \" \"\n    },\n    {\n      \"key\": \"2sSurF_x7op\",\n      \"value\": \"z)$qzwl\"\n    }\n  ]\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                ":document_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "document_id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                ":document_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "document_id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                ":document_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "document_id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                ":document_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "document_id"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is valid\", function () {",
                              "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 403, 404, 500]);",
                              "});",
                              "",
                              "pm.test(\"Response time is less than 1000ms\", function () {",
                              "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Type header\", function () {",
                              "    pm.response.to.have.header(\"Content-Type\");",
                              "});",
                              "",
                              "pm.test(\"Response is valid JSON\", function () {",
                              "    pm.response.to.be.json;",
                              "});",
                              "",
                              "pm.test(\"Error response has proper structure\", function () {",
                              "    if (pm.response.code >= 400) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"error\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-Frame-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-XSS-Protection header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Security-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                              "});",
                              "",
                              "pm.test(\"Response has Referrer-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                              "});",
                              "",
                              "pm.test(\"Response has Permissions-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ]
                    },
                    {
                      "name": "Update a document",
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"RA,=g\",\n  \"url\": \"<uri>\",\n  \"description\": \"<string>\",\n  \"metadata\": [\n    {\n      \"key\": \"7\",\n      \"value\": \"(0~=^ie \"\n    },\n    {\n      \"key\": \"8A\",\n      \"value\": \"K\"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "documents",
                            ":document_id"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat model (UUID)"
                            },
                            {
                              "key": "document_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the document (UUID)"
                            }
                          ]
                        },
                        "description": "Updates a specific document within the threat model"
                      },
                      "response": [
                        {
                          "name": "Document updated successfully",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"name\": \"RA,=g\",\n  \"url\": \"<uri>\",\n  \"description\": \"<string>\",\n  \"metadata\": [\n    {\n      \"key\": \"7\",\n      \"value\": \"(0~=^ie \"\n    },\n    {\n      \"key\": \"8A\",\n      \"value\": \"K\"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                ":document_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "document_id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"name\": \"{)zA?@HZQ\",\n  \"url\": \"<uri>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"metadata\": [\n    {\n      \"key\": \"xli40d0\",\n      \"value\": \" \"\n    },\n    {\n      \"key\": \"2sSurF_x7op\",\n      \"value\": \"z)$qzwl\"\n    }\n  ]\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"name\": \"RA,=g\",\n  \"url\": \"<uri>\",\n  \"description\": \"<string>\",\n  \"metadata\": [\n    {\n      \"key\": \"7\",\n      \"value\": \"(0~=^ie \"\n    },\n    {\n      \"key\": \"8A\",\n      \"value\": \"K\"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                ":document_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "document_id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"name\": \"RA,=g\",\n  \"url\": \"<uri>\",\n  \"description\": \"<string>\",\n  \"metadata\": [\n    {\n      \"key\": \"7\",\n      \"value\": \"(0~=^ie \"\n    },\n    {\n      \"key\": \"8A\",\n      \"value\": \"K\"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                ":document_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "document_id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"name\": \"RA,=g\",\n  \"url\": \"<uri>\",\n  \"description\": \"<string>\",\n  \"metadata\": [\n    {\n      \"key\": \"7\",\n      \"value\": \"(0~=^ie \"\n    },\n    {\n      \"key\": \"8A\",\n      \"value\": \"K\"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                ":document_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "document_id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"name\": \"RA,=g\",\n  \"url\": \"<uri>\",\n  \"description\": \"<string>\",\n  \"metadata\": [\n    {\n      \"key\": \"7\",\n      \"value\": \"(0~=^ie \"\n    },\n    {\n      \"key\": \"8A\",\n      \"value\": \"K\"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                ":document_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "document_id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"name\": \"RA,=g\",\n  \"url\": \"<uri>\",\n  \"description\": \"<string>\",\n  \"metadata\": [\n    {\n      \"key\": \"7\",\n      \"value\": \"(0~=^ie \"\n    },\n    {\n      \"key\": \"8A\",\n      \"value\": \"K\"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                ":document_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "document_id"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is valid\", function () {",
                              "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 401, 403, 404, 500]);",
                              "});",
                              "",
                              "pm.test(\"Response time is less than 1000ms\", function () {",
                              "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Type header\", function () {",
                              "    pm.response.to.have.header(\"Content-Type\");",
                              "});",
                              "",
                              "pm.test(\"Response is valid JSON\", function () {",
                              "    pm.response.to.be.json;",
                              "});",
                              "",
                              "pm.test(\"Error response has proper structure\", function () {",
                              "    if (pm.response.code >= 400) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"error\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-Frame-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-XSS-Protection header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Security-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                              "});",
                              "",
                              "pm.test(\"Response has Referrer-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                              "});",
                              "",
                              "pm.test(\"Response has Permissions-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ]
                    },
                    {
                      "name": "Delete a document",
                      "request": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "documents",
                            ":document_id"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat model (UUID)"
                            },
                            {
                              "key": "document_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the document (UUID)"
                            }
                          ]
                        },
                        "description": "Deletes a specific document from the threat model"
                      },
                      "response": [
                        {
                          "name": "Document deleted successfully",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                ":document_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "document_id"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": null
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                ":document_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "document_id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                ":document_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "document_id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                ":document_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "document_id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/:document_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                ":document_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "document_id"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is valid\", function () {",
                              "    pm.expect(pm.response.code).to.be.oneOf([204, 401, 403, 404, 500]);",
                              "});",
                              "",
                              "pm.test(\"Response time is less than 1000ms\", function () {",
                              "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                              "});",
                              "",
                              "pm.test(\"Response is valid JSON\", function () {",
                              "    pm.response.to.be.json;",
                              "});",
                              "",
                              "pm.test(\"Error response has proper structure\", function () {",
                              "    if (pm.response.code >= 400) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"error\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-Frame-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-XSS-Protection header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Security-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                              "});",
                              "",
                              "pm.test(\"Response has Referrer-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                              "});",
                              "",
                              "pm.test(\"Response has Permissions-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "bulk",
                  "item": [
                    {
                      "name": "Bulk create documents",
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"name\": \"0L81~T@d\",\n    \"url\": \"<uri>\",\n    \"description\": \"<string>\",\n    \"metadata\": [\n      {\n        \"key\": \"nY:u7ZPM\",\n        \"value\": \"Qo\\\"P\"\n      },\n      {\n        \"key\": \"QwgvE\",\n        \"value\": \"ttcMq_gT\"\n      }\n    ]\n  },\n  {\n    \"name\": \"3n,\",\n    \"url\": \"<uri>\",\n    \"description\": \"<string>\",\n    \"metadata\": [\n      {\n        \"key\": \"O2kf\",\n        \"value\": \"Hsr\"\n      },\n      {\n        \"key\": \"tJU\",\n        \"value\": \"w.tt{y!Cu-\"\n      }\n    ]\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/bulk",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "documents",
                            "bulk"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat model (UUID)"
                            }
                          ]
                        },
                        "description": "Creates multiple documents in a single operation for the specified threat model"
                      },
                      "response": [
                        {
                          "name": "Documents created successfully",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"name\": \"0L81~T@d\",\n    \"url\": \"<uri>\",\n    \"description\": \"<string>\",\n    \"metadata\": [\n      {\n        \"key\": \"nY:u7ZPM\",\n        \"value\": \"Qo\\\"P\"\n      },\n      {\n        \"key\": \"QwgvE\",\n        \"value\": \"ttcMq_gT\"\n      }\n    ]\n  },\n  {\n    \"name\": \"3n,\",\n    \"url\": \"<uri>\",\n    \"description\": \"<string>\",\n    \"metadata\": [\n      {\n        \"key\": \"O2kf\",\n        \"value\": \"Hsr\"\n      },\n      {\n        \"key\": \"tJU\",\n        \"value\": \"w.tt{y!Cu-\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "[\n  {\n    \"name\": \" \",\n    \"url\": \"<uri>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"metadata\": [\n      {\n        \"key\": \"D\",\n        \"value\": \"E~T\"\n      },\n      {\n        \"key\": \"wdp1\",\n        \"value\": \"V|1pt1@P+\"\n      }\n    ]\n  },\n  {\n    \"name\": \"L`#G.44eu\",\n    \"url\": \"<uri>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"metadata\": [\n      {\n        \"key\": \"1n\",\n        \"value\": \"PJE)HydPJ{\"\n      },\n      {\n        \"key\": \"LM\",\n        \"value\": \"![\"\n      }\n    ]\n  }\n]"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"name\": \"0L81~T@d\",\n    \"url\": \"<uri>\",\n    \"description\": \"<string>\",\n    \"metadata\": [\n      {\n        \"key\": \"nY:u7ZPM\",\n        \"value\": \"Qo\\\"P\"\n      },\n      {\n        \"key\": \"QwgvE\",\n        \"value\": \"ttcMq_gT\"\n      }\n    ]\n  },\n  {\n    \"name\": \"3n,\",\n    \"url\": \"<uri>\",\n    \"description\": \"<string>\",\n    \"metadata\": [\n      {\n        \"key\": \"O2kf\",\n        \"value\": \"Hsr\"\n      },\n      {\n        \"key\": \"tJU\",\n        \"value\": \"w.tt{y!Cu-\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"name\": \"0L81~T@d\",\n    \"url\": \"<uri>\",\n    \"description\": \"<string>\",\n    \"metadata\": [\n      {\n        \"key\": \"nY:u7ZPM\",\n        \"value\": \"Qo\\\"P\"\n      },\n      {\n        \"key\": \"QwgvE\",\n        \"value\": \"ttcMq_gT\"\n      }\n    ]\n  },\n  {\n    \"name\": \"3n,\",\n    \"url\": \"<uri>\",\n    \"description\": \"<string>\",\n    \"metadata\": [\n      {\n        \"key\": \"O2kf\",\n        \"value\": \"Hsr\"\n      },\n      {\n        \"key\": \"tJU\",\n        \"value\": \"w.tt{y!Cu-\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"name\": \"0L81~T@d\",\n    \"url\": \"<uri>\",\n    \"description\": \"<string>\",\n    \"metadata\": [\n      {\n        \"key\": \"nY:u7ZPM\",\n        \"value\": \"Qo\\\"P\"\n      },\n      {\n        \"key\": \"QwgvE\",\n        \"value\": \"ttcMq_gT\"\n      }\n    ]\n  },\n  {\n    \"name\": \"3n,\",\n    \"url\": \"<uri>\",\n    \"description\": \"<string>\",\n    \"metadata\": [\n      {\n        \"key\": \"O2kf\",\n        \"value\": \"Hsr\"\n      },\n      {\n        \"key\": \"tJU\",\n        \"value\": \"w.tt{y!Cu-\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"name\": \"0L81~T@d\",\n    \"url\": \"<uri>\",\n    \"description\": \"<string>\",\n    \"metadata\": [\n      {\n        \"key\": \"nY:u7ZPM\",\n        \"value\": \"Qo\\\"P\"\n      },\n      {\n        \"key\": \"QwgvE\",\n        \"value\": \"ttcMq_gT\"\n      }\n    ]\n  },\n  {\n    \"name\": \"3n,\",\n    \"url\": \"<uri>\",\n    \"description\": \"<string>\",\n    \"metadata\": [\n      {\n        \"key\": \"O2kf\",\n        \"value\": \"Hsr\"\n      },\n      {\n        \"key\": \"tJU\",\n        \"value\": \"w.tt{y!Cu-\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"name\": \"0L81~T@d\",\n    \"url\": \"<uri>\",\n    \"description\": \"<string>\",\n    \"metadata\": [\n      {\n        \"key\": \"nY:u7ZPM\",\n        \"value\": \"Qo\\\"P\"\n      },\n      {\n        \"key\": \"QwgvE\",\n        \"value\": \"ttcMq_gT\"\n      }\n    ]\n  },\n  {\n    \"name\": \"3n,\",\n    \"url\": \"<uri>\",\n    \"description\": \"<string>\",\n    \"metadata\": [\n      {\n        \"key\": \"O2kf\",\n        \"value\": \"Hsr\"\n      },\n      {\n        \"key\": \"tJU\",\n        \"value\": \"w.tt{y!Cu-\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "documents",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is valid\", function () {",
                              "    pm.expect(pm.response.code).to.be.oneOf([201, 400, 401, 403, 404, 500]);",
                              "});",
                              "",
                              "pm.test(\"Response time is less than 1000ms\", function () {",
                              "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Type header\", function () {",
                              "    pm.response.to.have.header(\"Content-Type\");",
                              "});",
                              "",
                              "pm.test(\"Response is valid JSON\", function () {",
                              "    pm.response.to.be.json;",
                              "});",
                              "",
                              "pm.test(\"Error response has proper structure\", function () {",
                              "    if (pm.response.code >= 400) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"error\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-Frame-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-XSS-Protection header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Security-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                              "});",
                              "",
                              "pm.test(\"Response has Referrer-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                              "});",
                              "",
                              "pm.test(\"Response has Permissions-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "List documents in a threat model",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents?limit=20&offset=0",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id",
                        "documents"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "20",
                          "description": "Maximum number of documents to return"
                        },
                        {
                          "key": "offset",
                          "value": "0",
                          "description": "Number of documents to skip"
                        }
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier of the threat model (UUID)"
                        }
                      ]
                    },
                    "description": "Returns a paginated list of documents within the specified threat model"
                  },
                  "response": [
                    {
                      "name": "List of documents",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents?limit=20&offset=0",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "documents"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Maximum number of documents to return"
                            },
                            {
                              "key": "offset",
                              "value": "0",
                              "description": "Number of documents to skip"
                            }
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"documents\": [\n    {\n      \"name\": \"b#0e\",\n      \"url\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"description\": \"<string>\",\n      \"metadata\": [\n        {\n          \"key\": \"xLO\",\n          \"value\": \" \"\n        },\n        {\n          \"key\": \"nzGEIMZ\",\n          \"value\": \" \"\n        }\n      ]\n    },\n    {\n      \"name\": \" \",\n      \"url\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"description\": \"<string>\",\n      \"metadata\": [\n        {\n          \"key\": \"8JLIT8\",\n          \"value\": \"%StVO!mL\"\n        },\n        {\n          \"key\": \"1P-cvCt28V\",\n          \"value\": \"Vk^\"\n        }\n      ]\n    }\n  ],\n  \"total_count\": \"<integer>\"\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents?limit=20&offset=0",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "documents"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Maximum number of documents to return"
                            },
                            {
                              "key": "offset",
                              "value": "0",
                              "description": "Number of documents to skip"
                            }
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents?limit=20&offset=0",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "documents"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Maximum number of documents to return"
                            },
                            {
                              "key": "offset",
                              "value": "0",
                              "description": "Number of documents to skip"
                            }
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents?limit=20&offset=0",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "documents"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Maximum number of documents to return"
                            },
                            {
                              "key": "offset",
                              "value": "0",
                              "description": "Number of documents to skip"
                            }
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents?limit=20&offset=0",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "documents"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Maximum number of documents to return"
                            },
                            {
                              "key": "offset",
                              "value": "0",
                              "description": "Number of documents to skip"
                            }
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is valid\", function () {",
                          "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 403, 404, 500]);",
                          "});",
                          "",
                          "pm.test(\"Response time is less than 1000ms\", function () {",
                          "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                          "});",
                          "",
                          "pm.test(\"Response has Content-Type header\", function () {",
                          "    pm.response.to.have.header(\"Content-Type\");",
                          "});",
                          "",
                          "pm.test(\"Response is valid JSON\", function () {",
                          "    pm.response.to.be.json;",
                          "});",
                          "",
                          "pm.test(\"Error response has proper structure\", function () {",
                          "    if (pm.response.code >= 400) {",
                          "        const jsonData = pm.response.json();",
                          "        pm.expect(jsonData).to.have.property(\"error\");",
                          "    }",
                          "});",
                          "",
                          "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                          "});",
                          "",
                          "pm.test(\"Response has X-Frame-Options header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                          "});",
                          "",
                          "pm.test(\"Response has X-XSS-Protection header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                          "});",
                          "",
                          "pm.test(\"Response has Content-Security-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                          "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                          "});",
                          "",
                          "pm.test(\"Response has Referrer-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                          "});",
                          "",
                          "pm.test(\"Response has Permissions-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                          "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ]
                },
                {
                  "name": "Create a new document",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"RA,=g\",\n  \"url\": \"<uri>\",\n  \"description\": \"<string>\",\n  \"metadata\": [\n    {\n      \"key\": \"7\",\n      \"value\": \"(0~=^ie \"\n    },\n    {\n      \"key\": \"8A\",\n      \"value\": \"K\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id",
                        "documents"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier of the threat model (UUID)"
                        }
                      ]
                    },
                    "description": "Creates a new document within the specified threat model"
                  },
                  "response": [
                    {
                      "name": "Document created successfully",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"RA,=g\",\n  \"url\": \"<uri>\",\n  \"description\": \"<string>\",\n  \"metadata\": [\n    {\n      \"key\": \"7\",\n      \"value\": \"(0~=^ie \"\n    },\n    {\n      \"key\": \"8A\",\n      \"value\": \"K\"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "documents"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"name\": \"{)zA?@HZQ\",\n  \"url\": \"<uri>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"metadata\": [\n    {\n      \"key\": \"xli40d0\",\n      \"value\": \" \"\n    },\n    {\n      \"key\": \"2sSurF_x7op\",\n      \"value\": \"z)$qzwl\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"RA,=g\",\n  \"url\": \"<uri>\",\n  \"description\": \"<string>\",\n  \"metadata\": [\n    {\n      \"key\": \"7\",\n      \"value\": \"(0~=^ie \"\n    },\n    {\n      \"key\": \"8A\",\n      \"value\": \"K\"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "documents"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"RA,=g\",\n  \"url\": \"<uri>\",\n  \"description\": \"<string>\",\n  \"metadata\": [\n    {\n      \"key\": \"7\",\n      \"value\": \"(0~=^ie \"\n    },\n    {\n      \"key\": \"8A\",\n      \"value\": \"K\"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "documents"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"RA,=g\",\n  \"url\": \"<uri>\",\n  \"description\": \"<string>\",\n  \"metadata\": [\n    {\n      \"key\": \"7\",\n      \"value\": \"(0~=^ie \"\n    },\n    {\n      \"key\": \"8A\",\n      \"value\": \"K\"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "documents"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"RA,=g\",\n  \"url\": \"<uri>\",\n  \"description\": \"<string>\",\n  \"metadata\": [\n    {\n      \"key\": \"7\",\n      \"value\": \"(0~=^ie \"\n    },\n    {\n      \"key\": \"8A\",\n      \"value\": \"K\"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "documents"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"RA,=g\",\n  \"url\": \"<uri>\",\n  \"description\": \"<string>\",\n  \"metadata\": [\n    {\n      \"key\": \"7\",\n      \"value\": \"(0~=^ie \"\n    },\n    {\n      \"key\": \"8A\",\n      \"value\": \"K\"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/documents",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "documents"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is valid\", function () {",
                          "    pm.expect(pm.response.code).to.be.oneOf([201, 400, 401, 403, 404, 500]);",
                          "});",
                          "",
                          "pm.test(\"Response time is less than 1000ms\", function () {",
                          "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                          "});",
                          "",
                          "pm.test(\"Response has Content-Type header\", function () {",
                          "    pm.response.to.have.header(\"Content-Type\");",
                          "});",
                          "",
                          "pm.test(\"Response is valid JSON\", function () {",
                          "    pm.response.to.be.json;",
                          "});",
                          "",
                          "pm.test(\"Error response has proper structure\", function () {",
                          "    if (pm.response.code >= 400) {",
                          "        const jsonData = pm.response.json();",
                          "        pm.expect(jsonData).to.have.property(\"error\");",
                          "    }",
                          "});",
                          "",
                          "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                          "});",
                          "",
                          "pm.test(\"Response has X-Frame-Options header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                          "});",
                          "",
                          "pm.test(\"Response has X-XSS-Protection header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                          "});",
                          "",
                          "pm.test(\"Response has Content-Security-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                          "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                          "});",
                          "",
                          "pm.test(\"Response has Referrer-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                          "});",
                          "",
                          "pm.test(\"Response has Permissions-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                          "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "name": "sources",
              "item": [
                {
                  "name": "{source_id}",
                  "item": [
                    {
                      "name": "metadata",
                      "item": [
                        {
                          "name": "{key}",
                          "item": [
                            {
                              "name": "Get source metadata by key",
                              "request": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/:key",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "sources",
                                    ":source_id",
                                    "metadata",
                                    ":key"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the threat model (UUID)"
                                    },
                                    {
                                      "key": "source_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the source reference (UUID)"
                                    },
                                    {
                                      "key": "key",
                                      "value": "<string>",
                                      "description": "(Required) Metadata key to retrieve"
                                    }
                                  ]
                                },
                                "description": "Returns a specific metadata entry by key for the specified source reference"
                              },
                              "response": [
                                {
                                  "name": "Metadata entry",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "sources",
                                        ":source_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "source_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "OK",
                                  "code": 200,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "sources",
                                        ":source_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "source_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "sources",
                                        ":source_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "source_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Forbidden",
                                  "code": 403,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "sources",
                                        ":source_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "source_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "sources",
                                        ":source_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "source_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Internal Server Error",
                                  "code": 500,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                }
                              ],
                              "event": [
                                {
                                  "listen": "test",
                                  "script": {
                                    "exec": [
                                      "pm.test(\"Status code is valid\", function () {",
                                      "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 403, 404, 500]);",
                                      "});",
                                      "",
                                      "pm.test(\"Response time is less than 1000ms\", function () {",
                                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Type header\", function () {",
                                      "    pm.response.to.have.header(\"Content-Type\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response is valid JSON\", function () {",
                                      "    pm.response.to.be.json;",
                                      "});",
                                      "",
                                      "pm.test(\"Error response has proper structure\", function () {",
                                      "    if (pm.response.code >= 400) {",
                                      "        const jsonData = pm.response.json();",
                                      "        pm.expect(jsonData).to.have.property(\"error\");",
                                      "    }",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                      "});"
                                    ],
                                    "type": "text/javascript"
                                  }
                                }
                              ]
                            },
                            {
                              "name": "Update source metadata by key",
                              "request": {
                                "method": "PUT",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"value\": \"<string>\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/:key",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "sources",
                                    ":source_id",
                                    "metadata",
                                    ":key"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the threat model (UUID)"
                                    },
                                    {
                                      "key": "source_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the source reference (UUID)"
                                    },
                                    {
                                      "key": "key",
                                      "value": "<string>",
                                      "description": "(Required) Metadata key to update"
                                    }
                                  ]
                                },
                                "description": "Updates a specific metadata entry by key for the specified source reference"
                              },
                              "response": [
                                {
                                  "name": "Metadata entry updated successfully",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "sources",
                                        ":source_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "source_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "OK",
                                  "code": 200,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "sources",
                                        ":source_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "source_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Bad Request",
                                  "code": 400,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "sources",
                                        ":source_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "source_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "sources",
                                        ":source_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "source_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Forbidden",
                                  "code": 403,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "sources",
                                        ":source_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "source_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "sources",
                                        ":source_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "source_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Internal Server Error",
                                  "code": 500,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                }
                              ],
                              "event": [
                                {
                                  "listen": "test",
                                  "script": {
                                    "exec": [
                                      "pm.test(\"Status code is valid\", function () {",
                                      "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 401, 403, 404, 500]);",
                                      "});",
                                      "",
                                      "pm.test(\"Response time is less than 1000ms\", function () {",
                                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Type header\", function () {",
                                      "    pm.response.to.have.header(\"Content-Type\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response is valid JSON\", function () {",
                                      "    pm.response.to.be.json;",
                                      "});",
                                      "",
                                      "pm.test(\"Error response has proper structure\", function () {",
                                      "    if (pm.response.code >= 400) {",
                                      "        const jsonData = pm.response.json();",
                                      "        pm.expect(jsonData).to.have.property(\"error\");",
                                      "    }",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                      "});"
                                    ],
                                    "type": "text/javascript"
                                  }
                                }
                              ]
                            },
                            {
                              "name": "Delete source metadata by key",
                              "request": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/:key",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "sources",
                                    ":source_id",
                                    "metadata",
                                    ":key"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the threat model (UUID)"
                                    },
                                    {
                                      "key": "source_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the source reference (UUID)"
                                    },
                                    {
                                      "key": "key",
                                      "value": "<string>",
                                      "description": "(Required) Metadata key to delete"
                                    }
                                  ]
                                },
                                "description": "Deletes a specific metadata entry by key for the specified source reference"
                              },
                              "response": [
                                {
                                  "name": "Metadata entry deleted successfully",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "sources",
                                        ":source_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "source_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "No Content",
                                  "code": 204,
                                  "_postman_previewlanguage": "text",
                                  "header": [],
                                  "cookie": [],
                                  "body": null
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "sources",
                                        ":source_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "source_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "sources",
                                        ":source_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "source_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Forbidden",
                                  "code": 403,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "sources",
                                        ":source_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "source_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "sources",
                                        ":source_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "source_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Internal Server Error",
                                  "code": 500,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                }
                              ],
                              "event": [
                                {
                                  "listen": "test",
                                  "script": {
                                    "exec": [
                                      "pm.test(\"Status code is valid\", function () {",
                                      "    pm.expect(pm.response.code).to.be.oneOf([204, 401, 403, 404, 500]);",
                                      "});",
                                      "",
                                      "pm.test(\"Response time is less than 1000ms\", function () {",
                                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                      "});",
                                      "",
                                      "pm.test(\"Response is valid JSON\", function () {",
                                      "    pm.response.to.be.json;",
                                      "});",
                                      "",
                                      "pm.test(\"Error response has proper structure\", function () {",
                                      "    if (pm.response.code >= 400) {",
                                      "        const jsonData = pm.response.json();",
                                      "        pm.expect(jsonData).to.have.property(\"error\");",
                                      "    }",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                      "});"
                                    ],
                                    "type": "text/javascript"
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "name": "bulk",
                          "item": [
                            {
                              "name": "Bulk create source metadata",
                              "request": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/bulk",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "sources",
                                    ":source_id",
                                    "metadata",
                                    "bulk"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the threat model (UUID)"
                                    },
                                    {
                                      "key": "source_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the source reference (UUID)"
                                    }
                                  ]
                                },
                                "description": "Creates multiple metadata entries in a single operation for the specified source reference"
                              },
                              "response": [
                                {
                                  "name": "Metadata entries created successfully",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "sources",
                                        ":source_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "source_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Created",
                                  "code": 201,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "[\n  {\n    \"key\": \"7wVCWI1C4r\",\n    \"value\": \"'Nv66\"\n  },\n  {\n    \"key\": \"1bc\",\n    \"value\": \")X7mee8Z\"\n  }\n]"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "sources",
                                        ":source_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "source_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Bad Request",
                                  "code": 400,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "sources",
                                        ":source_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "source_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "sources",
                                        ":source_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "source_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Forbidden",
                                  "code": 403,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "sources",
                                        ":source_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "source_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "sources",
                                        ":source_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "source_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Internal Server Error",
                                  "code": 500,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                }
                              ],
                              "event": [
                                {
                                  "listen": "test",
                                  "script": {
                                    "exec": [
                                      "pm.test(\"Status code is valid\", function () {",
                                      "    pm.expect(pm.response.code).to.be.oneOf([201, 400, 401, 403, 404, 500]);",
                                      "});",
                                      "",
                                      "pm.test(\"Response time is less than 1000ms\", function () {",
                                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Type header\", function () {",
                                      "    pm.response.to.have.header(\"Content-Type\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response is valid JSON\", function () {",
                                      "    pm.response.to.be.json;",
                                      "});",
                                      "",
                                      "pm.test(\"Error response has proper structure\", function () {",
                                      "    if (pm.response.code >= 400) {",
                                      "        const jsonData = pm.response.json();",
                                      "        pm.expect(jsonData).to.have.property(\"error\");",
                                      "    }",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                      "});"
                                    ],
                                    "type": "text/javascript"
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "name": "Get source metadata",
                          "request": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                ":source_id",
                                "metadata"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the threat model (UUID)"
                                },
                                {
                                  "key": "source_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the source reference (UUID)"
                                }
                              ]
                            },
                            "description": "Returns all metadata key-value pairs for the specified source reference"
                          },
                          "response": [
                            {
                              "name": "Source metadata list",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "sources",
                                    ":source_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "source_id"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "[\n  {\n    \"key\": \"7wVCWI1C4r\",\n    \"value\": \"'Nv66\"\n  },\n  {\n    \"key\": \"1bc\",\n    \"value\": \")X7mee8Z\"\n  }\n]"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "sources",
                                    ":source_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "source_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "sources",
                                    ":source_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "source_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "sources",
                                    ":source_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "source_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "sources",
                                    ":source_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "source_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Internal Server Error",
                              "code": 500,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"Status code is valid\", function () {",
                                  "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 403, 404, 500]);",
                                  "});",
                                  "",
                                  "pm.test(\"Response time is less than 1000ms\", function () {",
                                  "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Type header\", function () {",
                                  "    pm.response.to.have.header(\"Content-Type\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response is valid JSON\", function () {",
                                  "    pm.response.to.be.json;",
                                  "});",
                                  "",
                                  "pm.test(\"Error response has proper structure\", function () {",
                                  "    if (pm.response.code >= 400) {",
                                  "        const jsonData = pm.response.json();",
                                  "        pm.expect(jsonData).to.have.property(\"error\");",
                                  "    }",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Frame-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Referrer-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Permissions-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ]
                        },
                        {
                          "name": "Create source metadata",
                          "request": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                ":source_id",
                                "metadata"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the threat model (UUID)"
                                },
                                {
                                  "key": "source_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the source reference (UUID)"
                                }
                              ]
                            },
                            "description": "Creates new metadata entry for the specified source reference"
                          },
                          "response": [
                            {
                              "name": "Metadata entry created successfully",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "sources",
                                    ":source_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "source_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Created",
                              "code": 201,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "sources",
                                    ":source_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "source_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Bad Request",
                              "code": 400,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "sources",
                                    ":source_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "source_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "sources",
                                    ":source_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "source_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "sources",
                                    ":source_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "source_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "sources",
                                    ":source_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "source_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Internal Server Error",
                              "code": 500,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"Status code is valid\", function () {",
                                  "    pm.expect(pm.response.code).to.be.oneOf([201, 400, 401, 403, 404, 500]);",
                                  "});",
                                  "",
                                  "pm.test(\"Response time is less than 1000ms\", function () {",
                                  "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Type header\", function () {",
                                  "    pm.response.to.have.header(\"Content-Type\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response is valid JSON\", function () {",
                                  "    pm.response.to.be.json;",
                                  "});",
                                  "",
                                  "pm.test(\"Error response has proper structure\", function () {",
                                  "    if (pm.response.code >= 400) {",
                                  "        const jsonData = pm.response.json();",
                                  "        pm.expect(jsonData).to.have.property(\"error\");",
                                  "    }",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Frame-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Referrer-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Permissions-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Get a specific source reference",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "sources",
                            ":source_id"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat model (UUID)"
                            },
                            {
                              "key": "source_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the source reference (UUID)"
                            }
                          ]
                        },
                        "description": "Returns details of a specific source code reference within the threat model"
                      },
                      "response": [
                        {
                          "name": "Source reference details",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                ":source_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "source_id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"url\": \"<uri>\",\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": \"mercurial\",\n  \"parameters\": {\n    \"refType\": \"commit\",\n    \"refValue\": \"<string>\",\n    \"subPath\": \"<string>\"\n  },\n  \"metadata\": [\n    {\n      \"key\": \"3U-hU.QfU:\",\n      \"value\": \"A\"\n    },\n    {\n      \"key\": \"hMOmpBR\",\n      \"value\": \"z}FIg=\"\n    }\n  ]\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                ":source_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "source_id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                ":source_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "source_id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                ":source_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "source_id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                ":source_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "source_id"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is valid\", function () {",
                              "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 403, 404, 500]);",
                              "});",
                              "",
                              "pm.test(\"Response time is less than 1000ms\", function () {",
                              "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Type header\", function () {",
                              "    pm.response.to.have.header(\"Content-Type\");",
                              "});",
                              "",
                              "pm.test(\"Response is valid JSON\", function () {",
                              "    pm.response.to.be.json;",
                              "});",
                              "",
                              "pm.test(\"Error response has proper structure\", function () {",
                              "    if (pm.response.code >= 400) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"error\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-Frame-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-XSS-Protection header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Security-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                              "});",
                              "",
                              "pm.test(\"Response has Referrer-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                              "});",
                              "",
                              "pm.test(\"Response has Permissions-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ]
                    },
                    {
                      "name": "Update a source reference",
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"url\": \"<uri>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": \"other\",\n  \"parameters\": {\n    \"refType\": \"tag\",\n    \"refValue\": \"<string>\",\n    \"subPath\": \"<string>\"\n  },\n  \"metadata\": [\n    {\n      \"key\": \"svBEhSi:S.\",\n      \"value\": \" \"\n    },\n    {\n      \"key\": \"I0hGZ/zpo\",\n      \"value\": \" \"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "sources",
                            ":source_id"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat model (UUID)"
                            },
                            {
                              "key": "source_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the source reference (UUID)"
                            }
                          ]
                        },
                        "description": "Updates a specific source code reference within the threat model"
                      },
                      "response": [
                        {
                          "name": "Source reference updated successfully",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"url\": \"<uri>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": \"other\",\n  \"parameters\": {\n    \"refType\": \"tag\",\n    \"refValue\": \"<string>\",\n    \"subPath\": \"<string>\"\n  },\n  \"metadata\": [\n    {\n      \"key\": \"svBEhSi:S.\",\n      \"value\": \" \"\n    },\n    {\n      \"key\": \"I0hGZ/zpo\",\n      \"value\": \" \"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                ":source_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "source_id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"url\": \"<uri>\",\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": \"mercurial\",\n  \"parameters\": {\n    \"refType\": \"commit\",\n    \"refValue\": \"<string>\",\n    \"subPath\": \"<string>\"\n  },\n  \"metadata\": [\n    {\n      \"key\": \"3U-hU.QfU:\",\n      \"value\": \"A\"\n    },\n    {\n      \"key\": \"hMOmpBR\",\n      \"value\": \"z}FIg=\"\n    }\n  ]\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"url\": \"<uri>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": \"other\",\n  \"parameters\": {\n    \"refType\": \"tag\",\n    \"refValue\": \"<string>\",\n    \"subPath\": \"<string>\"\n  },\n  \"metadata\": [\n    {\n      \"key\": \"svBEhSi:S.\",\n      \"value\": \" \"\n    },\n    {\n      \"key\": \"I0hGZ/zpo\",\n      \"value\": \" \"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                ":source_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "source_id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"url\": \"<uri>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": \"other\",\n  \"parameters\": {\n    \"refType\": \"tag\",\n    \"refValue\": \"<string>\",\n    \"subPath\": \"<string>\"\n  },\n  \"metadata\": [\n    {\n      \"key\": \"svBEhSi:S.\",\n      \"value\": \" \"\n    },\n    {\n      \"key\": \"I0hGZ/zpo\",\n      \"value\": \" \"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                ":source_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "source_id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"url\": \"<uri>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": \"other\",\n  \"parameters\": {\n    \"refType\": \"tag\",\n    \"refValue\": \"<string>\",\n    \"subPath\": \"<string>\"\n  },\n  \"metadata\": [\n    {\n      \"key\": \"svBEhSi:S.\",\n      \"value\": \" \"\n    },\n    {\n      \"key\": \"I0hGZ/zpo\",\n      \"value\": \" \"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                ":source_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "source_id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"url\": \"<uri>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": \"other\",\n  \"parameters\": {\n    \"refType\": \"tag\",\n    \"refValue\": \"<string>\",\n    \"subPath\": \"<string>\"\n  },\n  \"metadata\": [\n    {\n      \"key\": \"svBEhSi:S.\",\n      \"value\": \" \"\n    },\n    {\n      \"key\": \"I0hGZ/zpo\",\n      \"value\": \" \"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                ":source_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "source_id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"url\": \"<uri>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": \"other\",\n  \"parameters\": {\n    \"refType\": \"tag\",\n    \"refValue\": \"<string>\",\n    \"subPath\": \"<string>\"\n  },\n  \"metadata\": [\n    {\n      \"key\": \"svBEhSi:S.\",\n      \"value\": \" \"\n    },\n    {\n      \"key\": \"I0hGZ/zpo\",\n      \"value\": \" \"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                ":source_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "source_id"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is valid\", function () {",
                              "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 401, 403, 404, 500]);",
                              "});",
                              "",
                              "pm.test(\"Response time is less than 1000ms\", function () {",
                              "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Type header\", function () {",
                              "    pm.response.to.have.header(\"Content-Type\");",
                              "});",
                              "",
                              "pm.test(\"Response is valid JSON\", function () {",
                              "    pm.response.to.be.json;",
                              "});",
                              "",
                              "pm.test(\"Error response has proper structure\", function () {",
                              "    if (pm.response.code >= 400) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"error\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-Frame-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-XSS-Protection header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Security-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                              "});",
                              "",
                              "pm.test(\"Response has Referrer-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                              "});",
                              "",
                              "pm.test(\"Response has Permissions-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ]
                    },
                    {
                      "name": "Delete a source reference",
                      "request": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "sources",
                            ":source_id"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat model (UUID)"
                            },
                            {
                              "key": "source_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the source reference (UUID)"
                            }
                          ]
                        },
                        "description": "Deletes a specific source code reference from the threat model"
                      },
                      "response": [
                        {
                          "name": "Source reference deleted successfully",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                ":source_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "source_id"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": null
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                ":source_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "source_id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                ":source_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "source_id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                ":source_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "source_id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/:source_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                ":source_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "source_id"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is valid\", function () {",
                              "    pm.expect(pm.response.code).to.be.oneOf([204, 401, 403, 404, 500]);",
                              "});",
                              "",
                              "pm.test(\"Response time is less than 1000ms\", function () {",
                              "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                              "});",
                              "",
                              "pm.test(\"Response is valid JSON\", function () {",
                              "    pm.response.to.be.json;",
                              "});",
                              "",
                              "pm.test(\"Error response has proper structure\", function () {",
                              "    if (pm.response.code >= 400) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"error\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-Frame-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-XSS-Protection header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Security-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                              "});",
                              "",
                              "pm.test(\"Response has Referrer-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                              "});",
                              "",
                              "pm.test(\"Response has Permissions-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "bulk",
                  "item": [
                    {
                      "name": "Bulk create sources",
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"url\": \"<uri>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"type\": \"svn\",\n    \"parameters\": {\n      \"refType\": \"branch\",\n      \"refValue\": \"<string>\",\n      \"subPath\": \"<string>\"\n    },\n    \"metadata\": [\n      {\n        \"key\": \"je\",\n        \"value\": \"Qc|!(\"\n      },\n      {\n        \"key\": \"gbuVW\",\n        \"value\": \"el@BN)93v\"\n      }\n    ]\n  },\n  {\n    \"url\": \"<uri>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"type\": \"git\",\n    \"parameters\": {\n      \"refType\": \"branch\",\n      \"refValue\": \"<string>\",\n      \"subPath\": \"<string>\"\n    },\n    \"metadata\": [\n      {\n        \"key\": \"3c-GlYsty\",\n        \"value\": \"P+UC\"\n      },\n      {\n        \"key\": \"X\",\n        \"value\": \"H&c*8?;[\"\n      }\n    ]\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/bulk",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "sources",
                            "bulk"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat model (UUID)"
                            }
                          ]
                        },
                        "description": "Creates multiple source references in a single operation for the specified threat model"
                      },
                      "response": [
                        {
                          "name": "Sources created successfully",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"url\": \"<uri>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"type\": \"svn\",\n    \"parameters\": {\n      \"refType\": \"branch\",\n      \"refValue\": \"<string>\",\n      \"subPath\": \"<string>\"\n    },\n    \"metadata\": [\n      {\n        \"key\": \"je\",\n        \"value\": \"Qc|!(\"\n      },\n      {\n        \"key\": \"gbuVW\",\n        \"value\": \"el@BN)93v\"\n      }\n    ]\n  },\n  {\n    \"url\": \"<uri>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"type\": \"git\",\n    \"parameters\": {\n      \"refType\": \"branch\",\n      \"refValue\": \"<string>\",\n      \"subPath\": \"<string>\"\n    },\n    \"metadata\": [\n      {\n        \"key\": \"3c-GlYsty\",\n        \"value\": \"P+UC\"\n      },\n      {\n        \"key\": \"X\",\n        \"value\": \"H&c*8?;[\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "[\n  {\n    \"url\": \"<uri>\",\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"type\": \"git\",\n    \"parameters\": {\n      \"refType\": \"tag\",\n      \"refValue\": \"<string>\",\n      \"subPath\": \"<string>\"\n    },\n    \"metadata\": [\n      {\n        \"key\": \"tLcheq\",\n        \"value\": \"DZ^F\"\n      },\n      {\n        \"key\": \"3Zdb9qD0o\",\n        \"value\": \"nf C7(7\"\n      }\n    ]\n  },\n  {\n    \"url\": \"<uri>\",\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"type\": \"mercurial\",\n    \"parameters\": {\n      \"refType\": \"commit\",\n      \"refValue\": \"<string>\",\n      \"subPath\": \"<string>\"\n    },\n    \"metadata\": [\n      {\n        \"key\": \"rBt_cD\",\n        \"value\": \" \"\n      },\n      {\n        \"key\": \"om6/i79C-gp\",\n        \"value\": \"yyQ1`xv#\"\n      }\n    ]\n  }\n]"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"url\": \"<uri>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"type\": \"svn\",\n    \"parameters\": {\n      \"refType\": \"branch\",\n      \"refValue\": \"<string>\",\n      \"subPath\": \"<string>\"\n    },\n    \"metadata\": [\n      {\n        \"key\": \"je\",\n        \"value\": \"Qc|!(\"\n      },\n      {\n        \"key\": \"gbuVW\",\n        \"value\": \"el@BN)93v\"\n      }\n    ]\n  },\n  {\n    \"url\": \"<uri>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"type\": \"git\",\n    \"parameters\": {\n      \"refType\": \"branch\",\n      \"refValue\": \"<string>\",\n      \"subPath\": \"<string>\"\n    },\n    \"metadata\": [\n      {\n        \"key\": \"3c-GlYsty\",\n        \"value\": \"P+UC\"\n      },\n      {\n        \"key\": \"X\",\n        \"value\": \"H&c*8?;[\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"url\": \"<uri>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"type\": \"svn\",\n    \"parameters\": {\n      \"refType\": \"branch\",\n      \"refValue\": \"<string>\",\n      \"subPath\": \"<string>\"\n    },\n    \"metadata\": [\n      {\n        \"key\": \"je\",\n        \"value\": \"Qc|!(\"\n      },\n      {\n        \"key\": \"gbuVW\",\n        \"value\": \"el@BN)93v\"\n      }\n    ]\n  },\n  {\n    \"url\": \"<uri>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"type\": \"git\",\n    \"parameters\": {\n      \"refType\": \"branch\",\n      \"refValue\": \"<string>\",\n      \"subPath\": \"<string>\"\n    },\n    \"metadata\": [\n      {\n        \"key\": \"3c-GlYsty\",\n        \"value\": \"P+UC\"\n      },\n      {\n        \"key\": \"X\",\n        \"value\": \"H&c*8?;[\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"url\": \"<uri>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"type\": \"svn\",\n    \"parameters\": {\n      \"refType\": \"branch\",\n      \"refValue\": \"<string>\",\n      \"subPath\": \"<string>\"\n    },\n    \"metadata\": [\n      {\n        \"key\": \"je\",\n        \"value\": \"Qc|!(\"\n      },\n      {\n        \"key\": \"gbuVW\",\n        \"value\": \"el@BN)93v\"\n      }\n    ]\n  },\n  {\n    \"url\": \"<uri>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"type\": \"git\",\n    \"parameters\": {\n      \"refType\": \"branch\",\n      \"refValue\": \"<string>\",\n      \"subPath\": \"<string>\"\n    },\n    \"metadata\": [\n      {\n        \"key\": \"3c-GlYsty\",\n        \"value\": \"P+UC\"\n      },\n      {\n        \"key\": \"X\",\n        \"value\": \"H&c*8?;[\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"url\": \"<uri>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"type\": \"svn\",\n    \"parameters\": {\n      \"refType\": \"branch\",\n      \"refValue\": \"<string>\",\n      \"subPath\": \"<string>\"\n    },\n    \"metadata\": [\n      {\n        \"key\": \"je\",\n        \"value\": \"Qc|!(\"\n      },\n      {\n        \"key\": \"gbuVW\",\n        \"value\": \"el@BN)93v\"\n      }\n    ]\n  },\n  {\n    \"url\": \"<uri>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"type\": \"git\",\n    \"parameters\": {\n      \"refType\": \"branch\",\n      \"refValue\": \"<string>\",\n      \"subPath\": \"<string>\"\n    },\n    \"metadata\": [\n      {\n        \"key\": \"3c-GlYsty\",\n        \"value\": \"P+UC\"\n      },\n      {\n        \"key\": \"X\",\n        \"value\": \"H&c*8?;[\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"url\": \"<uri>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"type\": \"svn\",\n    \"parameters\": {\n      \"refType\": \"branch\",\n      \"refValue\": \"<string>\",\n      \"subPath\": \"<string>\"\n    },\n    \"metadata\": [\n      {\n        \"key\": \"je\",\n        \"value\": \"Qc|!(\"\n      },\n      {\n        \"key\": \"gbuVW\",\n        \"value\": \"el@BN)93v\"\n      }\n    ]\n  },\n  {\n    \"url\": \"<uri>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"type\": \"git\",\n    \"parameters\": {\n      \"refType\": \"branch\",\n      \"refValue\": \"<string>\",\n      \"subPath\": \"<string>\"\n    },\n    \"metadata\": [\n      {\n        \"key\": \"3c-GlYsty\",\n        \"value\": \"P+UC\"\n      },\n      {\n        \"key\": \"X\",\n        \"value\": \"H&c*8?;[\"\n      }\n    ]\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "sources",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is valid\", function () {",
                              "    pm.expect(pm.response.code).to.be.oneOf([201, 400, 401, 403, 404, 500]);",
                              "});",
                              "",
                              "pm.test(\"Response time is less than 1000ms\", function () {",
                              "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Type header\", function () {",
                              "    pm.response.to.have.header(\"Content-Type\");",
                              "});",
                              "",
                              "pm.test(\"Response is valid JSON\", function () {",
                              "    pm.response.to.be.json;",
                              "});",
                              "",
                              "pm.test(\"Error response has proper structure\", function () {",
                              "    if (pm.response.code >= 400) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"error\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-Frame-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-XSS-Protection header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Security-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                              "});",
                              "",
                              "pm.test(\"Response has Referrer-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                              "});",
                              "",
                              "pm.test(\"Response has Permissions-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "List sources in a threat model",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources?limit=20&offset=0",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id",
                        "sources"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "20",
                          "description": "Maximum number of sources to return"
                        },
                        {
                          "key": "offset",
                          "value": "0",
                          "description": "Number of sources to skip"
                        }
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier of the threat model (UUID)"
                        }
                      ]
                    },
                    "description": "Returns a paginated list of source code references within the specified threat model"
                  },
                  "response": [
                    {
                      "name": "List of source code references",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources?limit=20&offset=0",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "sources"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Maximum number of sources to return"
                            },
                            {
                              "key": "offset",
                              "value": "0",
                              "description": "Number of sources to skip"
                            }
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"sources\": [\n    {\n      \"url\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"type\": \"mercurial\",\n      \"parameters\": {\n        \"refType\": \"tag\",\n        \"refValue\": \"<string>\",\n        \"subPath\": \"<string>\"\n      },\n      \"metadata\": [\n        {\n          \"key\": \"M3C7X1I\",\n          \"value\": \"/L\"\n        },\n        {\n          \"key\": \"bXIhug\",\n          \"value\": \"-eAaw[RbW\"\n        }\n      ]\n    },\n    {\n      \"url\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"type\": \"other\",\n      \"parameters\": {\n        \"refType\": \"branch\",\n        \"refValue\": \"<string>\",\n        \"subPath\": \"<string>\"\n      },\n      \"metadata\": [\n        {\n          \"key\": \"icxK_d\",\n          \"value\": \"#h\"\n        },\n        {\n          \"key\": \"xUYgH73AmRy\",\n          \"value\": \"Kvj?5+h,.|\"\n        }\n      ]\n    }\n  ],\n  \"total_count\": \"<integer>\"\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources?limit=20&offset=0",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "sources"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Maximum number of sources to return"
                            },
                            {
                              "key": "offset",
                              "value": "0",
                              "description": "Number of sources to skip"
                            }
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources?limit=20&offset=0",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "sources"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Maximum number of sources to return"
                            },
                            {
                              "key": "offset",
                              "value": "0",
                              "description": "Number of sources to skip"
                            }
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources?limit=20&offset=0",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "sources"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Maximum number of sources to return"
                            },
                            {
                              "key": "offset",
                              "value": "0",
                              "description": "Number of sources to skip"
                            }
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources?limit=20&offset=0",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "sources"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Maximum number of sources to return"
                            },
                            {
                              "key": "offset",
                              "value": "0",
                              "description": "Number of sources to skip"
                            }
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is valid\", function () {",
                          "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 403, 404, 500]);",
                          "});",
                          "",
                          "pm.test(\"Response time is less than 1000ms\", function () {",
                          "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                          "});",
                          "",
                          "pm.test(\"Response has Content-Type header\", function () {",
                          "    pm.response.to.have.header(\"Content-Type\");",
                          "});",
                          "",
                          "pm.test(\"Response is valid JSON\", function () {",
                          "    pm.response.to.be.json;",
                          "});",
                          "",
                          "pm.test(\"Error response has proper structure\", function () {",
                          "    if (pm.response.code >= 400) {",
                          "        const jsonData = pm.response.json();",
                          "        pm.expect(jsonData).to.have.property(\"error\");",
                          "    }",
                          "});",
                          "",
                          "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                          "});",
                          "",
                          "pm.test(\"Response has X-Frame-Options header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                          "});",
                          "",
                          "pm.test(\"Response has X-XSS-Protection header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                          "});",
                          "",
                          "pm.test(\"Response has Content-Security-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                          "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                          "});",
                          "",
                          "pm.test(\"Response has Referrer-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                          "});",
                          "",
                          "pm.test(\"Response has Permissions-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                          "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ]
                },
                {
                  "name": "Create a new source reference",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"url\": \"<uri>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": \"other\",\n  \"parameters\": {\n    \"refType\": \"tag\",\n    \"refValue\": \"<string>\",\n    \"subPath\": \"<string>\"\n  },\n  \"metadata\": [\n    {\n      \"key\": \"svBEhSi:S.\",\n      \"value\": \" \"\n    },\n    {\n      \"key\": \"I0hGZ/zpo\",\n      \"value\": \" \"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id",
                        "sources"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier of the threat model (UUID)"
                        }
                      ]
                    },
                    "description": "Creates a new source code reference within the specified threat model"
                  },
                  "response": [
                    {
                      "name": "Source reference created successfully",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"url\": \"<uri>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": \"other\",\n  \"parameters\": {\n    \"refType\": \"tag\",\n    \"refValue\": \"<string>\",\n    \"subPath\": \"<string>\"\n  },\n  \"metadata\": [\n    {\n      \"key\": \"svBEhSi:S.\",\n      \"value\": \" \"\n    },\n    {\n      \"key\": \"I0hGZ/zpo\",\n      \"value\": \" \"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "sources"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"url\": \"<uri>\",\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": \"mercurial\",\n  \"parameters\": {\n    \"refType\": \"commit\",\n    \"refValue\": \"<string>\",\n    \"subPath\": \"<string>\"\n  },\n  \"metadata\": [\n    {\n      \"key\": \"3U-hU.QfU:\",\n      \"value\": \"A\"\n    },\n    {\n      \"key\": \"hMOmpBR\",\n      \"value\": \"z}FIg=\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"url\": \"<uri>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": \"other\",\n  \"parameters\": {\n    \"refType\": \"tag\",\n    \"refValue\": \"<string>\",\n    \"subPath\": \"<string>\"\n  },\n  \"metadata\": [\n    {\n      \"key\": \"svBEhSi:S.\",\n      \"value\": \" \"\n    },\n    {\n      \"key\": \"I0hGZ/zpo\",\n      \"value\": \" \"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "sources"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"url\": \"<uri>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": \"other\",\n  \"parameters\": {\n    \"refType\": \"tag\",\n    \"refValue\": \"<string>\",\n    \"subPath\": \"<string>\"\n  },\n  \"metadata\": [\n    {\n      \"key\": \"svBEhSi:S.\",\n      \"value\": \" \"\n    },\n    {\n      \"key\": \"I0hGZ/zpo\",\n      \"value\": \" \"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "sources"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"url\": \"<uri>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": \"other\",\n  \"parameters\": {\n    \"refType\": \"tag\",\n    \"refValue\": \"<string>\",\n    \"subPath\": \"<string>\"\n  },\n  \"metadata\": [\n    {\n      \"key\": \"svBEhSi:S.\",\n      \"value\": \" \"\n    },\n    {\n      \"key\": \"I0hGZ/zpo\",\n      \"value\": \" \"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "sources"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"url\": \"<uri>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": \"other\",\n  \"parameters\": {\n    \"refType\": \"tag\",\n    \"refValue\": \"<string>\",\n    \"subPath\": \"<string>\"\n  },\n  \"metadata\": [\n    {\n      \"key\": \"svBEhSi:S.\",\n      \"value\": \" \"\n    },\n    {\n      \"key\": \"I0hGZ/zpo\",\n      \"value\": \" \"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "sources"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"url\": \"<uri>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": \"other\",\n  \"parameters\": {\n    \"refType\": \"tag\",\n    \"refValue\": \"<string>\",\n    \"subPath\": \"<string>\"\n  },\n  \"metadata\": [\n    {\n      \"key\": \"svBEhSi:S.\",\n      \"value\": \" \"\n    },\n    {\n      \"key\": \"I0hGZ/zpo\",\n      \"value\": \" \"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/sources",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "sources"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is valid\", function () {",
                          "    pm.expect(pm.response.code).to.be.oneOf([201, 400, 401, 403, 404, 500]);",
                          "});",
                          "",
                          "pm.test(\"Response time is less than 1000ms\", function () {",
                          "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                          "});",
                          "",
                          "pm.test(\"Response has Content-Type header\", function () {",
                          "    pm.response.to.have.header(\"Content-Type\");",
                          "});",
                          "",
                          "pm.test(\"Response is valid JSON\", function () {",
                          "    pm.response.to.be.json;",
                          "});",
                          "",
                          "pm.test(\"Error response has proper structure\", function () {",
                          "    if (pm.response.code >= 400) {",
                          "        const jsonData = pm.response.json();",
                          "        pm.expect(jsonData).to.have.property(\"error\");",
                          "    }",
                          "});",
                          "",
                          "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                          "});",
                          "",
                          "pm.test(\"Response has X-Frame-Options header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                          "});",
                          "",
                          "pm.test(\"Response has X-XSS-Protection header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                          "});",
                          "",
                          "pm.test(\"Response has Content-Security-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                          "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                          "});",
                          "",
                          "pm.test(\"Response has Referrer-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                          "});",
                          "",
                          "pm.test(\"Response has Permissions-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                          "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "name": "metadata",
              "item": [
                {
                  "name": "{key}",
                  "item": [
                    {
                      "name": "Get threat model metadata by key",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/:key",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "metadata",
                            ":key"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat model (UUID)"
                            },
                            {
                              "key": "key",
                              "value": "<string>",
                              "description": "(Required) Metadata key to retrieve"
                            }
                          ]
                        },
                        "description": "Returns a specific metadata entry by key for the specified threat model"
                      },
                      "response": [
                        {
                          "name": "Metadata entry",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "metadata",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "metadata",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "metadata",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "metadata",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "metadata",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is valid\", function () {",
                              "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 403, 404, 500]);",
                              "});",
                              "",
                              "pm.test(\"Response time is less than 1000ms\", function () {",
                              "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Type header\", function () {",
                              "    pm.response.to.have.header(\"Content-Type\");",
                              "});",
                              "",
                              "pm.test(\"Response is valid JSON\", function () {",
                              "    pm.response.to.be.json;",
                              "});",
                              "",
                              "pm.test(\"Error response has proper structure\", function () {",
                              "    if (pm.response.code >= 400) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"error\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-Frame-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-XSS-Protection header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Security-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                              "});",
                              "",
                              "pm.test(\"Response has Referrer-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                              "});",
                              "",
                              "pm.test(\"Response has Permissions-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ]
                    },
                    {
                      "name": "Update threat model metadata by key",
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"value\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/:key",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "metadata",
                            ":key"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat model (UUID)"
                            },
                            {
                              "key": "key",
                              "value": "<string>",
                              "description": "(Required) Metadata key to update"
                            }
                          ]
                        },
                        "description": "Updates a specific metadata entry by key for the specified threat model"
                      },
                      "response": [
                        {
                          "name": "Metadata entry updated successfully",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"value\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "metadata",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"value\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "metadata",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"value\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "metadata",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"value\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "metadata",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"value\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "metadata",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"value\": \"<string>\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "metadata",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is valid\", function () {",
                              "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 401, 403, 404, 500]);",
                              "});",
                              "",
                              "pm.test(\"Response time is less than 1000ms\", function () {",
                              "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Type header\", function () {",
                              "    pm.response.to.have.header(\"Content-Type\");",
                              "});",
                              "",
                              "pm.test(\"Response is valid JSON\", function () {",
                              "    pm.response.to.be.json;",
                              "});",
                              "",
                              "pm.test(\"Error response has proper structure\", function () {",
                              "    if (pm.response.code >= 400) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"error\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-Frame-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-XSS-Protection header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Security-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                              "});",
                              "",
                              "pm.test(\"Response has Referrer-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                              "});",
                              "",
                              "pm.test(\"Response has Permissions-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ]
                    },
                    {
                      "name": "Delete threat model metadata by key",
                      "request": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/:key",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "metadata",
                            ":key"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat model (UUID)"
                            },
                            {
                              "key": "key",
                              "value": "<string>",
                              "description": "(Required) Metadata key to delete"
                            }
                          ]
                        },
                        "description": "Deletes a specific metadata entry by key for the specified threat model"
                      },
                      "response": [
                        {
                          "name": "Metadata entry deleted successfully",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "metadata",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": null
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "metadata",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "metadata",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "metadata",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/:key",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "metadata",
                                ":key"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "key"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is valid\", function () {",
                              "    pm.expect(pm.response.code).to.be.oneOf([204, 401, 403, 404, 500]);",
                              "});",
                              "",
                              "pm.test(\"Response time is less than 1000ms\", function () {",
                              "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                              "});",
                              "",
                              "pm.test(\"Response is valid JSON\", function () {",
                              "    pm.response.to.be.json;",
                              "});",
                              "",
                              "pm.test(\"Error response has proper structure\", function () {",
                              "    if (pm.response.code >= 400) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"error\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-Frame-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-XSS-Protection header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Security-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                              "});",
                              "",
                              "pm.test(\"Response has Referrer-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                              "});",
                              "",
                              "pm.test(\"Response has Permissions-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "bulk",
                  "item": [
                    {
                      "name": "Bulk create threat model metadata",
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/bulk",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "metadata",
                            "bulk"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat model (UUID)"
                            }
                          ]
                        },
                        "description": "Creates multiple metadata entries in a single operation for the specified threat model"
                      },
                      "response": [
                        {
                          "name": "Metadata entries created successfully",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "metadata",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "[\n  {\n    \"key\": \"7wVCWI1C4r\",\n    \"value\": \"'Nv66\"\n  },\n  {\n    \"key\": \"1bc\",\n    \"value\": \")X7mee8Z\"\n  }\n]"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "metadata",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "metadata",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "metadata",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "metadata",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata/bulk",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "metadata",
                                "bulk"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is valid\", function () {",
                              "    pm.expect(pm.response.code).to.be.oneOf([201, 400, 401, 403, 404, 500]);",
                              "});",
                              "",
                              "pm.test(\"Response time is less than 1000ms\", function () {",
                              "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Type header\", function () {",
                              "    pm.response.to.have.header(\"Content-Type\");",
                              "});",
                              "",
                              "pm.test(\"Response is valid JSON\", function () {",
                              "    pm.response.to.be.json;",
                              "});",
                              "",
                              "pm.test(\"Error response has proper structure\", function () {",
                              "    if (pm.response.code >= 400) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"error\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-Frame-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-XSS-Protection header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Security-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                              "});",
                              "",
                              "pm.test(\"Response has Referrer-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                              "});",
                              "",
                              "pm.test(\"Response has Permissions-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Get threat model metadata",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id",
                        "metadata"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier of the threat model (UUID)"
                        }
                      ]
                    },
                    "description": "Returns all metadata key-value pairs for the specified threat model"
                  },
                  "response": [
                    {
                      "name": "Threat model metadata list",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "metadata"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n  {\n    \"key\": \"7wVCWI1C4r\",\n    \"value\": \"'Nv66\"\n  },\n  {\n    \"key\": \"1bc\",\n    \"value\": \")X7mee8Z\"\n  }\n]"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "metadata"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "metadata"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "metadata"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "metadata"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is valid\", function () {",
                          "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 403, 404, 500]);",
                          "});",
                          "",
                          "pm.test(\"Response time is less than 1000ms\", function () {",
                          "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                          "});",
                          "",
                          "pm.test(\"Response has Content-Type header\", function () {",
                          "    pm.response.to.have.header(\"Content-Type\");",
                          "});",
                          "",
                          "pm.test(\"Response is valid JSON\", function () {",
                          "    pm.response.to.be.json;",
                          "});",
                          "",
                          "pm.test(\"Error response has proper structure\", function () {",
                          "    if (pm.response.code >= 400) {",
                          "        const jsonData = pm.response.json();",
                          "        pm.expect(jsonData).to.have.property(\"error\");",
                          "    }",
                          "});",
                          "",
                          "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                          "});",
                          "",
                          "pm.test(\"Response has X-Frame-Options header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                          "});",
                          "",
                          "pm.test(\"Response has X-XSS-Protection header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                          "});",
                          "",
                          "pm.test(\"Response has Content-Security-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                          "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                          "});",
                          "",
                          "pm.test(\"Response has Referrer-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                          "});",
                          "",
                          "pm.test(\"Response has Permissions-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                          "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ]
                },
                {
                  "name": "Create threat model metadata",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id",
                        "metadata"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier of the threat model (UUID)"
                        }
                      ]
                    },
                    "description": "Creates new metadata entry for the specified threat model"
                  },
                  "response": [
                    {
                      "name": "Metadata entry created successfully",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "metadata"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "metadata"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "metadata"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "metadata"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "metadata"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/metadata",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "metadata"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is valid\", function () {",
                          "    pm.expect(pm.response.code).to.be.oneOf([201, 400, 401, 403, 404, 500]);",
                          "});",
                          "",
                          "pm.test(\"Response time is less than 1000ms\", function () {",
                          "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                          "});",
                          "",
                          "pm.test(\"Response has Content-Type header\", function () {",
                          "    pm.response.to.have.header(\"Content-Type\");",
                          "});",
                          "",
                          "pm.test(\"Response is valid JSON\", function () {",
                          "    pm.response.to.be.json;",
                          "});",
                          "",
                          "pm.test(\"Error response has proper structure\", function () {",
                          "    if (pm.response.code >= 400) {",
                          "        const jsonData = pm.response.json();",
                          "        pm.expect(jsonData).to.have.property(\"error\");",
                          "    }",
                          "});",
                          "",
                          "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                          "});",
                          "",
                          "pm.test(\"Response has X-Frame-Options header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                          "});",
                          "",
                          "pm.test(\"Response has X-XSS-Protection header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                          "});",
                          "",
                          "pm.test(\"Response has Content-Security-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                          "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                          "});",
                          "",
                          "pm.test(\"Response has Referrer-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                          "});",
                          "",
                          "pm.test(\"Response has Permissions-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                          "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "name": "diagrams",
              "item": [
                {
                  "name": "{diagram_id}",
                  "item": [
                    {
                      "name": "collaborate",
                      "item": [
                        {
                          "name": "Get diagram collaboration session",
                          "request": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id",
                                "collaborate"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the threat model (UUID)"
                                },
                                {
                                  "key": "diagram_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the diagram (UUID)"
                                }
                              ]
                            },
                            "description": "Retrieves the current collaboration session details for a diagram. The session payload indicates who has been authorized to the session, not who is currently active in the WebSocket session. The 200 status indicates successful retrieval - clients must NOT evaluate the payload to determine session status."
                          },
                          "response": [
                            {
                              "name": "Collaboration session details",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "collaborate"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"session_id\": \"<uuid>\",\n  \"host\": \"<string>\",\n  \"threat_model_id\": \"<uuid>\",\n  \"threat_model_name\": \"<string>\",\n  \"diagram_id\": \"<uuid>\",\n  \"diagram_name\": \"<string>\",\n  \"participants\": [\n    {\n      \"user\": {\n        \"user_id\": \"<string>\",\n        \"email\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"last_activity\": \"<dateTime>\",\n      \"permissions\": \"reader\"\n    },\n    {\n      \"user\": {\n        \"user_id\": \"<string>\",\n        \"email\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"last_activity\": \"<dateTime>\",\n      \"permissions\": \"writer\"\n    }\n  ],\n  \"websocket_url\": \"<string>\",\n  \"presenter\": \"<string>\"\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "collaborate"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "collaborate"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "collaborate"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "collaborate"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Internal Server Error",
                              "code": 500,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"Status code is valid\", function () {",
                                  "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 403, 404, 500]);",
                                  "});",
                                  "",
                                  "pm.test(\"Response time is less than 1000ms\", function () {",
                                  "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Type header\", function () {",
                                  "    pm.response.to.have.header(\"Content-Type\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response is valid JSON\", function () {",
                                  "    pm.response.to.be.json;",
                                  "});",
                                  "",
                                  "// Domain object specific tests",
                                  "pm.test(\"Response contains ID field\", function () {",
                                  "    if (pm.response.code === 200) {",
                                  "        const jsonData = pm.response.json();",
                                  "        pm.expect(jsonData).to.have.property(\"id\");",
                                  "    }",
                                  "});",
                                  "",
                                  "pm.test(\"Error response has proper structure\", function () {",
                                  "    if (pm.response.code >= 400) {",
                                  "        const jsonData = pm.response.json();",
                                  "        pm.expect(jsonData).to.have.property(\"error\");",
                                  "    }",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Frame-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Referrer-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Permissions-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ]
                        },
                        {
                          "name": "Create diagram collaboration session",
                          "request": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id",
                                "collaborate"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the threat model (UUID)"
                                },
                                {
                                  "key": "diagram_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the diagram (UUID)"
                                }
                              ]
                            },
                            "description": "Creates a new collaboration session for real-time diagram editing. Only one collaboration session can exist per diagram at a time. If a session already exists, returns 409 with a link to join the existing session."
                          },
                          "response": [
                            {
                              "name": "Collaboration session created successfully. The 201 status indicates successful creation - clients must NOT evaluate the payload to determine success.",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "collaborate"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Created",
                              "code": 201,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"session_id\": \"<uuid>\",\n  \"host\": \"<string>\",\n  \"threat_model_id\": \"<uuid>\",\n  \"threat_model_name\": \"<string>\",\n  \"diagram_id\": \"<uuid>\",\n  \"diagram_name\": \"<string>\",\n  \"participants\": [\n    {\n      \"user\": {\n        \"user_id\": \"<string>\",\n        \"email\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"last_activity\": \"<dateTime>\",\n      \"permissions\": \"reader\"\n    },\n    {\n      \"user\": {\n        \"user_id\": \"<string>\",\n        \"email\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"last_activity\": \"<dateTime>\",\n      \"permissions\": \"writer\"\n    }\n  ],\n  \"websocket_url\": \"<string>\",\n  \"presenter\": \"<string>\"\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "collaborate"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Bad Request",
                              "code": 400,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "collaborate"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "collaborate"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "collaborate"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Collaboration session already exists for this diagram",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "collaborate"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Conflict",
                              "code": 409,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"join_url\": \"<string>\"\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "collaborate"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Internal Server Error",
                              "code": 500,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"Status code is valid\", function () {",
                                  "    pm.expect(pm.response.code).to.be.oneOf([201, 400, 401, 403, 404, 409, 500]);",
                                  "});",
                                  "",
                                  "pm.test(\"Response time is less than 1000ms\", function () {",
                                  "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Type header\", function () {",
                                  "    pm.response.to.have.header(\"Content-Type\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response is valid JSON\", function () {",
                                  "    pm.response.to.be.json;",
                                  "});",
                                  "",
                                  "// Domain object specific tests",
                                  "",
                                  "pm.test(\"Error response has proper structure\", function () {",
                                  "    if (pm.response.code >= 400) {",
                                  "        const jsonData = pm.response.json();",
                                  "        pm.expect(jsonData).to.have.property(\"error\");",
                                  "    }",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Frame-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Referrer-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Permissions-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ]
                        },
                        {
                          "name": "Join diagram collaboration session",
                          "request": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id",
                                "collaborate"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the threat model (UUID)"
                                },
                                {
                                  "key": "diagram_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the diagram (UUID)"
                                }
                              ]
                            },
                            "description": "Joins an existing collaboration session for real-time diagram editing. The session must already exist."
                          },
                          "response": [
                            {
                              "name": "Successfully joined collaboration session. The 200 status indicates successful join - clients must NOT evaluate the payload to determine success.",
                              "originalRequest": {
                                "method": "PUT",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "collaborate"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"session_id\": \"<uuid>\",\n  \"host\": \"<string>\",\n  \"threat_model_id\": \"<uuid>\",\n  \"threat_model_name\": \"<string>\",\n  \"diagram_id\": \"<uuid>\",\n  \"diagram_name\": \"<string>\",\n  \"participants\": [\n    {\n      \"user\": {\n        \"user_id\": \"<string>\",\n        \"email\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"last_activity\": \"<dateTime>\",\n      \"permissions\": \"reader\"\n    },\n    {\n      \"user\": {\n        \"user_id\": \"<string>\",\n        \"email\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"last_activity\": \"<dateTime>\",\n      \"permissions\": \"writer\"\n    }\n  ],\n  \"websocket_url\": \"<string>\",\n  \"presenter\": \"<string>\"\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "PUT",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "collaborate"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "PUT",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "collaborate"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "PUT",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "collaborate"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "PUT",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "collaborate"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Internal Server Error",
                              "code": 500,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"Status code is valid\", function () {",
                                  "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 403, 404, 500]);",
                                  "});",
                                  "",
                                  "pm.test(\"Response time is less than 1000ms\", function () {",
                                  "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Type header\", function () {",
                                  "    pm.response.to.have.header(\"Content-Type\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response is valid JSON\", function () {",
                                  "    pm.response.to.be.json;",
                                  "});",
                                  "",
                                  "// Domain object specific tests",
                                  "",
                                  "pm.test(\"Error response has proper structure\", function () {",
                                  "    if (pm.response.code >= 400) {",
                                  "        const jsonData = pm.response.json();",
                                  "        pm.expect(jsonData).to.have.property(\"error\");",
                                  "    }",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Frame-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Referrer-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Permissions-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ]
                        },
                        {
                          "name": "End diagram collaboration session",
                          "request": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id",
                                "collaborate"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the threat model (UUID)"
                                },
                                {
                                  "key": "diagram_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the diagram (UUID)"
                                }
                              ]
                            },
                            "description": "Terminates the active collaboration session for a diagram"
                          },
                          "response": [
                            {
                              "name": "Collaboration session ended successfully",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "collaborate"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "No Content",
                              "code": 204,
                              "_postman_previewlanguage": "text",
                              "header": [],
                              "cookie": [],
                              "body": null
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "collaborate"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "collaborate"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "collaborate"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/collaborate",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "collaborate"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Internal Server Error",
                              "code": 500,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"Status code is valid\", function () {",
                                  "    pm.expect(pm.response.code).to.be.oneOf([204, 401, 403, 404, 500]);",
                                  "});",
                                  "",
                                  "pm.test(\"Response time is less than 1000ms\", function () {",
                                  "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                  "});",
                                  "",
                                  "pm.test(\"Response is valid JSON\", function () {",
                                  "    pm.response.to.be.json;",
                                  "});",
                                  "",
                                  "// Domain object specific tests",
                                  "",
                                  "pm.test(\"Error response has proper structure\", function () {",
                                  "    if (pm.response.code >= 400) {",
                                  "        const jsonData = pm.response.json();",
                                  "        pm.expect(jsonData).to.have.property(\"error\");",
                                  "    }",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Frame-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Referrer-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Permissions-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "metadata",
                      "item": [
                        {
                          "name": "{key}",
                          "item": [
                            {
                              "name": "Get diagram metadata by key",
                              "request": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/:key",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "metadata",
                                    ":key"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the threat model (UUID)"
                                    },
                                    {
                                      "key": "diagram_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the diagram (UUID)"
                                    },
                                    {
                                      "key": "key",
                                      "value": "<string>",
                                      "description": "(Required) Metadata key to retrieve"
                                    }
                                  ]
                                },
                                "description": "Retrieves a specific metadata entry for the diagram by key"
                              },
                              "response": [
                                {
                                  "name": "Metadata entry",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "diagrams",
                                        ":diagram_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "diagram_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "OK",
                                  "code": 200,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "diagrams",
                                        ":diagram_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "diagram_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "diagrams",
                                        ":diagram_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "diagram_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Forbidden",
                                  "code": 403,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "diagrams",
                                        ":diagram_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "diagram_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "GET",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "diagrams",
                                        ":diagram_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "diagram_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Internal Server Error",
                                  "code": 500,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                }
                              ],
                              "event": [
                                {
                                  "listen": "test",
                                  "script": {
                                    "exec": [
                                      "pm.test(\"Status code is valid\", function () {",
                                      "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 403, 404, 500]);",
                                      "});",
                                      "",
                                      "pm.test(\"Response time is less than 1000ms\", function () {",
                                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Type header\", function () {",
                                      "    pm.response.to.have.header(\"Content-Type\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response is valid JSON\", function () {",
                                      "    pm.response.to.be.json;",
                                      "});",
                                      "",
                                      "// Domain object specific tests",
                                      "pm.test(\"Response contains ID field\", function () {",
                                      "    if (pm.response.code === 200) {",
                                      "        const jsonData = pm.response.json();",
                                      "        pm.expect(jsonData).to.have.property(\"id\");",
                                      "    }",
                                      "});",
                                      "",
                                      "pm.test(\"Error response has proper structure\", function () {",
                                      "    if (pm.response.code >= 400) {",
                                      "        const jsonData = pm.response.json();",
                                      "        pm.expect(jsonData).to.have.property(\"error\");",
                                      "    }",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                      "});"
                                    ],
                                    "type": "text/javascript"
                                  }
                                }
                              ]
                            },
                            {
                              "name": "Update diagram metadata by key",
                              "request": {
                                "method": "PUT",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"value\": \"<string>\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/:key",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "metadata",
                                    ":key"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the threat model (UUID)"
                                    },
                                    {
                                      "key": "diagram_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the diagram (UUID)"
                                    },
                                    {
                                      "key": "key",
                                      "value": "<string>",
                                      "description": "(Required) Metadata key to update"
                                    }
                                  ]
                                },
                                "description": "Updates or creates a metadata entry for the diagram with the specified key"
                              },
                              "response": [
                                {
                                  "name": "Metadata entry updated successfully",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "diagrams",
                                        ":diagram_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "diagram_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "OK",
                                  "code": 200,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "diagrams",
                                        ":diagram_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "diagram_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Bad Request",
                                  "code": 400,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "diagrams",
                                        ":diagram_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "diagram_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "diagrams",
                                        ":diagram_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "diagram_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Forbidden",
                                  "code": 403,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "diagrams",
                                        ":diagram_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "diagram_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "PUT",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "{\n  \"value\": \"<string>\"\n}",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "diagrams",
                                        ":diagram_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "diagram_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Internal Server Error",
                                  "code": 500,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                }
                              ],
                              "event": [
                                {
                                  "listen": "test",
                                  "script": {
                                    "exec": [
                                      "pm.test(\"Status code is valid\", function () {",
                                      "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 401, 403, 404, 500]);",
                                      "});",
                                      "",
                                      "pm.test(\"Response time is less than 1000ms\", function () {",
                                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Type header\", function () {",
                                      "    pm.response.to.have.header(\"Content-Type\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response is valid JSON\", function () {",
                                      "    pm.response.to.be.json;",
                                      "});",
                                      "",
                                      "// Domain object specific tests",
                                      "",
                                      "pm.test(\"Error response has proper structure\", function () {",
                                      "    if (pm.response.code >= 400) {",
                                      "        const jsonData = pm.response.json();",
                                      "        pm.expect(jsonData).to.have.property(\"error\");",
                                      "    }",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                      "});"
                                    ],
                                    "type": "text/javascript"
                                  }
                                }
                              ]
                            },
                            {
                              "name": "Delete diagram metadata by key",
                              "request": {
                                "method": "DELETE",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/:key",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "metadata",
                                    ":key"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the threat model (UUID)"
                                    },
                                    {
                                      "key": "diagram_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the diagram (UUID)"
                                    },
                                    {
                                      "key": "key",
                                      "value": "<string>",
                                      "description": "(Required) Metadata key to delete"
                                    }
                                  ]
                                },
                                "description": "Removes a specific metadata entry for the diagram by key"
                              },
                              "response": [
                                {
                                  "name": "Metadata entry deleted successfully",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "diagrams",
                                        ":diagram_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "diagram_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "No Content",
                                  "code": 204,
                                  "_postman_previewlanguage": "text",
                                  "header": [],
                                  "cookie": [],
                                  "body": null
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "diagrams",
                                        ":diagram_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "diagram_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "diagrams",
                                        ":diagram_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "diagram_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Forbidden",
                                  "code": 403,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "diagrams",
                                        ":diagram_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "diagram_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "DELETE",
                                    "header": [
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/:key",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "diagrams",
                                        ":diagram_id",
                                        "metadata",
                                        ":key"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "diagram_id"
                                        },
                                        {
                                          "key": "key"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Internal Server Error",
                                  "code": 500,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                }
                              ],
                              "event": [
                                {
                                  "listen": "test",
                                  "script": {
                                    "exec": [
                                      "pm.test(\"Status code is valid\", function () {",
                                      "    pm.expect(pm.response.code).to.be.oneOf([204, 401, 403, 404, 500]);",
                                      "});",
                                      "",
                                      "pm.test(\"Response time is less than 1000ms\", function () {",
                                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                      "});",
                                      "",
                                      "pm.test(\"Response is valid JSON\", function () {",
                                      "    pm.response.to.be.json;",
                                      "});",
                                      "",
                                      "// Domain object specific tests",
                                      "",
                                      "pm.test(\"Error response has proper structure\", function () {",
                                      "    if (pm.response.code >= 400) {",
                                      "        const jsonData = pm.response.json();",
                                      "        pm.expect(jsonData).to.have.property(\"error\");",
                                      "    }",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                      "});"
                                    ],
                                    "type": "text/javascript"
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "name": "bulk",
                          "item": [
                            {
                              "name": "Bulk create diagram metadata",
                              "request": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/bulk",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "metadata",
                                    "bulk"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the threat model (UUID)"
                                    },
                                    {
                                      "key": "diagram_id",
                                      "value": "<uuid>",
                                      "description": "(Required) Unique identifier of the diagram (UUID)"
                                    }
                                  ]
                                },
                                "description": "Creates multiple metadata entries in a single operation for the specified diagram"
                              },
                              "response": [
                                {
                                  "name": "Metadata entries created successfully",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "diagrams",
                                        ":diagram_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "diagram_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Created",
                                  "code": 201,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "[\n  {\n    \"key\": \"7wVCWI1C4r\",\n    \"value\": \"'Nv66\"\n  },\n  {\n    \"key\": \"1bc\",\n    \"value\": \")X7mee8Z\"\n  }\n]"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "diagrams",
                                        ":diagram_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "diagram_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Bad Request",
                                  "code": 400,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "diagrams",
                                        ":diagram_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "diagram_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Unauthorized",
                                  "code": 401,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "diagrams",
                                        ":diagram_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "diagram_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Forbidden",
                                  "code": 403,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "diagrams",
                                        ":diagram_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "diagram_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Not Found",
                                  "code": 404,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                },
                                {
                                  "name": "Error response",
                                  "originalRequest": {
                                    "method": "POST",
                                    "header": [
                                      {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                      },
                                      {
                                        "key": "Accept",
                                        "value": "application/json"
                                      }
                                    ],
                                    "body": {
                                      "mode": "raw",
                                      "raw": "[\n  {\n    \"key\": \"R5.l\",\n    \"value\": \" \"\n  },\n  {\n    \"key\": \":68HXMaJdj\",\n    \"value\": \"5%1m_%\"\n  }\n]",
                                      "options": {
                                        "raw": {
                                          "headerFamily": "json",
                                          "language": "json"
                                        }
                                      }
                                    },
                                    "url": {
                                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata/bulk",
                                      "host": [
                                        "{{baseUrl}}"
                                      ],
                                      "path": [
                                        "threat_models",
                                        ":threat_model_id",
                                        "diagrams",
                                        ":diagram_id",
                                        "metadata",
                                        "bulk"
                                      ],
                                      "variable": [
                                        {
                                          "key": "threat_model_id"
                                        },
                                        {
                                          "key": "diagram_id"
                                        }
                                      ]
                                    }
                                  },
                                  "status": "Internal Server Error",
                                  "code": 500,
                                  "_postman_previewlanguage": "json",
                                  "header": [
                                    {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                    }
                                  ],
                                  "cookie": [],
                                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                                }
                              ],
                              "event": [
                                {
                                  "listen": "test",
                                  "script": {
                                    "exec": [
                                      "pm.test(\"Status code is valid\", function () {",
                                      "    pm.expect(pm.response.code).to.be.oneOf([201, 400, 401, 403, 404, 500]);",
                                      "});",
                                      "",
                                      "pm.test(\"Response time is less than 1000ms\", function () {",
                                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Type header\", function () {",
                                      "    pm.response.to.have.header(\"Content-Type\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response is valid JSON\", function () {",
                                      "    pm.response.to.be.json;",
                                      "});",
                                      "",
                                      "// Domain object specific tests",
                                      "",
                                      "pm.test(\"Error response has proper structure\", function () {",
                                      "    if (pm.response.code >= 400) {",
                                      "        const jsonData = pm.response.json();",
                                      "        pm.expect(jsonData).to.have.property(\"error\");",
                                      "    }",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                      "});",
                                      "",
                                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                      "});"
                                    ],
                                    "type": "text/javascript"
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "name": "Get diagram metadata",
                          "request": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id",
                                "metadata"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the threat model (UUID)"
                                },
                                {
                                  "key": "diagram_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the diagram (UUID)"
                                }
                              ]
                            },
                            "description": "Retrieves all metadata entries for the specified diagram"
                          },
                          "response": [
                            {
                              "name": "List of metadata entries",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "OK",
                              "code": 200,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "[\n  {\n    \"key\": \"7wVCWI1C4r\",\n    \"value\": \"'Nv66\"\n  },\n  {\n    \"key\": \"1bc\",\n    \"value\": \")X7mee8Z\"\n  }\n]"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "GET",
                                "header": [
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Internal Server Error",
                              "code": 500,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"Status code is valid\", function () {",
                                  "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 403, 404, 500]);",
                                  "});",
                                  "",
                                  "pm.test(\"Response time is less than 1000ms\", function () {",
                                  "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Type header\", function () {",
                                  "    pm.response.to.have.header(\"Content-Type\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response is valid JSON\", function () {",
                                  "    pm.response.to.be.json;",
                                  "});",
                                  "",
                                  "// Domain object specific tests",
                                  "pm.test(\"Response contains ID field\", function () {",
                                  "    if (pm.response.code === 200) {",
                                  "        const jsonData = pm.response.json();",
                                  "        pm.expect(jsonData).to.have.property(\"id\");",
                                  "    }",
                                  "});",
                                  "",
                                  "pm.test(\"Error response has proper structure\", function () {",
                                  "    if (pm.response.code >= 400) {",
                                  "        const jsonData = pm.response.json();",
                                  "        pm.expect(jsonData).to.have.property(\"error\");",
                                  "    }",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Frame-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Referrer-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Permissions-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ]
                        },
                        {
                          "name": "Create diagram metadata",
                          "request": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id",
                                "metadata"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the threat model (UUID)"
                                },
                                {
                                  "key": "diagram_id",
                                  "value": "<uuid>",
                                  "description": "(Required) Unique identifier of the diagram (UUID)"
                                }
                              ]
                            },
                            "description": "Creates a new metadata entry for the specified diagram"
                          },
                          "response": [
                            {
                              "name": "Metadata entry created successfully",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Created",
                              "code": 201,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Bad Request",
                              "code": 400,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Unauthorized",
                              "code": 401,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Forbidden",
                              "code": 403,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Not Found",
                              "code": 404,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            },
                            {
                              "name": "Error response",
                              "originalRequest": {
                                "method": "POST",
                                "header": [
                                  {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                  },
                                  {
                                    "key": "Accept",
                                    "value": "application/json"
                                  }
                                ],
                                "body": {
                                  "mode": "raw",
                                  "raw": "{\n  \"key\": \"KS\",\n  \"value\": \"bdu*d$\"\n}",
                                  "options": {
                                    "raw": {
                                      "headerFamily": "json",
                                      "language": "json"
                                    }
                                  }
                                },
                                "url": {
                                  "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id/metadata",
                                  "host": [
                                    "{{baseUrl}}"
                                  ],
                                  "path": [
                                    "threat_models",
                                    ":threat_model_id",
                                    "diagrams",
                                    ":diagram_id",
                                    "metadata"
                                  ],
                                  "variable": [
                                    {
                                      "key": "threat_model_id"
                                    },
                                    {
                                      "key": "diagram_id"
                                    }
                                  ]
                                }
                              },
                              "status": "Internal Server Error",
                              "code": 500,
                              "_postman_previewlanguage": "json",
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                }
                              ],
                              "cookie": [],
                              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                            }
                          ],
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "exec": [
                                  "pm.test(\"Status code is valid\", function () {",
                                  "    pm.expect(pm.response.code).to.be.oneOf([201, 400, 401, 403, 404, 500]);",
                                  "});",
                                  "",
                                  "pm.test(\"Response time is less than 1000ms\", function () {",
                                  "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Type header\", function () {",
                                  "    pm.response.to.have.header(\"Content-Type\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response is valid JSON\", function () {",
                                  "    pm.response.to.be.json;",
                                  "});",
                                  "",
                                  "// Domain object specific tests",
                                  "",
                                  "pm.test(\"Error response has proper structure\", function () {",
                                  "    if (pm.response.code >= 400) {",
                                  "        const jsonData = pm.response.json();",
                                  "        pm.expect(jsonData).to.have.property(\"error\");",
                                  "    }",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-Frame-Options header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has X-XSS-Protection header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Content-Security-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Referrer-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                                  "});",
                                  "",
                                  "pm.test(\"Response has Permissions-Policy header\", function () {",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                                  "});"
                                ],
                                "type": "text/javascript"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "Get a specific diagram",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "diagrams",
                            ":diagram_id"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat model (UUID)"
                            },
                            {
                              "key": "diagram_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the diagram (UUID)"
                            }
                          ]
                        },
                        "description": "Retrieves a specific diagram from the threat model"
                      },
                      "response": [
                        {
                          "name": "Diagram details",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "diagram_id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"cells\": [\n    {\n      \"height\": \"<number>\",\n      \"id\": \"<uuid>\",\n      \"shape\": \"<string>\",\n      \"width\": \"<number>\",\n      \"x\": \"<number>\",\n      \"y\": \"<number>\",\n      \"zIndex\": 1,\n      \"visible\": true,\n      \"data\": {\n        \"_metadata\": []\n      },\n      \"markup\": [\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": 4957.554484931113,\n            \"key_1\": 371.3079878968806\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        },\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": \"string\",\n            \"key_1\": 772.0522655754647,\n            \"key_2\": 1290\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        }\n      ],\n      \"tools\": [\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": \"string\"\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": \"string\",\n            \"key_1\": \"string\",\n            \"key_2\": false\n          }\n        }\n      ],\n      \"angle\": 0,\n      \"attrs\": {\n        \"body\": {\n          \"fill\": \"<string>\",\n          \"stroke\": \"<string>\",\n          \"strokeWidth\": \"<number>\",\n          \"strokeDasharray\": \"<string>\"\n        },\n        \"text\": {\n          \"text\": \"<string>\",\n          \"fontSize\": \"<number>\",\n          \"fill\": \"<string>\",\n          \"fontFamily\": \"<string>\"\n        }\n      },\n      \"ports\": {\n        \"groups\": {\n          \"key_0\": {\n            \"position\": \"right\"\n          }\n        },\n        \"items\": [\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          }\n        ]\n      },\n      \"parent\": \"<uuid>\",\n      \"label\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"size\": {\n        \"width\": \"<number>\",\n        \"height\": \"<number>\"\n      },\n      \"style\": {\n        \"fill\": \"<string>\",\n        \"stroke\": \"<string>\",\n        \"strokeWidth\": \"<number>\",\n        \"fontSize\": \"<number>\",\n        \"fontColor\": \"<string>\"\n      }\n    },\n    {\n      \"height\": \"<number>\",\n      \"id\": \"<uuid>\",\n      \"shape\": \"<string>\",\n      \"width\": \"<number>\",\n      \"x\": \"<number>\",\n      \"y\": \"<number>\",\n      \"zIndex\": 1,\n      \"visible\": true,\n      \"data\": {\n        \"_metadata\": []\n      },\n      \"markup\": [\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": 3268,\n            \"key_1\": \"string\",\n            \"key_2\": 3175.723042401681\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        },\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": 6937.007138629234,\n            \"key_1\": 5170\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        }\n      ],\n      \"tools\": [\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": false\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": 7870\n          }\n        }\n      ],\n      \"angle\": 0,\n      \"attrs\": {\n        \"body\": {\n          \"fill\": \"<string>\",\n          \"stroke\": \"<string>\",\n          \"strokeWidth\": \"<number>\",\n          \"strokeDasharray\": \"<string>\"\n        },\n        \"text\": {\n          \"text\": \"<string>\",\n          \"fontSize\": \"<number>\",\n          \"fill\": \"<string>\",\n          \"fontFamily\": \"<string>\"\n        }\n      },\n      \"ports\": {\n        \"groups\": {\n          \"key_0\": {\n            \"position\": \"right\"\n          },\n          \"key_1\": {\n            \"position\": \"bottom\"\n          },\n          \"key_2\": {\n            \"position\": \"top\"\n          },\n          \"key_3\": {\n            \"position\": \"bottom\"\n          },\n          \"key_4\": {\n            \"position\": \"bottom\"\n          }\n        },\n        \"items\": [\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          }\n        ]\n      },\n      \"parent\": \"<uuid>\",\n      \"label\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"size\": {\n        \"width\": \"<number>\",\n        \"height\": \"<number>\"\n      },\n      \"style\": {\n        \"fill\": \"<string>\",\n        \"stroke\": \"<string>\",\n        \"strokeWidth\": \"<number>\",\n        \"fontSize\": \"<number>\",\n        \"fontColor\": \"<string>\"\n      }\n    }\n  ],\n  \"created_at\": \"<dateTime>\",\n  \"id\": \"<uuid>\",\n  \"modified_at\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"type\": \"DFD-1.0.0\",\n  \"metadata\": [\n    {\n      \"key\": \"F0w_X\",\n      \"value\": \"X{b\"\n    },\n    {\n      \"key\": \"q\",\n      \"value\": \" \"\n    }\n  ]\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "diagram_id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "diagram_id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "diagram_id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "diagram_id"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is valid\", function () {",
                              "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 403, 404, 500]);",
                              "});",
                              "",
                              "pm.test(\"Response time is less than 1000ms\", function () {",
                              "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Type header\", function () {",
                              "    pm.response.to.have.header(\"Content-Type\");",
                              "});",
                              "",
                              "pm.test(\"Response is valid JSON\", function () {",
                              "    pm.response.to.be.json;",
                              "});",
                              "",
                              "// Domain object specific tests",
                              "pm.test(\"Response contains ID field\", function () {",
                              "    if (pm.response.code === 200) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"id\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Error response has proper structure\", function () {",
                              "    if (pm.response.code >= 400) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"error\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-Frame-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-XSS-Protection header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Security-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                              "});",
                              "",
                              "pm.test(\"Response has Referrer-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                              "});",
                              "",
                              "pm.test(\"Response has Permissions-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ]
                    },
                    {
                      "name": "Update a diagram",
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"cells\": [\n    {\n      \"height\": \"<number>\",\n      \"id\": \"<uuid>\",\n      \"shape\": \"<string>\",\n      \"width\": \"<number>\",\n      \"x\": \"<number>\",\n      \"y\": \"<number>\",\n      \"zIndex\": 1,\n      \"visible\": true,\n      \"data\": {\n        \"_metadata\": []\n      },\n      \"markup\": [\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": false,\n            \"key_1\": 5131.757428717867\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        },\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": false,\n            \"key_1\": \"string\"\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        }\n      ],\n      \"tools\": [\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": 8536.625209795682,\n            \"key_1\": 416.4483907188021,\n            \"key_2\": 1430.8328666260218\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": 819.3229294085925,\n            \"key_1\": \"string\"\n          }\n        }\n      ],\n      \"angle\": 0,\n      \"attrs\": {\n        \"body\": {\n          \"fill\": \"<string>\",\n          \"stroke\": \"<string>\",\n          \"strokeWidth\": \"<number>\",\n          \"strokeDasharray\": \"<string>\"\n        },\n        \"text\": {\n          \"text\": \"<string>\",\n          \"fontSize\": \"<number>\",\n          \"fill\": \"<string>\",\n          \"fontFamily\": \"<string>\"\n        }\n      },\n      \"ports\": {\n        \"groups\": {\n          \"key_0\": {\n            \"position\": \"top\"\n          }\n        },\n        \"items\": [\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          }\n        ]\n      },\n      \"parent\": \"<uuid>\",\n      \"label\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"size\": {\n        \"width\": \"<number>\",\n        \"height\": \"<number>\"\n      },\n      \"style\": {\n        \"fill\": \"<string>\",\n        \"stroke\": \"<string>\",\n        \"strokeWidth\": \"<number>\",\n        \"fontSize\": \"<number>\",\n        \"fontColor\": \"<string>\"\n      }\n    },\n    {\n      \"height\": \"<number>\",\n      \"id\": \"<uuid>\",\n      \"shape\": \"<string>\",\n      \"width\": \"<number>\",\n      \"x\": \"<number>\",\n      \"y\": \"<number>\",\n      \"zIndex\": 1,\n      \"visible\": true,\n      \"data\": {\n        \"_metadata\": []\n      },\n      \"markup\": [\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": false,\n            \"key_1\": true\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        },\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": \"string\"\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        }\n      ],\n      \"tools\": [\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": \"string\",\n            \"key_1\": 4105\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": \"string\"\n          }\n        }\n      ],\n      \"angle\": 0,\n      \"attrs\": {\n        \"body\": {\n          \"fill\": \"<string>\",\n          \"stroke\": \"<string>\",\n          \"strokeWidth\": \"<number>\",\n          \"strokeDasharray\": \"<string>\"\n        },\n        \"text\": {\n          \"text\": \"<string>\",\n          \"fontSize\": \"<number>\",\n          \"fill\": \"<string>\",\n          \"fontFamily\": \"<string>\"\n        }\n      },\n      \"ports\": {\n        \"groups\": {\n          \"key_0\": {\n            \"position\": \"right\"\n          }\n        },\n        \"items\": [\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          }\n        ]\n      },\n      \"parent\": \"<uuid>\",\n      \"label\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"size\": {\n        \"width\": \"<number>\",\n        \"height\": \"<number>\"\n      },\n      \"style\": {\n        \"fill\": \"<string>\",\n        \"stroke\": \"<string>\",\n        \"strokeWidth\": \"<number>\",\n        \"fontSize\": \"<number>\",\n        \"fontColor\": \"<string>\"\n      }\n    }\n  ],\n  \"created_at\": \"<dateTime>\",\n  \"modified_at\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"type\": \"DFD-1.0.0\",\n  \"metadata\": [\n    {\n      \"key\": \"cFxk\",\n      \"value\": \"re0/@\"\n    },\n    {\n      \"key\": \"Vs:CIUNmD\",\n      \"value\": \"mmT.5,[#*G\"\n    }\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "diagrams",
                            ":diagram_id"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat model (UUID)"
                            },
                            {
                              "key": "diagram_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the diagram (UUID)"
                            }
                          ]
                        },
                        "description": "Completely replaces a diagram with new data"
                      },
                      "response": [
                        {
                          "name": "Diagram updated successfully",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"cells\": [\n    {\n      \"height\": \"<number>\",\n      \"id\": \"<uuid>\",\n      \"shape\": \"<string>\",\n      \"width\": \"<number>\",\n      \"x\": \"<number>\",\n      \"y\": \"<number>\",\n      \"zIndex\": 1,\n      \"visible\": true,\n      \"data\": {\n        \"_metadata\": []\n      },\n      \"markup\": [\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": false,\n            \"key_1\": 5131.757428717867\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        },\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": false,\n            \"key_1\": \"string\"\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        }\n      ],\n      \"tools\": [\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": 8536.625209795682,\n            \"key_1\": 416.4483907188021,\n            \"key_2\": 1430.8328666260218\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": 819.3229294085925,\n            \"key_1\": \"string\"\n          }\n        }\n      ],\n      \"angle\": 0,\n      \"attrs\": {\n        \"body\": {\n          \"fill\": \"<string>\",\n          \"stroke\": \"<string>\",\n          \"strokeWidth\": \"<number>\",\n          \"strokeDasharray\": \"<string>\"\n        },\n        \"text\": {\n          \"text\": \"<string>\",\n          \"fontSize\": \"<number>\",\n          \"fill\": \"<string>\",\n          \"fontFamily\": \"<string>\"\n        }\n      },\n      \"ports\": {\n        \"groups\": {\n          \"key_0\": {\n            \"position\": \"top\"\n          }\n        },\n        \"items\": [\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          }\n        ]\n      },\n      \"parent\": \"<uuid>\",\n      \"label\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"size\": {\n        \"width\": \"<number>\",\n        \"height\": \"<number>\"\n      },\n      \"style\": {\n        \"fill\": \"<string>\",\n        \"stroke\": \"<string>\",\n        \"strokeWidth\": \"<number>\",\n        \"fontSize\": \"<number>\",\n        \"fontColor\": \"<string>\"\n      }\n    },\n    {\n      \"height\": \"<number>\",\n      \"id\": \"<uuid>\",\n      \"shape\": \"<string>\",\n      \"width\": \"<number>\",\n      \"x\": \"<number>\",\n      \"y\": \"<number>\",\n      \"zIndex\": 1,\n      \"visible\": true,\n      \"data\": {\n        \"_metadata\": []\n      },\n      \"markup\": [\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": false,\n            \"key_1\": true\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        },\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": \"string\"\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        }\n      ],\n      \"tools\": [\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": \"string\",\n            \"key_1\": 4105\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": \"string\"\n          }\n        }\n      ],\n      \"angle\": 0,\n      \"attrs\": {\n        \"body\": {\n          \"fill\": \"<string>\",\n          \"stroke\": \"<string>\",\n          \"strokeWidth\": \"<number>\",\n          \"strokeDasharray\": \"<string>\"\n        },\n        \"text\": {\n          \"text\": \"<string>\",\n          \"fontSize\": \"<number>\",\n          \"fill\": \"<string>\",\n          \"fontFamily\": \"<string>\"\n        }\n      },\n      \"ports\": {\n        \"groups\": {\n          \"key_0\": {\n            \"position\": \"right\"\n          }\n        },\n        \"items\": [\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          }\n        ]\n      },\n      \"parent\": \"<uuid>\",\n      \"label\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"size\": {\n        \"width\": \"<number>\",\n        \"height\": \"<number>\"\n      },\n      \"style\": {\n        \"fill\": \"<string>\",\n        \"stroke\": \"<string>\",\n        \"strokeWidth\": \"<number>\",\n        \"fontSize\": \"<number>\",\n        \"fontColor\": \"<string>\"\n      }\n    }\n  ],\n  \"created_at\": \"<dateTime>\",\n  \"modified_at\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"type\": \"DFD-1.0.0\",\n  \"metadata\": [\n    {\n      \"key\": \"cFxk\",\n      \"value\": \"re0/@\"\n    },\n    {\n      \"key\": \"Vs:CIUNmD\",\n      \"value\": \"mmT.5,[#*G\"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "diagram_id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"cells\": [\n    {\n      \"height\": \"<number>\",\n      \"id\": \"<uuid>\",\n      \"shape\": \"<string>\",\n      \"width\": \"<number>\",\n      \"x\": \"<number>\",\n      \"y\": \"<number>\",\n      \"zIndex\": 1,\n      \"visible\": true,\n      \"data\": {\n        \"_metadata\": []\n      },\n      \"markup\": [\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": 4957.554484931113,\n            \"key_1\": 371.3079878968806\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        },\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": \"string\",\n            \"key_1\": 772.0522655754647,\n            \"key_2\": 1290\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        }\n      ],\n      \"tools\": [\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": \"string\"\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": \"string\",\n            \"key_1\": \"string\",\n            \"key_2\": false\n          }\n        }\n      ],\n      \"angle\": 0,\n      \"attrs\": {\n        \"body\": {\n          \"fill\": \"<string>\",\n          \"stroke\": \"<string>\",\n          \"strokeWidth\": \"<number>\",\n          \"strokeDasharray\": \"<string>\"\n        },\n        \"text\": {\n          \"text\": \"<string>\",\n          \"fontSize\": \"<number>\",\n          \"fill\": \"<string>\",\n          \"fontFamily\": \"<string>\"\n        }\n      },\n      \"ports\": {\n        \"groups\": {\n          \"key_0\": {\n            \"position\": \"right\"\n          }\n        },\n        \"items\": [\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          }\n        ]\n      },\n      \"parent\": \"<uuid>\",\n      \"label\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"size\": {\n        \"width\": \"<number>\",\n        \"height\": \"<number>\"\n      },\n      \"style\": {\n        \"fill\": \"<string>\",\n        \"stroke\": \"<string>\",\n        \"strokeWidth\": \"<number>\",\n        \"fontSize\": \"<number>\",\n        \"fontColor\": \"<string>\"\n      }\n    },\n    {\n      \"height\": \"<number>\",\n      \"id\": \"<uuid>\",\n      \"shape\": \"<string>\",\n      \"width\": \"<number>\",\n      \"x\": \"<number>\",\n      \"y\": \"<number>\",\n      \"zIndex\": 1,\n      \"visible\": true,\n      \"data\": {\n        \"_metadata\": []\n      },\n      \"markup\": [\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": 3268,\n            \"key_1\": \"string\",\n            \"key_2\": 3175.723042401681\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        },\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": 6937.007138629234,\n            \"key_1\": 5170\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        }\n      ],\n      \"tools\": [\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": false\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": 7870\n          }\n        }\n      ],\n      \"angle\": 0,\n      \"attrs\": {\n        \"body\": {\n          \"fill\": \"<string>\",\n          \"stroke\": \"<string>\",\n          \"strokeWidth\": \"<number>\",\n          \"strokeDasharray\": \"<string>\"\n        },\n        \"text\": {\n          \"text\": \"<string>\",\n          \"fontSize\": \"<number>\",\n          \"fill\": \"<string>\",\n          \"fontFamily\": \"<string>\"\n        }\n      },\n      \"ports\": {\n        \"groups\": {\n          \"key_0\": {\n            \"position\": \"right\"\n          },\n          \"key_1\": {\n            \"position\": \"bottom\"\n          },\n          \"key_2\": {\n            \"position\": \"top\"\n          },\n          \"key_3\": {\n            \"position\": \"bottom\"\n          },\n          \"key_4\": {\n            \"position\": \"bottom\"\n          }\n        },\n        \"items\": [\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          }\n        ]\n      },\n      \"parent\": \"<uuid>\",\n      \"label\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"size\": {\n        \"width\": \"<number>\",\n        \"height\": \"<number>\"\n      },\n      \"style\": {\n        \"fill\": \"<string>\",\n        \"stroke\": \"<string>\",\n        \"strokeWidth\": \"<number>\",\n        \"fontSize\": \"<number>\",\n        \"fontColor\": \"<string>\"\n      }\n    }\n  ],\n  \"created_at\": \"<dateTime>\",\n  \"id\": \"<uuid>\",\n  \"modified_at\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"type\": \"DFD-1.0.0\",\n  \"metadata\": [\n    {\n      \"key\": \"F0w_X\",\n      \"value\": \"X{b\"\n    },\n    {\n      \"key\": \"q\",\n      \"value\": \" \"\n    }\n  ]\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"cells\": [\n    {\n      \"height\": \"<number>\",\n      \"id\": \"<uuid>\",\n      \"shape\": \"<string>\",\n      \"width\": \"<number>\",\n      \"x\": \"<number>\",\n      \"y\": \"<number>\",\n      \"zIndex\": 1,\n      \"visible\": true,\n      \"data\": {\n        \"_metadata\": []\n      },\n      \"markup\": [\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": false,\n            \"key_1\": 5131.757428717867\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        },\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": false,\n            \"key_1\": \"string\"\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        }\n      ],\n      \"tools\": [\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": 8536.625209795682,\n            \"key_1\": 416.4483907188021,\n            \"key_2\": 1430.8328666260218\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": 819.3229294085925,\n            \"key_1\": \"string\"\n          }\n        }\n      ],\n      \"angle\": 0,\n      \"attrs\": {\n        \"body\": {\n          \"fill\": \"<string>\",\n          \"stroke\": \"<string>\",\n          \"strokeWidth\": \"<number>\",\n          \"strokeDasharray\": \"<string>\"\n        },\n        \"text\": {\n          \"text\": \"<string>\",\n          \"fontSize\": \"<number>\",\n          \"fill\": \"<string>\",\n          \"fontFamily\": \"<string>\"\n        }\n      },\n      \"ports\": {\n        \"groups\": {\n          \"key_0\": {\n            \"position\": \"top\"\n          }\n        },\n        \"items\": [\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          }\n        ]\n      },\n      \"parent\": \"<uuid>\",\n      \"label\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"size\": {\n        \"width\": \"<number>\",\n        \"height\": \"<number>\"\n      },\n      \"style\": {\n        \"fill\": \"<string>\",\n        \"stroke\": \"<string>\",\n        \"strokeWidth\": \"<number>\",\n        \"fontSize\": \"<number>\",\n        \"fontColor\": \"<string>\"\n      }\n    },\n    {\n      \"height\": \"<number>\",\n      \"id\": \"<uuid>\",\n      \"shape\": \"<string>\",\n      \"width\": \"<number>\",\n      \"x\": \"<number>\",\n      \"y\": \"<number>\",\n      \"zIndex\": 1,\n      \"visible\": true,\n      \"data\": {\n        \"_metadata\": []\n      },\n      \"markup\": [\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": false,\n            \"key_1\": true\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        },\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": \"string\"\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        }\n      ],\n      \"tools\": [\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": \"string\",\n            \"key_1\": 4105\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": \"string\"\n          }\n        }\n      ],\n      \"angle\": 0,\n      \"attrs\": {\n        \"body\": {\n          \"fill\": \"<string>\",\n          \"stroke\": \"<string>\",\n          \"strokeWidth\": \"<number>\",\n          \"strokeDasharray\": \"<string>\"\n        },\n        \"text\": {\n          \"text\": \"<string>\",\n          \"fontSize\": \"<number>\",\n          \"fill\": \"<string>\",\n          \"fontFamily\": \"<string>\"\n        }\n      },\n      \"ports\": {\n        \"groups\": {\n          \"key_0\": {\n            \"position\": \"right\"\n          }\n        },\n        \"items\": [\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          }\n        ]\n      },\n      \"parent\": \"<uuid>\",\n      \"label\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"size\": {\n        \"width\": \"<number>\",\n        \"height\": \"<number>\"\n      },\n      \"style\": {\n        \"fill\": \"<string>\",\n        \"stroke\": \"<string>\",\n        \"strokeWidth\": \"<number>\",\n        \"fontSize\": \"<number>\",\n        \"fontColor\": \"<string>\"\n      }\n    }\n  ],\n  \"created_at\": \"<dateTime>\",\n  \"modified_at\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"type\": \"DFD-1.0.0\",\n  \"metadata\": [\n    {\n      \"key\": \"cFxk\",\n      \"value\": \"re0/@\"\n    },\n    {\n      \"key\": \"Vs:CIUNmD\",\n      \"value\": \"mmT.5,[#*G\"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "diagram_id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"cells\": [\n    {\n      \"height\": \"<number>\",\n      \"id\": \"<uuid>\",\n      \"shape\": \"<string>\",\n      \"width\": \"<number>\",\n      \"x\": \"<number>\",\n      \"y\": \"<number>\",\n      \"zIndex\": 1,\n      \"visible\": true,\n      \"data\": {\n        \"_metadata\": []\n      },\n      \"markup\": [\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": false,\n            \"key_1\": 5131.757428717867\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        },\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": false,\n            \"key_1\": \"string\"\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        }\n      ],\n      \"tools\": [\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": 8536.625209795682,\n            \"key_1\": 416.4483907188021,\n            \"key_2\": 1430.8328666260218\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": 819.3229294085925,\n            \"key_1\": \"string\"\n          }\n        }\n      ],\n      \"angle\": 0,\n      \"attrs\": {\n        \"body\": {\n          \"fill\": \"<string>\",\n          \"stroke\": \"<string>\",\n          \"strokeWidth\": \"<number>\",\n          \"strokeDasharray\": \"<string>\"\n        },\n        \"text\": {\n          \"text\": \"<string>\",\n          \"fontSize\": \"<number>\",\n          \"fill\": \"<string>\",\n          \"fontFamily\": \"<string>\"\n        }\n      },\n      \"ports\": {\n        \"groups\": {\n          \"key_0\": {\n            \"position\": \"top\"\n          }\n        },\n        \"items\": [\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          }\n        ]\n      },\n      \"parent\": \"<uuid>\",\n      \"label\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"size\": {\n        \"width\": \"<number>\",\n        \"height\": \"<number>\"\n      },\n      \"style\": {\n        \"fill\": \"<string>\",\n        \"stroke\": \"<string>\",\n        \"strokeWidth\": \"<number>\",\n        \"fontSize\": \"<number>\",\n        \"fontColor\": \"<string>\"\n      }\n    },\n    {\n      \"height\": \"<number>\",\n      \"id\": \"<uuid>\",\n      \"shape\": \"<string>\",\n      \"width\": \"<number>\",\n      \"x\": \"<number>\",\n      \"y\": \"<number>\",\n      \"zIndex\": 1,\n      \"visible\": true,\n      \"data\": {\n        \"_metadata\": []\n      },\n      \"markup\": [\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": false,\n            \"key_1\": true\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        },\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": \"string\"\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        }\n      ],\n      \"tools\": [\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": \"string\",\n            \"key_1\": 4105\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": \"string\"\n          }\n        }\n      ],\n      \"angle\": 0,\n      \"attrs\": {\n        \"body\": {\n          \"fill\": \"<string>\",\n          \"stroke\": \"<string>\",\n          \"strokeWidth\": \"<number>\",\n          \"strokeDasharray\": \"<string>\"\n        },\n        \"text\": {\n          \"text\": \"<string>\",\n          \"fontSize\": \"<number>\",\n          \"fill\": \"<string>\",\n          \"fontFamily\": \"<string>\"\n        }\n      },\n      \"ports\": {\n        \"groups\": {\n          \"key_0\": {\n            \"position\": \"right\"\n          }\n        },\n        \"items\": [\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          }\n        ]\n      },\n      \"parent\": \"<uuid>\",\n      \"label\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"size\": {\n        \"width\": \"<number>\",\n        \"height\": \"<number>\"\n      },\n      \"style\": {\n        \"fill\": \"<string>\",\n        \"stroke\": \"<string>\",\n        \"strokeWidth\": \"<number>\",\n        \"fontSize\": \"<number>\",\n        \"fontColor\": \"<string>\"\n      }\n    }\n  ],\n  \"created_at\": \"<dateTime>\",\n  \"modified_at\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"type\": \"DFD-1.0.0\",\n  \"metadata\": [\n    {\n      \"key\": \"cFxk\",\n      \"value\": \"re0/@\"\n    },\n    {\n      \"key\": \"Vs:CIUNmD\",\n      \"value\": \"mmT.5,[#*G\"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "diagram_id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"cells\": [\n    {\n      \"height\": \"<number>\",\n      \"id\": \"<uuid>\",\n      \"shape\": \"<string>\",\n      \"width\": \"<number>\",\n      \"x\": \"<number>\",\n      \"y\": \"<number>\",\n      \"zIndex\": 1,\n      \"visible\": true,\n      \"data\": {\n        \"_metadata\": []\n      },\n      \"markup\": [\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": false,\n            \"key_1\": 5131.757428717867\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        },\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": false,\n            \"key_1\": \"string\"\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        }\n      ],\n      \"tools\": [\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": 8536.625209795682,\n            \"key_1\": 416.4483907188021,\n            \"key_2\": 1430.8328666260218\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": 819.3229294085925,\n            \"key_1\": \"string\"\n          }\n        }\n      ],\n      \"angle\": 0,\n      \"attrs\": {\n        \"body\": {\n          \"fill\": \"<string>\",\n          \"stroke\": \"<string>\",\n          \"strokeWidth\": \"<number>\",\n          \"strokeDasharray\": \"<string>\"\n        },\n        \"text\": {\n          \"text\": \"<string>\",\n          \"fontSize\": \"<number>\",\n          \"fill\": \"<string>\",\n          \"fontFamily\": \"<string>\"\n        }\n      },\n      \"ports\": {\n        \"groups\": {\n          \"key_0\": {\n            \"position\": \"top\"\n          }\n        },\n        \"items\": [\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          }\n        ]\n      },\n      \"parent\": \"<uuid>\",\n      \"label\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"size\": {\n        \"width\": \"<number>\",\n        \"height\": \"<number>\"\n      },\n      \"style\": {\n        \"fill\": \"<string>\",\n        \"stroke\": \"<string>\",\n        \"strokeWidth\": \"<number>\",\n        \"fontSize\": \"<number>\",\n        \"fontColor\": \"<string>\"\n      }\n    },\n    {\n      \"height\": \"<number>\",\n      \"id\": \"<uuid>\",\n      \"shape\": \"<string>\",\n      \"width\": \"<number>\",\n      \"x\": \"<number>\",\n      \"y\": \"<number>\",\n      \"zIndex\": 1,\n      \"visible\": true,\n      \"data\": {\n        \"_metadata\": []\n      },\n      \"markup\": [\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": false,\n            \"key_1\": true\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        },\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": \"string\"\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        }\n      ],\n      \"tools\": [\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": \"string\",\n            \"key_1\": 4105\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": \"string\"\n          }\n        }\n      ],\n      \"angle\": 0,\n      \"attrs\": {\n        \"body\": {\n          \"fill\": \"<string>\",\n          \"stroke\": \"<string>\",\n          \"strokeWidth\": \"<number>\",\n          \"strokeDasharray\": \"<string>\"\n        },\n        \"text\": {\n          \"text\": \"<string>\",\n          \"fontSize\": \"<number>\",\n          \"fill\": \"<string>\",\n          \"fontFamily\": \"<string>\"\n        }\n      },\n      \"ports\": {\n        \"groups\": {\n          \"key_0\": {\n            \"position\": \"right\"\n          }\n        },\n        \"items\": [\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          }\n        ]\n      },\n      \"parent\": \"<uuid>\",\n      \"label\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"size\": {\n        \"width\": \"<number>\",\n        \"height\": \"<number>\"\n      },\n      \"style\": {\n        \"fill\": \"<string>\",\n        \"stroke\": \"<string>\",\n        \"strokeWidth\": \"<number>\",\n        \"fontSize\": \"<number>\",\n        \"fontColor\": \"<string>\"\n      }\n    }\n  ],\n  \"created_at\": \"<dateTime>\",\n  \"modified_at\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"type\": \"DFD-1.0.0\",\n  \"metadata\": [\n    {\n      \"key\": \"cFxk\",\n      \"value\": \"re0/@\"\n    },\n    {\n      \"key\": \"Vs:CIUNmD\",\n      \"value\": \"mmT.5,[#*G\"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "diagram_id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"cells\": [\n    {\n      \"height\": \"<number>\",\n      \"id\": \"<uuid>\",\n      \"shape\": \"<string>\",\n      \"width\": \"<number>\",\n      \"x\": \"<number>\",\n      \"y\": \"<number>\",\n      \"zIndex\": 1,\n      \"visible\": true,\n      \"data\": {\n        \"_metadata\": []\n      },\n      \"markup\": [\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": false,\n            \"key_1\": 5131.757428717867\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        },\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": false,\n            \"key_1\": \"string\"\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        }\n      ],\n      \"tools\": [\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": 8536.625209795682,\n            \"key_1\": 416.4483907188021,\n            \"key_2\": 1430.8328666260218\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": 819.3229294085925,\n            \"key_1\": \"string\"\n          }\n        }\n      ],\n      \"angle\": 0,\n      \"attrs\": {\n        \"body\": {\n          \"fill\": \"<string>\",\n          \"stroke\": \"<string>\",\n          \"strokeWidth\": \"<number>\",\n          \"strokeDasharray\": \"<string>\"\n        },\n        \"text\": {\n          \"text\": \"<string>\",\n          \"fontSize\": \"<number>\",\n          \"fill\": \"<string>\",\n          \"fontFamily\": \"<string>\"\n        }\n      },\n      \"ports\": {\n        \"groups\": {\n          \"key_0\": {\n            \"position\": \"top\"\n          }\n        },\n        \"items\": [\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          }\n        ]\n      },\n      \"parent\": \"<uuid>\",\n      \"label\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"size\": {\n        \"width\": \"<number>\",\n        \"height\": \"<number>\"\n      },\n      \"style\": {\n        \"fill\": \"<string>\",\n        \"stroke\": \"<string>\",\n        \"strokeWidth\": \"<number>\",\n        \"fontSize\": \"<number>\",\n        \"fontColor\": \"<string>\"\n      }\n    },\n    {\n      \"height\": \"<number>\",\n      \"id\": \"<uuid>\",\n      \"shape\": \"<string>\",\n      \"width\": \"<number>\",\n      \"x\": \"<number>\",\n      \"y\": \"<number>\",\n      \"zIndex\": 1,\n      \"visible\": true,\n      \"data\": {\n        \"_metadata\": []\n      },\n      \"markup\": [\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": false,\n            \"key_1\": true\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        },\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": \"string\"\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        }\n      ],\n      \"tools\": [\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": \"string\",\n            \"key_1\": 4105\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": \"string\"\n          }\n        }\n      ],\n      \"angle\": 0,\n      \"attrs\": {\n        \"body\": {\n          \"fill\": \"<string>\",\n          \"stroke\": \"<string>\",\n          \"strokeWidth\": \"<number>\",\n          \"strokeDasharray\": \"<string>\"\n        },\n        \"text\": {\n          \"text\": \"<string>\",\n          \"fontSize\": \"<number>\",\n          \"fill\": \"<string>\",\n          \"fontFamily\": \"<string>\"\n        }\n      },\n      \"ports\": {\n        \"groups\": {\n          \"key_0\": {\n            \"position\": \"right\"\n          }\n        },\n        \"items\": [\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          }\n        ]\n      },\n      \"parent\": \"<uuid>\",\n      \"label\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"size\": {\n        \"width\": \"<number>\",\n        \"height\": \"<number>\"\n      },\n      \"style\": {\n        \"fill\": \"<string>\",\n        \"stroke\": \"<string>\",\n        \"strokeWidth\": \"<number>\",\n        \"fontSize\": \"<number>\",\n        \"fontColor\": \"<string>\"\n      }\n    }\n  ],\n  \"created_at\": \"<dateTime>\",\n  \"modified_at\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"type\": \"DFD-1.0.0\",\n  \"metadata\": [\n    {\n      \"key\": \"cFxk\",\n      \"value\": \"re0/@\"\n    },\n    {\n      \"key\": \"Vs:CIUNmD\",\n      \"value\": \"mmT.5,[#*G\"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "diagram_id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"cells\": [\n    {\n      \"height\": \"<number>\",\n      \"id\": \"<uuid>\",\n      \"shape\": \"<string>\",\n      \"width\": \"<number>\",\n      \"x\": \"<number>\",\n      \"y\": \"<number>\",\n      \"zIndex\": 1,\n      \"visible\": true,\n      \"data\": {\n        \"_metadata\": []\n      },\n      \"markup\": [\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": false,\n            \"key_1\": 5131.757428717867\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        },\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": false,\n            \"key_1\": \"string\"\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        }\n      ],\n      \"tools\": [\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": 8536.625209795682,\n            \"key_1\": 416.4483907188021,\n            \"key_2\": 1430.8328666260218\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": 819.3229294085925,\n            \"key_1\": \"string\"\n          }\n        }\n      ],\n      \"angle\": 0,\n      \"attrs\": {\n        \"body\": {\n          \"fill\": \"<string>\",\n          \"stroke\": \"<string>\",\n          \"strokeWidth\": \"<number>\",\n          \"strokeDasharray\": \"<string>\"\n        },\n        \"text\": {\n          \"text\": \"<string>\",\n          \"fontSize\": \"<number>\",\n          \"fill\": \"<string>\",\n          \"fontFamily\": \"<string>\"\n        }\n      },\n      \"ports\": {\n        \"groups\": {\n          \"key_0\": {\n            \"position\": \"top\"\n          }\n        },\n        \"items\": [\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          }\n        ]\n      },\n      \"parent\": \"<uuid>\",\n      \"label\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"size\": {\n        \"width\": \"<number>\",\n        \"height\": \"<number>\"\n      },\n      \"style\": {\n        \"fill\": \"<string>\",\n        \"stroke\": \"<string>\",\n        \"strokeWidth\": \"<number>\",\n        \"fontSize\": \"<number>\",\n        \"fontColor\": \"<string>\"\n      }\n    },\n    {\n      \"height\": \"<number>\",\n      \"id\": \"<uuid>\",\n      \"shape\": \"<string>\",\n      \"width\": \"<number>\",\n      \"x\": \"<number>\",\n      \"y\": \"<number>\",\n      \"zIndex\": 1,\n      \"visible\": true,\n      \"data\": {\n        \"_metadata\": []\n      },\n      \"markup\": [\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": false,\n            \"key_1\": true\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        },\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": \"string\"\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        }\n      ],\n      \"tools\": [\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": \"string\",\n            \"key_1\": 4105\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": \"string\"\n          }\n        }\n      ],\n      \"angle\": 0,\n      \"attrs\": {\n        \"body\": {\n          \"fill\": \"<string>\",\n          \"stroke\": \"<string>\",\n          \"strokeWidth\": \"<number>\",\n          \"strokeDasharray\": \"<string>\"\n        },\n        \"text\": {\n          \"text\": \"<string>\",\n          \"fontSize\": \"<number>\",\n          \"fill\": \"<string>\",\n          \"fontFamily\": \"<string>\"\n        }\n      },\n      \"ports\": {\n        \"groups\": {\n          \"key_0\": {\n            \"position\": \"right\"\n          }\n        },\n        \"items\": [\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          }\n        ]\n      },\n      \"parent\": \"<uuid>\",\n      \"label\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"size\": {\n        \"width\": \"<number>\",\n        \"height\": \"<number>\"\n      },\n      \"style\": {\n        \"fill\": \"<string>\",\n        \"stroke\": \"<string>\",\n        \"strokeWidth\": \"<number>\",\n        \"fontSize\": \"<number>\",\n        \"fontColor\": \"<string>\"\n      }\n    }\n  ],\n  \"created_at\": \"<dateTime>\",\n  \"modified_at\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"type\": \"DFD-1.0.0\",\n  \"metadata\": [\n    {\n      \"key\": \"cFxk\",\n      \"value\": \"re0/@\"\n    },\n    {\n      \"key\": \"Vs:CIUNmD\",\n      \"value\": \"mmT.5,[#*G\"\n    }\n  ]\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "diagram_id"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is valid\", function () {",
                              "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 401, 403, 404, 500]);",
                              "});",
                              "",
                              "pm.test(\"Response time is less than 1000ms\", function () {",
                              "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Type header\", function () {",
                              "    pm.response.to.have.header(\"Content-Type\");",
                              "});",
                              "",
                              "pm.test(\"Response is valid JSON\", function () {",
                              "    pm.response.to.be.json;",
                              "});",
                              "",
                              "// Domain object specific tests",
                              "",
                              "pm.test(\"Error response has proper structure\", function () {",
                              "    if (pm.response.code >= 400) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"error\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-Frame-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-XSS-Protection header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Security-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                              "});",
                              "",
                              "pm.test(\"Response has Referrer-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                              "});",
                              "",
                              "pm.test(\"Response has Permissions-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ]
                    },
                    {
                      "name": "Partially update a diagram",
                      "request": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json-patch+json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  },\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  }\n]",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "diagrams",
                            ":diagram_id"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat model (UUID)"
                            },
                            {
                              "key": "diagram_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the diagram (UUID)"
                            }
                          ]
                        },
                        "description": "Apply JSON Patch operations to update specific parts of a diagram"
                      },
                      "response": [
                        {
                          "name": "Diagram updated successfully",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json-patch+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  },\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "diagram_id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"cells\": [\n    {\n      \"height\": \"<number>\",\n      \"id\": \"<uuid>\",\n      \"shape\": \"<string>\",\n      \"width\": \"<number>\",\n      \"x\": \"<number>\",\n      \"y\": \"<number>\",\n      \"zIndex\": 1,\n      \"visible\": true,\n      \"data\": {\n        \"_metadata\": []\n      },\n      \"markup\": [\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": 4957.554484931113,\n            \"key_1\": 371.3079878968806\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        },\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": \"string\",\n            \"key_1\": 772.0522655754647,\n            \"key_2\": 1290\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        }\n      ],\n      \"tools\": [\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": \"string\"\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": \"string\",\n            \"key_1\": \"string\",\n            \"key_2\": false\n          }\n        }\n      ],\n      \"angle\": 0,\n      \"attrs\": {\n        \"body\": {\n          \"fill\": \"<string>\",\n          \"stroke\": \"<string>\",\n          \"strokeWidth\": \"<number>\",\n          \"strokeDasharray\": \"<string>\"\n        },\n        \"text\": {\n          \"text\": \"<string>\",\n          \"fontSize\": \"<number>\",\n          \"fill\": \"<string>\",\n          \"fontFamily\": \"<string>\"\n        }\n      },\n      \"ports\": {\n        \"groups\": {\n          \"key_0\": {\n            \"position\": \"right\"\n          }\n        },\n        \"items\": [\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          }\n        ]\n      },\n      \"parent\": \"<uuid>\",\n      \"label\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"size\": {\n        \"width\": \"<number>\",\n        \"height\": \"<number>\"\n      },\n      \"style\": {\n        \"fill\": \"<string>\",\n        \"stroke\": \"<string>\",\n        \"strokeWidth\": \"<number>\",\n        \"fontSize\": \"<number>\",\n        \"fontColor\": \"<string>\"\n      }\n    },\n    {\n      \"height\": \"<number>\",\n      \"id\": \"<uuid>\",\n      \"shape\": \"<string>\",\n      \"width\": \"<number>\",\n      \"x\": \"<number>\",\n      \"y\": \"<number>\",\n      \"zIndex\": 1,\n      \"visible\": true,\n      \"data\": {\n        \"_metadata\": []\n      },\n      \"markup\": [\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": 3268,\n            \"key_1\": \"string\",\n            \"key_2\": 3175.723042401681\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        },\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": 6937.007138629234,\n            \"key_1\": 5170\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        }\n      ],\n      \"tools\": [\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": false\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": 7870\n          }\n        }\n      ],\n      \"angle\": 0,\n      \"attrs\": {\n        \"body\": {\n          \"fill\": \"<string>\",\n          \"stroke\": \"<string>\",\n          \"strokeWidth\": \"<number>\",\n          \"strokeDasharray\": \"<string>\"\n        },\n        \"text\": {\n          \"text\": \"<string>\",\n          \"fontSize\": \"<number>\",\n          \"fill\": \"<string>\",\n          \"fontFamily\": \"<string>\"\n        }\n      },\n      \"ports\": {\n        \"groups\": {\n          \"key_0\": {\n            \"position\": \"right\"\n          },\n          \"key_1\": {\n            \"position\": \"bottom\"\n          },\n          \"key_2\": {\n            \"position\": \"top\"\n          },\n          \"key_3\": {\n            \"position\": \"bottom\"\n          },\n          \"key_4\": {\n            \"position\": \"bottom\"\n          }\n        },\n        \"items\": [\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          }\n        ]\n      },\n      \"parent\": \"<uuid>\",\n      \"label\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"size\": {\n        \"width\": \"<number>\",\n        \"height\": \"<number>\"\n      },\n      \"style\": {\n        \"fill\": \"<string>\",\n        \"stroke\": \"<string>\",\n        \"strokeWidth\": \"<number>\",\n        \"fontSize\": \"<number>\",\n        \"fontColor\": \"<string>\"\n      }\n    }\n  ],\n  \"created_at\": \"<dateTime>\",\n  \"id\": \"<uuid>\",\n  \"modified_at\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"type\": \"DFD-1.0.0\",\n  \"metadata\": [\n    {\n      \"key\": \"F0w_X\",\n      \"value\": \"X{b\"\n    },\n    {\n      \"key\": \"q\",\n      \"value\": \" \"\n    }\n  ]\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json-patch+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  },\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "diagram_id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json-patch+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  },\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "diagram_id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json-patch+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  },\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "diagram_id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json-patch+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  },\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "diagram_id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json-patch+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  },\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "diagram_id"
                                }
                              ]
                            }
                          },
                          "status": "Unprocessable Entity (WebDAV) (RFC 4918)",
                          "code": 422,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "PATCH",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json-patch+json"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  },\n  {\n    \"op\": \"replace\",\n    \"path\": \"<string>\",\n    \"value\": {},\n    \"from\": \"<string>\"\n  }\n]",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "diagram_id"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is valid\", function () {",
                              "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 401, 403, 404, 422, 500]);",
                              "});",
                              "",
                              "pm.test(\"Response time is less than 1000ms\", function () {",
                              "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Type header\", function () {",
                              "    pm.response.to.have.header(\"Content-Type\");",
                              "});",
                              "",
                              "pm.test(\"Response is valid JSON\", function () {",
                              "    pm.response.to.be.json;",
                              "});",
                              "",
                              "// Domain object specific tests",
                              "",
                              "pm.test(\"Error response has proper structure\", function () {",
                              "    if (pm.response.code >= 400) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"error\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-Frame-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-XSS-Protection header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Security-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                              "});",
                              "",
                              "pm.test(\"Response has Referrer-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                              "});",
                              "",
                              "pm.test(\"Response has Permissions-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ]
                    },
                    {
                      "name": "Delete a diagram",
                      "request": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "diagrams",
                            ":diagram_id"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the threat model (UUID)"
                            },
                            {
                              "key": "diagram_id",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier of the diagram (UUID)"
                            }
                          ]
                        },
                        "description": "Permanently removes a diagram from the threat model"
                      },
                      "response": [
                        {
                          "name": "Diagram deleted successfully",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "diagram_id"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": null
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "diagram_id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "diagram_id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "diagram_id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        },
                        {
                          "name": "Error response",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams/:diagram_id",
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "path": [
                                "threat_models",
                                ":threat_model_id",
                                "diagrams",
                                ":diagram_id"
                              ],
                              "variable": [
                                {
                                  "key": "threat_model_id"
                                },
                                {
                                  "key": "diagram_id"
                                }
                              ]
                            }
                          },
                          "status": "Internal Server Error",
                          "code": 500,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "exec": [
                              "pm.test(\"Status code is valid\", function () {",
                              "    pm.expect(pm.response.code).to.be.oneOf([204, 401, 403, 404, 500]);",
                              "});",
                              "",
                              "pm.test(\"Response time is less than 1000ms\", function () {",
                              "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                              "});",
                              "",
                              "pm.test(\"Response is valid JSON\", function () {",
                              "    pm.response.to.be.json;",
                              "});",
                              "",
                              "// Domain object specific tests",
                              "",
                              "pm.test(\"Error response has proper structure\", function () {",
                              "    if (pm.response.code >= 400) {",
                              "        const jsonData = pm.response.json();",
                              "        pm.expect(jsonData).to.have.property(\"error\");",
                              "    }",
                              "});",
                              "",
                              "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-Frame-Options header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                              "});",
                              "",
                              "pm.test(\"Response has X-XSS-Protection header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                              "});",
                              "",
                              "pm.test(\"Response has Content-Security-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                              "});",
                              "",
                              "pm.test(\"Response has Referrer-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                              "});",
                              "",
                              "pm.test(\"Response has Permissions-Policy header\", function () {",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                              "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "List threat model diagrams",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams?limit=20&offset=0",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id",
                        "diagrams"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "20",
                          "description": "Maximum number of items to return"
                        },
                        {
                          "key": "offset",
                          "value": "0",
                          "description": "Number of items to skip"
                        }
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier of the threat model (UUID)"
                        }
                      ]
                    },
                    "description": "Returns all diagrams associated with a specific threat model"
                  },
                  "response": [
                    {
                      "name": "List of diagrams",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams?limit=20&offset=0",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "diagrams"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Maximum number of items to return"
                            },
                            {
                              "key": "offset",
                              "value": "0",
                              "description": "Number of items to skip"
                            }
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"type\": \"DFD-1.0.0\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"type\": \"DFD-1.0.0\"\n  }\n]"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams?limit=20&offset=0",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "diagrams"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Maximum number of items to return"
                            },
                            {
                              "key": "offset",
                              "value": "0",
                              "description": "Number of items to skip"
                            }
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams?limit=20&offset=0",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "diagrams"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Maximum number of items to return"
                            },
                            {
                              "key": "offset",
                              "value": "0",
                              "description": "Number of items to skip"
                            }
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams?limit=20&offset=0",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "diagrams"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Maximum number of items to return"
                            },
                            {
                              "key": "offset",
                              "value": "0",
                              "description": "Number of items to skip"
                            }
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams?limit=20&offset=0",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "diagrams"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "20",
                              "description": "Maximum number of items to return"
                            },
                            {
                              "key": "offset",
                              "value": "0",
                              "description": "Number of items to skip"
                            }
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is valid\", function () {",
                          "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 403, 404, 500]);",
                          "});",
                          "",
                          "pm.test(\"Response time is less than 1000ms\", function () {",
                          "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                          "});",
                          "",
                          "pm.test(\"Response has Content-Type header\", function () {",
                          "    pm.response.to.have.header(\"Content-Type\");",
                          "});",
                          "",
                          "pm.test(\"Response is valid JSON\", function () {",
                          "    pm.response.to.be.json;",
                          "});",
                          "",
                          "// Domain object specific tests",
                          "pm.test(\"Response is an array\", function () {",
                          "    if (pm.response.code === 200) {",
                          "        const jsonData = pm.response.json();",
                          "        pm.expect(jsonData).to.be.an(\"array\");",
                          "    }",
                          "});",
                          "",
                          "pm.test(\"Error response has proper structure\", function () {",
                          "    if (pm.response.code >= 400) {",
                          "        const jsonData = pm.response.json();",
                          "        pm.expect(jsonData).to.have.property(\"error\");",
                          "    }",
                          "});",
                          "",
                          "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                          "});",
                          "",
                          "pm.test(\"Response has X-Frame-Options header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                          "});",
                          "",
                          "pm.test(\"Response has X-XSS-Protection header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                          "});",
                          "",
                          "pm.test(\"Response has Content-Security-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                          "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                          "});",
                          "",
                          "pm.test(\"Response has Referrer-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                          "});",
                          "",
                          "pm.test(\"Response has Permissions-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                          "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ]
                },
                {
                  "name": "Create a new diagram",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"DFD-1.0.0\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id",
                        "diagrams"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier of the threat model (UUID)"
                        }
                      ]
                    },
                    "description": "Creates a new diagram within the specified threat model"
                  },
                  "response": [
                    {
                      "name": "Diagram created successfully",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"DFD-1.0.0\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "diagrams"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"cells\": [\n    {\n      \"height\": \"<number>\",\n      \"id\": \"<uuid>\",\n      \"shape\": \"<string>\",\n      \"width\": \"<number>\",\n      \"x\": \"<number>\",\n      \"y\": \"<number>\",\n      \"zIndex\": 1,\n      \"visible\": true,\n      \"data\": {\n        \"_metadata\": []\n      },\n      \"markup\": [\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": 4957.554484931113,\n            \"key_1\": 371.3079878968806\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        },\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": \"string\",\n            \"key_1\": 772.0522655754647,\n            \"key_2\": 1290\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        }\n      ],\n      \"tools\": [\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": \"string\"\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": \"string\",\n            \"key_1\": \"string\",\n            \"key_2\": false\n          }\n        }\n      ],\n      \"angle\": 0,\n      \"attrs\": {\n        \"body\": {\n          \"fill\": \"<string>\",\n          \"stroke\": \"<string>\",\n          \"strokeWidth\": \"<number>\",\n          \"strokeDasharray\": \"<string>\"\n        },\n        \"text\": {\n          \"text\": \"<string>\",\n          \"fontSize\": \"<number>\",\n          \"fill\": \"<string>\",\n          \"fontFamily\": \"<string>\"\n        }\n      },\n      \"ports\": {\n        \"groups\": {\n          \"key_0\": {\n            \"position\": \"right\"\n          }\n        },\n        \"items\": [\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          }\n        ]\n      },\n      \"parent\": \"<uuid>\",\n      \"label\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"size\": {\n        \"width\": \"<number>\",\n        \"height\": \"<number>\"\n      },\n      \"style\": {\n        \"fill\": \"<string>\",\n        \"stroke\": \"<string>\",\n        \"strokeWidth\": \"<number>\",\n        \"fontSize\": \"<number>\",\n        \"fontColor\": \"<string>\"\n      }\n    },\n    {\n      \"height\": \"<number>\",\n      \"id\": \"<uuid>\",\n      \"shape\": \"<string>\",\n      \"width\": \"<number>\",\n      \"x\": \"<number>\",\n      \"y\": \"<number>\",\n      \"zIndex\": 1,\n      \"visible\": true,\n      \"data\": {\n        \"_metadata\": []\n      },\n      \"markup\": [\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": 3268,\n            \"key_1\": \"string\",\n            \"key_2\": 3175.723042401681\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        },\n        {\n          \"tagName\": \"<string>\",\n          \"selector\": \"<string>\",\n          \"attrs\": {\n            \"key_0\": 6937.007138629234,\n            \"key_1\": 5170\n          },\n          \"children\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n            }\n          ]\n        }\n      ],\n      \"tools\": [\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": false\n          }\n        },\n        {\n          \"name\": \"<string>\",\n          \"args\": {\n            \"key_0\": 7870\n          }\n        }\n      ],\n      \"angle\": 0,\n      \"attrs\": {\n        \"body\": {\n          \"fill\": \"<string>\",\n          \"stroke\": \"<string>\",\n          \"strokeWidth\": \"<number>\",\n          \"strokeDasharray\": \"<string>\"\n        },\n        \"text\": {\n          \"text\": \"<string>\",\n          \"fontSize\": \"<number>\",\n          \"fill\": \"<string>\",\n          \"fontFamily\": \"<string>\"\n        }\n      },\n      \"ports\": {\n        \"groups\": {\n          \"key_0\": {\n            \"position\": \"right\"\n          },\n          \"key_1\": {\n            \"position\": \"bottom\"\n          },\n          \"key_2\": {\n            \"position\": \"top\"\n          },\n          \"key_3\": {\n            \"position\": \"bottom\"\n          },\n          \"key_4\": {\n            \"position\": \"bottom\"\n          }\n        },\n        \"items\": [\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"group\": \"<string>\"\n          }\n        ]\n      },\n      \"parent\": \"<uuid>\",\n      \"label\": \"<string>\",\n      \"position\": {\n        \"x\": \"<number>\",\n        \"y\": \"<number>\"\n      },\n      \"size\": {\n        \"width\": \"<number>\",\n        \"height\": \"<number>\"\n      },\n      \"style\": {\n        \"fill\": \"<string>\",\n        \"stroke\": \"<string>\",\n        \"strokeWidth\": \"<number>\",\n        \"fontSize\": \"<number>\",\n        \"fontColor\": \"<string>\"\n      }\n    }\n  ],\n  \"created_at\": \"<dateTime>\",\n  \"id\": \"<uuid>\",\n  \"modified_at\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"type\": \"DFD-1.0.0\",\n  \"metadata\": [\n    {\n      \"key\": \"F0w_X\",\n      \"value\": \"X{b\"\n    },\n    {\n      \"key\": \"q\",\n      \"value\": \" \"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"DFD-1.0.0\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "diagrams"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"DFD-1.0.0\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "diagrams"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"DFD-1.0.0\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "diagrams"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"DFD-1.0.0\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "diagrams"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Error response",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"DFD-1.0.0\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/threat_models/:threat_model_id/diagrams",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "threat_models",
                            ":threat_model_id",
                            "diagrams"
                          ],
                          "variable": [
                            {
                              "key": "threat_model_id"
                            }
                          ]
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Status code is valid\", function () {",
                          "    pm.expect(pm.response.code).to.be.oneOf([201, 400, 401, 403, 404, 500]);",
                          "});",
                          "",
                          "pm.test(\"Response time is less than 1000ms\", function () {",
                          "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                          "});",
                          "",
                          "pm.test(\"Response has Content-Type header\", function () {",
                          "    pm.response.to.have.header(\"Content-Type\");",
                          "});",
                          "",
                          "pm.test(\"Response is valid JSON\", function () {",
                          "    pm.response.to.be.json;",
                          "});",
                          "",
                          "// Domain object specific tests",
                          "",
                          "pm.test(\"Error response has proper structure\", function () {",
                          "    if (pm.response.code >= 400) {",
                          "        const jsonData = pm.response.json();",
                          "        pm.expect(jsonData).to.have.property(\"error\");",
                          "    }",
                          "});",
                          "",
                          "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                          "});",
                          "",
                          "pm.test(\"Response has X-Frame-Options header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                          "});",
                          "",
                          "pm.test(\"Response has X-XSS-Protection header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                          "});",
                          "",
                          "pm.test(\"Response has Content-Security-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                          "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                          "});",
                          "",
                          "pm.test(\"Response has Referrer-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                          "});",
                          "",
                          "pm.test(\"Response has Permissions-Policy header\", function () {",
                          "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                          "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "name": "Retrieve a threat model",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "threat_models",
                    ":threat_model_id"
                  ],
                  "variable": [
                    {
                      "key": "threat_model_id",
                      "value": "<uuid>",
                      "description": "(Required) Unique identifier of the threat model to retrieve (UUID)"
                    }
                  ]
                },
                "description": "Retrieves the full details of a specific threat model if the user has access"
              },
              "response": [
                {
                  "name": "Full threat model details",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"name\": \"Q\",\n  \"owner\": \"jGY\",\n  \"authorization\": [\n    {\n      \"subject\": \"$}/\",\n      \"role\": \"writer\"\n    },\n    {\n      \"subject\": \"F?nLj$,HM\",\n      \"role\": \"writer\"\n    }\n  ],\n  \"threat_model_framework\": \"<string>\",\n  \"description\": \";P,Vwt\",\n  \"issue_url\": \"<uri>\",\n  \"metadata\": [\n    {\n      \"key\": \"b08t\",\n      \"value\": \"pUy\"\n    },\n    {\n      \"key\": \"4aHe5G\",\n      \"value\": \"E$/\"\n    }\n  ],\n  \"id\": \"<uuid>\",\n  \"created_at\": \"<dateTime>\",\n  \"modified_at\": \"<dateTime>\",\n  \"created_by\": \"v4-txU#}r\",\n  \"documents\": [\n    {\n      \"name\": \"7Zwyf]cP)@\",\n      \"url\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"description\": \"<string>\",\n      \"metadata\": [\n        {\n          \"key\": \"BgRO1h4PC_5\",\n          \"value\": \"D~6\"\n        },\n        {\n          \"key\": \"cLoDAHnn3\",\n          \"value\": \"%I)g:d\"\n        }\n      ]\n    },\n    {\n      \"name\": \",-3p#XQ\",\n      \"url\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"description\": \"<string>\",\n      \"metadata\": [\n        {\n          \"key\": \"wpvLmZ\",\n          \"value\": \" \"\n        },\n        {\n          \"key\": \"9LgikCWLn2Q\",\n          \"value\": \"|%W2e}^?\"\n        }\n      ]\n    }\n  ],\n  \"sourceCode\": [\n    {\n      \"url\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"type\": \"mercurial\",\n      \"parameters\": {\n        \"refType\": \"branch\",\n        \"refValue\": \"<string>\",\n        \"subPath\": \"<string>\"\n      },\n      \"metadata\": [\n        {\n          \"key\": \"Hg5GVJ1\",\n          \"value\": \"8Kmu\"\n        },\n        {\n          \"key\": \"i\",\n          \"value\": \"~kpj$\"\n        }\n      ]\n    },\n    {\n      \"url\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"type\": \"git\",\n      \"parameters\": {\n        \"refType\": \"tag\",\n        \"refValue\": \"<string>\",\n        \"subPath\": \"<string>\"\n      },\n      \"metadata\": [\n        {\n          \"key\": \"WJ3JC\",\n          \"value\": \"W[L\\\"\\\\`\"\n        },\n        {\n          \"key\": \"9fYUfKEbf\",\n          \"value\": \"i7.AY/\"\n        }\n      ]\n    }\n  ],\n  \"diagrams\": [\n    {\n      \"cells\": [\n        {\n          \"height\": \"<number>\",\n          \"id\": \"<uuid>\",\n          \"shape\": \"<string>\",\n          \"width\": \"<number>\",\n          \"x\": \"<number>\",\n          \"y\": \"<number>\",\n          \"zIndex\": 1,\n          \"visible\": true,\n          \"data\": {\n            \"_metadata\": []\n          },\n          \"markup\": [\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": \"string\",\n                \"key_1\": 9981.016711101232\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            },\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": 2092.8267452385917,\n                \"key_1\": true,\n                \"key_2\": 8505\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            }\n          ],\n          \"tools\": [\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 7064,\n                \"key_1\": \"string\"\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": \"string\",\n                \"key_1\": \"string\",\n                \"key_2\": 7010.081917352535\n              }\n            }\n          ],\n          \"angle\": 0,\n          \"attrs\": {\n            \"body\": {\n              \"fill\": \"<string>\",\n              \"stroke\": \"<string>\",\n              \"strokeWidth\": \"<number>\",\n              \"strokeDasharray\": \"<string>\"\n            },\n            \"text\": {\n              \"text\": \"<string>\",\n              \"fontSize\": \"<number>\",\n              \"fill\": \"<string>\",\n              \"fontFamily\": \"<string>\"\n            }\n          },\n          \"ports\": {\n            \"groups\": {\n              \"key_0\": {\n                \"position\": \"top\"\n              },\n              \"key_1\": {\n                \"position\": \"right\"\n              }\n            },\n            \"items\": [\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              }\n            ]\n          },\n          \"parent\": \"<uuid>\",\n          \"label\": \"<string>\",\n          \"position\": {\n            \"x\": \"<number>\",\n            \"y\": \"<number>\"\n          },\n          \"size\": {\n            \"width\": \"<number>\",\n            \"height\": \"<number>\"\n          },\n          \"style\": {\n            \"fill\": \"<string>\",\n            \"stroke\": \"<string>\",\n            \"strokeWidth\": \"<number>\",\n            \"fontSize\": \"<number>\",\n            \"fontColor\": \"<string>\"\n          }\n        },\n        {\n          \"height\": \"<number>\",\n          \"id\": \"<uuid>\",\n          \"shape\": \"<string>\",\n          \"width\": \"<number>\",\n          \"x\": \"<number>\",\n          \"y\": \"<number>\",\n          \"zIndex\": 1,\n          \"visible\": true,\n          \"data\": {\n            \"_metadata\": []\n          },\n          \"markup\": [\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": 6081.632819024727,\n                \"key_1\": false\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            },\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": 8339.284901046247,\n                \"key_1\": true\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            }\n          ],\n          \"tools\": [\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 9188\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 5588,\n                \"key_1\": 6081\n              }\n            }\n          ],\n          \"angle\": 0,\n          \"attrs\": {\n            \"body\": {\n              \"fill\": \"<string>\",\n              \"stroke\": \"<string>\",\n              \"strokeWidth\": \"<number>\",\n              \"strokeDasharray\": \"<string>\"\n            },\n            \"text\": {\n              \"text\": \"<string>\",\n              \"fontSize\": \"<number>\",\n              \"fill\": \"<string>\",\n              \"fontFamily\": \"<string>\"\n            }\n          },\n          \"ports\": {\n            \"groups\": {\n              \"key_0\": {\n                \"position\": \"left\"\n              },\n              \"key_1\": {\n                \"position\": \"right\"\n              },\n              \"key_2\": {\n                \"position\": \"top\"\n              }\n            },\n            \"items\": [\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              }\n            ]\n          },\n          \"parent\": \"<uuid>\",\n          \"label\": \"<string>\",\n          \"position\": {\n            \"x\": \"<number>\",\n            \"y\": \"<number>\"\n          },\n          \"size\": {\n            \"width\": \"<number>\",\n            \"height\": \"<number>\"\n          },\n          \"style\": {\n            \"fill\": \"<string>\",\n            \"stroke\": \"<string>\",\n            \"strokeWidth\": \"<number>\",\n            \"fontSize\": \"<number>\",\n            \"fontColor\": \"<string>\"\n          }\n        }\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<uuid>\",\n      \"modified_at\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"type\": \"DFD-1.0.0\",\n      \"metadata\": [\n        {\n          \"key\": \"MqUNurbdM\",\n          \"value\": \"*kbTk-\"\n        },\n        {\n          \"key\": \"g\",\n          \"value\": \" \"\n        }\n      ]\n    },\n    {\n      \"cells\": [\n        {\n          \"height\": \"<number>\",\n          \"id\": \"<uuid>\",\n          \"shape\": \"<string>\",\n          \"width\": \"<number>\",\n          \"x\": \"<number>\",\n          \"y\": \"<number>\",\n          \"zIndex\": 1,\n          \"visible\": true,\n          \"data\": {\n            \"_metadata\": []\n          },\n          \"markup\": [\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": false\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            },\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": 8397.69204088012,\n                \"key_1\": 286.50684430950645,\n                \"key_2\": \"string\",\n                \"key_3\": \"string\"\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            }\n          ],\n          \"tools\": [\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": false,\n                \"key_1\": 1351.664198183047,\n                \"key_2\": 5990,\n                \"key_3\": 1341.9521680920666\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 2837\n              }\n            }\n          ],\n          \"angle\": 0,\n          \"attrs\": {\n            \"body\": {\n              \"fill\": \"<string>\",\n              \"stroke\": \"<string>\",\n              \"strokeWidth\": \"<number>\",\n              \"strokeDasharray\": \"<string>\"\n            },\n            \"text\": {\n              \"text\": \"<string>\",\n              \"fontSize\": \"<number>\",\n              \"fill\": \"<string>\",\n              \"fontFamily\": \"<string>\"\n            }\n          },\n          \"ports\": {\n            \"groups\": {\n              \"key_0\": {\n                \"position\": \"bottom\"\n              }\n            },\n            \"items\": [\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              }\n            ]\n          },\n          \"parent\": \"<uuid>\",\n          \"label\": \"<string>\",\n          \"position\": {\n            \"x\": \"<number>\",\n            \"y\": \"<number>\"\n          },\n          \"size\": {\n            \"width\": \"<number>\",\n            \"height\": \"<number>\"\n          },\n          \"style\": {\n            \"fill\": \"<string>\",\n            \"stroke\": \"<string>\",\n            \"strokeWidth\": \"<number>\",\n            \"fontSize\": \"<number>\",\n            \"fontColor\": \"<string>\"\n          }\n        },\n        {\n          \"height\": \"<number>\",\n          \"id\": \"<uuid>\",\n          \"shape\": \"<string>\",\n          \"width\": \"<number>\",\n          \"x\": \"<number>\",\n          \"y\": \"<number>\",\n          \"zIndex\": 1,\n          \"visible\": true,\n          \"data\": {\n            \"_metadata\": []\n          },\n          \"markup\": [\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": true,\n                \"key_1\": 2979,\n                \"key_2\": true\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            },\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": 3077.954507267864,\n                \"key_1\": false,\n                \"key_2\": 7329\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            }\n          ],\n          \"tools\": [\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 7970.105547641107,\n                \"key_1\": 2526,\n                \"key_2\": \"string\"\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 9324,\n                \"key_1\": false\n              }\n            }\n          ],\n          \"angle\": 0,\n          \"attrs\": {\n            \"body\": {\n              \"fill\": \"<string>\",\n              \"stroke\": \"<string>\",\n              \"strokeWidth\": \"<number>\",\n              \"strokeDasharray\": \"<string>\"\n            },\n            \"text\": {\n              \"text\": \"<string>\",\n              \"fontSize\": \"<number>\",\n              \"fill\": \"<string>\",\n              \"fontFamily\": \"<string>\"\n            }\n          },\n          \"ports\": {\n            \"groups\": {\n              \"key_0\": {\n                \"position\": \"left\"\n              },\n              \"key_1\": {\n                \"position\": \"right\"\n              },\n              \"key_2\": {\n                \"position\": \"left\"\n              },\n              \"key_3\": {\n                \"position\": \"left\"\n              }\n            },\n            \"items\": [\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              }\n            ]\n          },\n          \"parent\": \"<uuid>\",\n          \"label\": \"<string>\",\n          \"position\": {\n            \"x\": \"<number>\",\n            \"y\": \"<number>\"\n          },\n          \"size\": {\n            \"width\": \"<number>\",\n            \"height\": \"<number>\"\n          },\n          \"style\": {\n            \"fill\": \"<string>\",\n            \"stroke\": \"<string>\",\n            \"strokeWidth\": \"<number>\",\n            \"fontSize\": \"<number>\",\n            \"fontColor\": \"<string>\"\n          }\n        }\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<uuid>\",\n      \"modified_at\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"type\": \"DFD-1.0.0\",\n      \"metadata\": [\n        {\n          \"key\": \"NW\",\n          \"value\": \" \"\n        },\n        {\n          \"key\": \"YR8onYto\",\n          \"value\": \"o9xO\\\"AFr2_\"\n        }\n      ]\n    }\n  ],\n  \"threats\": [\n    {\n      \"name\": \"<string>\",\n      \"severity\": \"Low\",\n      \"priority\": \"<string>\",\n      \"mitigated\": \"<boolean>\",\n      \"status\": \"<string>\",\n      \"threat_type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"mitigation\": \"<string>\",\n      \"diagram_id\": \"<uuid>\",\n      \"cell_id\": \"<uuid>\",\n      \"score\": \"<number>\",\n      \"issue_url\": \"<uri>\",\n      \"metadata\": [\n        {\n          \"key\": \"a\",\n          \"value\": \"o[\"\n        },\n        {\n          \"key\": \"sqy\",\n          \"value\": \"E`][i\"\n        }\n      ],\n      \"id\": \"<uuid>\",\n      \"threat_model_id\": \"<uuid>\",\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"severity\": \"Critical\",\n      \"priority\": \"<string>\",\n      \"mitigated\": \"<boolean>\",\n      \"status\": \"<string>\",\n      \"threat_type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"mitigation\": \"<string>\",\n      \"diagram_id\": \"<uuid>\",\n      \"cell_id\": \"<uuid>\",\n      \"score\": \"<number>\",\n      \"issue_url\": \"<uri>\",\n      \"metadata\": [\n        {\n          \"key\": \"46R8kJ03\",\n          \"value\": \"r,D\"\n        },\n        {\n          \"key\": \"D_gkT4\",\n          \"value\": \"5p,R\"\n        }\n      ],\n      \"id\": \"<uuid>\",\n      \"threat_model_id\": \"<uuid>\",\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is valid\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 403, 404, 500]);",
                      "});",
                      "",
                      "pm.test(\"Response time is less than 1000ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Type header\", function () {",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Response is valid JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "pm.test(\"Error response has proper structure\", function () {",
                      "    if (pm.response.code >= 400) {",
                      "        const jsonData = pm.response.json();",
                      "        pm.expect(jsonData).to.have.property(\"error\");",
                      "    }",
                      "});",
                      "",
                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                      "});",
                      "",
                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                      "});",
                      "",
                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "Update a threat model",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"threat_model_framework\": \"<string>\",\n  \"issue_url\": \"<uri>\",\n  \"authorization\": [\n    {\n      \"subject\": \",`a+{pkP\",\n      \"role\": \"reader\"\n    },\n    {\n      \"subject\": \"Q;cNXnx/w\",\n      \"role\": \"reader\"\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"Ei18RuMr\",\n      \"value\": \"R\"\n    },\n    {\n      \"key\": \"Dg2bJ2FqdeG\",\n      \"value\": \"+_xU5zdfUl\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "threat_models",
                    ":threat_model_id"
                  ],
                  "variable": [
                    {
                      "key": "threat_model_id",
                      "value": "<uuid>",
                      "description": "(Required) Unique identifier of the threat model to update (UUID)"
                    }
                  ]
                },
                "description": "Fully updates a threat model; restricted to writer/owner roles"
              },
              "response": [
                {
                  "name": "Threat model updated successfully",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"threat_model_framework\": \"<string>\",\n  \"issue_url\": \"<uri>\",\n  \"authorization\": [\n    {\n      \"subject\": \",`a+{pkP\",\n      \"role\": \"reader\"\n    },\n    {\n      \"subject\": \"Q;cNXnx/w\",\n      \"role\": \"reader\"\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"Ei18RuMr\",\n      \"value\": \"R\"\n    },\n    {\n      \"key\": \"Dg2bJ2FqdeG\",\n      \"value\": \"+_xU5zdfUl\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"name\": \"Q\",\n  \"owner\": \"jGY\",\n  \"authorization\": [\n    {\n      \"subject\": \"$}/\",\n      \"role\": \"writer\"\n    },\n    {\n      \"subject\": \"F?nLj$,HM\",\n      \"role\": \"writer\"\n    }\n  ],\n  \"threat_model_framework\": \"<string>\",\n  \"description\": \";P,Vwt\",\n  \"issue_url\": \"<uri>\",\n  \"metadata\": [\n    {\n      \"key\": \"b08t\",\n      \"value\": \"pUy\"\n    },\n    {\n      \"key\": \"4aHe5G\",\n      \"value\": \"E$/\"\n    }\n  ],\n  \"id\": \"<uuid>\",\n  \"created_at\": \"<dateTime>\",\n  \"modified_at\": \"<dateTime>\",\n  \"created_by\": \"v4-txU#}r\",\n  \"documents\": [\n    {\n      \"name\": \"7Zwyf]cP)@\",\n      \"url\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"description\": \"<string>\",\n      \"metadata\": [\n        {\n          \"key\": \"BgRO1h4PC_5\",\n          \"value\": \"D~6\"\n        },\n        {\n          \"key\": \"cLoDAHnn3\",\n          \"value\": \"%I)g:d\"\n        }\n      ]\n    },\n    {\n      \"name\": \",-3p#XQ\",\n      \"url\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"description\": \"<string>\",\n      \"metadata\": [\n        {\n          \"key\": \"wpvLmZ\",\n          \"value\": \" \"\n        },\n        {\n          \"key\": \"9LgikCWLn2Q\",\n          \"value\": \"|%W2e}^?\"\n        }\n      ]\n    }\n  ],\n  \"sourceCode\": [\n    {\n      \"url\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"type\": \"mercurial\",\n      \"parameters\": {\n        \"refType\": \"branch\",\n        \"refValue\": \"<string>\",\n        \"subPath\": \"<string>\"\n      },\n      \"metadata\": [\n        {\n          \"key\": \"Hg5GVJ1\",\n          \"value\": \"8Kmu\"\n        },\n        {\n          \"key\": \"i\",\n          \"value\": \"~kpj$\"\n        }\n      ]\n    },\n    {\n      \"url\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"type\": \"git\",\n      \"parameters\": {\n        \"refType\": \"tag\",\n        \"refValue\": \"<string>\",\n        \"subPath\": \"<string>\"\n      },\n      \"metadata\": [\n        {\n          \"key\": \"WJ3JC\",\n          \"value\": \"W[L\\\"\\\\`\"\n        },\n        {\n          \"key\": \"9fYUfKEbf\",\n          \"value\": \"i7.AY/\"\n        }\n      ]\n    }\n  ],\n  \"diagrams\": [\n    {\n      \"cells\": [\n        {\n          \"height\": \"<number>\",\n          \"id\": \"<uuid>\",\n          \"shape\": \"<string>\",\n          \"width\": \"<number>\",\n          \"x\": \"<number>\",\n          \"y\": \"<number>\",\n          \"zIndex\": 1,\n          \"visible\": true,\n          \"data\": {\n            \"_metadata\": []\n          },\n          \"markup\": [\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": \"string\",\n                \"key_1\": 9981.016711101232\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            },\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": 2092.8267452385917,\n                \"key_1\": true,\n                \"key_2\": 8505\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            }\n          ],\n          \"tools\": [\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 7064,\n                \"key_1\": \"string\"\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": \"string\",\n                \"key_1\": \"string\",\n                \"key_2\": 7010.081917352535\n              }\n            }\n          ],\n          \"angle\": 0,\n          \"attrs\": {\n            \"body\": {\n              \"fill\": \"<string>\",\n              \"stroke\": \"<string>\",\n              \"strokeWidth\": \"<number>\",\n              \"strokeDasharray\": \"<string>\"\n            },\n            \"text\": {\n              \"text\": \"<string>\",\n              \"fontSize\": \"<number>\",\n              \"fill\": \"<string>\",\n              \"fontFamily\": \"<string>\"\n            }\n          },\n          \"ports\": {\n            \"groups\": {\n              \"key_0\": {\n                \"position\": \"top\"\n              },\n              \"key_1\": {\n                \"position\": \"right\"\n              }\n            },\n            \"items\": [\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              }\n            ]\n          },\n          \"parent\": \"<uuid>\",\n          \"label\": \"<string>\",\n          \"position\": {\n            \"x\": \"<number>\",\n            \"y\": \"<number>\"\n          },\n          \"size\": {\n            \"width\": \"<number>\",\n            \"height\": \"<number>\"\n          },\n          \"style\": {\n            \"fill\": \"<string>\",\n            \"stroke\": \"<string>\",\n            \"strokeWidth\": \"<number>\",\n            \"fontSize\": \"<number>\",\n            \"fontColor\": \"<string>\"\n          }\n        },\n        {\n          \"height\": \"<number>\",\n          \"id\": \"<uuid>\",\n          \"shape\": \"<string>\",\n          \"width\": \"<number>\",\n          \"x\": \"<number>\",\n          \"y\": \"<number>\",\n          \"zIndex\": 1,\n          \"visible\": true,\n          \"data\": {\n            \"_metadata\": []\n          },\n          \"markup\": [\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": 6081.632819024727,\n                \"key_1\": false\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            },\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": 8339.284901046247,\n                \"key_1\": true\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            }\n          ],\n          \"tools\": [\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 9188\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 5588,\n                \"key_1\": 6081\n              }\n            }\n          ],\n          \"angle\": 0,\n          \"attrs\": {\n            \"body\": {\n              \"fill\": \"<string>\",\n              \"stroke\": \"<string>\",\n              \"strokeWidth\": \"<number>\",\n              \"strokeDasharray\": \"<string>\"\n            },\n            \"text\": {\n              \"text\": \"<string>\",\n              \"fontSize\": \"<number>\",\n              \"fill\": \"<string>\",\n              \"fontFamily\": \"<string>\"\n            }\n          },\n          \"ports\": {\n            \"groups\": {\n              \"key_0\": {\n                \"position\": \"left\"\n              },\n              \"key_1\": {\n                \"position\": \"right\"\n              },\n              \"key_2\": {\n                \"position\": \"top\"\n              }\n            },\n            \"items\": [\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              }\n            ]\n          },\n          \"parent\": \"<uuid>\",\n          \"label\": \"<string>\",\n          \"position\": {\n            \"x\": \"<number>\",\n            \"y\": \"<number>\"\n          },\n          \"size\": {\n            \"width\": \"<number>\",\n            \"height\": \"<number>\"\n          },\n          \"style\": {\n            \"fill\": \"<string>\",\n            \"stroke\": \"<string>\",\n            \"strokeWidth\": \"<number>\",\n            \"fontSize\": \"<number>\",\n            \"fontColor\": \"<string>\"\n          }\n        }\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<uuid>\",\n      \"modified_at\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"type\": \"DFD-1.0.0\",\n      \"metadata\": [\n        {\n          \"key\": \"MqUNurbdM\",\n          \"value\": \"*kbTk-\"\n        },\n        {\n          \"key\": \"g\",\n          \"value\": \" \"\n        }\n      ]\n    },\n    {\n      \"cells\": [\n        {\n          \"height\": \"<number>\",\n          \"id\": \"<uuid>\",\n          \"shape\": \"<string>\",\n          \"width\": \"<number>\",\n          \"x\": \"<number>\",\n          \"y\": \"<number>\",\n          \"zIndex\": 1,\n          \"visible\": true,\n          \"data\": {\n            \"_metadata\": []\n          },\n          \"markup\": [\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": false\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            },\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": 8397.69204088012,\n                \"key_1\": 286.50684430950645,\n                \"key_2\": \"string\",\n                \"key_3\": \"string\"\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            }\n          ],\n          \"tools\": [\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": false,\n                \"key_1\": 1351.664198183047,\n                \"key_2\": 5990,\n                \"key_3\": 1341.9521680920666\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 2837\n              }\n            }\n          ],\n          \"angle\": 0,\n          \"attrs\": {\n            \"body\": {\n              \"fill\": \"<string>\",\n              \"stroke\": \"<string>\",\n              \"strokeWidth\": \"<number>\",\n              \"strokeDasharray\": \"<string>\"\n            },\n            \"text\": {\n              \"text\": \"<string>\",\n              \"fontSize\": \"<number>\",\n              \"fill\": \"<string>\",\n              \"fontFamily\": \"<string>\"\n            }\n          },\n          \"ports\": {\n            \"groups\": {\n              \"key_0\": {\n                \"position\": \"bottom\"\n              }\n            },\n            \"items\": [\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              }\n            ]\n          },\n          \"parent\": \"<uuid>\",\n          \"label\": \"<string>\",\n          \"position\": {\n            \"x\": \"<number>\",\n            \"y\": \"<number>\"\n          },\n          \"size\": {\n            \"width\": \"<number>\",\n            \"height\": \"<number>\"\n          },\n          \"style\": {\n            \"fill\": \"<string>\",\n            \"stroke\": \"<string>\",\n            \"strokeWidth\": \"<number>\",\n            \"fontSize\": \"<number>\",\n            \"fontColor\": \"<string>\"\n          }\n        },\n        {\n          \"height\": \"<number>\",\n          \"id\": \"<uuid>\",\n          \"shape\": \"<string>\",\n          \"width\": \"<number>\",\n          \"x\": \"<number>\",\n          \"y\": \"<number>\",\n          \"zIndex\": 1,\n          \"visible\": true,\n          \"data\": {\n            \"_metadata\": []\n          },\n          \"markup\": [\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": true,\n                \"key_1\": 2979,\n                \"key_2\": true\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            },\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": 3077.954507267864,\n                \"key_1\": false,\n                \"key_2\": 7329\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            }\n          ],\n          \"tools\": [\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 7970.105547641107,\n                \"key_1\": 2526,\n                \"key_2\": \"string\"\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 9324,\n                \"key_1\": false\n              }\n            }\n          ],\n          \"angle\": 0,\n          \"attrs\": {\n            \"body\": {\n              \"fill\": \"<string>\",\n              \"stroke\": \"<string>\",\n              \"strokeWidth\": \"<number>\",\n              \"strokeDasharray\": \"<string>\"\n            },\n            \"text\": {\n              \"text\": \"<string>\",\n              \"fontSize\": \"<number>\",\n              \"fill\": \"<string>\",\n              \"fontFamily\": \"<string>\"\n            }\n          },\n          \"ports\": {\n            \"groups\": {\n              \"key_0\": {\n                \"position\": \"left\"\n              },\n              \"key_1\": {\n                \"position\": \"right\"\n              },\n              \"key_2\": {\n                \"position\": \"left\"\n              },\n              \"key_3\": {\n                \"position\": \"left\"\n              }\n            },\n            \"items\": [\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              }\n            ]\n          },\n          \"parent\": \"<uuid>\",\n          \"label\": \"<string>\",\n          \"position\": {\n            \"x\": \"<number>\",\n            \"y\": \"<number>\"\n          },\n          \"size\": {\n            \"width\": \"<number>\",\n            \"height\": \"<number>\"\n          },\n          \"style\": {\n            \"fill\": \"<string>\",\n            \"stroke\": \"<string>\",\n            \"strokeWidth\": \"<number>\",\n            \"fontSize\": \"<number>\",\n            \"fontColor\": \"<string>\"\n          }\n        }\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<uuid>\",\n      \"modified_at\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"type\": \"DFD-1.0.0\",\n      \"metadata\": [\n        {\n          \"key\": \"NW\",\n          \"value\": \" \"\n        },\n        {\n          \"key\": \"YR8onYto\",\n          \"value\": \"o9xO\\\"AFr2_\"\n        }\n      ]\n    }\n  ],\n  \"threats\": [\n    {\n      \"name\": \"<string>\",\n      \"severity\": \"Low\",\n      \"priority\": \"<string>\",\n      \"mitigated\": \"<boolean>\",\n      \"status\": \"<string>\",\n      \"threat_type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"mitigation\": \"<string>\",\n      \"diagram_id\": \"<uuid>\",\n      \"cell_id\": \"<uuid>\",\n      \"score\": \"<number>\",\n      \"issue_url\": \"<uri>\",\n      \"metadata\": [\n        {\n          \"key\": \"a\",\n          \"value\": \"o[\"\n        },\n        {\n          \"key\": \"sqy\",\n          \"value\": \"E`][i\"\n        }\n      ],\n      \"id\": \"<uuid>\",\n      \"threat_model_id\": \"<uuid>\",\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"severity\": \"Critical\",\n      \"priority\": \"<string>\",\n      \"mitigated\": \"<boolean>\",\n      \"status\": \"<string>\",\n      \"threat_type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"mitigation\": \"<string>\",\n      \"diagram_id\": \"<uuid>\",\n      \"cell_id\": \"<uuid>\",\n      \"score\": \"<number>\",\n      \"issue_url\": \"<uri>\",\n      \"metadata\": [\n        {\n          \"key\": \"46R8kJ03\",\n          \"value\": \"r,D\"\n        },\n        {\n          \"key\": \"D_gkT4\",\n          \"value\": \"5p,R\"\n        }\n      ],\n      \"id\": \"<uuid>\",\n      \"threat_model_id\": \"<uuid>\",\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"threat_model_framework\": \"<string>\",\n  \"issue_url\": \"<uri>\",\n  \"authorization\": [\n    {\n      \"subject\": \",`a+{pkP\",\n      \"role\": \"reader\"\n    },\n    {\n      \"subject\": \"Q;cNXnx/w\",\n      \"role\": \"reader\"\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"Ei18RuMr\",\n      \"value\": \"R\"\n    },\n    {\n      \"key\": \"Dg2bJ2FqdeG\",\n      \"value\": \"+_xU5zdfUl\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"threat_model_framework\": \"<string>\",\n  \"issue_url\": \"<uri>\",\n  \"authorization\": [\n    {\n      \"subject\": \",`a+{pkP\",\n      \"role\": \"reader\"\n    },\n    {\n      \"subject\": \"Q;cNXnx/w\",\n      \"role\": \"reader\"\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"Ei18RuMr\",\n      \"value\": \"R\"\n    },\n    {\n      \"key\": \"Dg2bJ2FqdeG\",\n      \"value\": \"+_xU5zdfUl\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"threat_model_framework\": \"<string>\",\n  \"issue_url\": \"<uri>\",\n  \"authorization\": [\n    {\n      \"subject\": \",`a+{pkP\",\n      \"role\": \"reader\"\n    },\n    {\n      \"subject\": \"Q;cNXnx/w\",\n      \"role\": \"reader\"\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"Ei18RuMr\",\n      \"value\": \"R\"\n    },\n    {\n      \"key\": \"Dg2bJ2FqdeG\",\n      \"value\": \"+_xU5zdfUl\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"threat_model_framework\": \"<string>\",\n  \"issue_url\": \"<uri>\",\n  \"authorization\": [\n    {\n      \"subject\": \",`a+{pkP\",\n      \"role\": \"reader\"\n    },\n    {\n      \"subject\": \"Q;cNXnx/w\",\n      \"role\": \"reader\"\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"Ei18RuMr\",\n      \"value\": \"R\"\n    },\n    {\n      \"key\": \"Dg2bJ2FqdeG\",\n      \"value\": \"+_xU5zdfUl\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"threat_model_framework\": \"<string>\",\n  \"issue_url\": \"<uri>\",\n  \"authorization\": [\n    {\n      \"subject\": \",`a+{pkP\",\n      \"role\": \"reader\"\n    },\n    {\n      \"subject\": \"Q;cNXnx/w\",\n      \"role\": \"reader\"\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"Ei18RuMr\",\n      \"value\": \"R\"\n    },\n    {\n      \"key\": \"Dg2bJ2FqdeG\",\n      \"value\": \"+_xU5zdfUl\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is valid\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 401, 403, 404, 500]);",
                      "});",
                      "",
                      "pm.test(\"Response time is less than 1000ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Type header\", function () {",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Response is valid JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "pm.test(\"Error response has proper structure\", function () {",
                      "    if (pm.response.code >= 400) {",
                      "        const jsonData = pm.response.json();",
                      "        pm.expect(jsonData).to.have.property(\"error\");",
                      "    }",
                      "});",
                      "",
                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                      "});",
                      "",
                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                      "});",
                      "",
                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "Partially update a threat model",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json-patch+json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"Value to apply\"\n    }\n  },\n  {\n    \"op\": \"copy\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"Value to apply\"\n    }\n  }\n]",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "threat_models",
                    ":threat_model_id"
                  ],
                  "variable": [
                    {
                      "key": "threat_model_id",
                      "value": "<uuid>",
                      "description": "(Required) Unique identifier of the threat model to update (UUID)"
                    }
                  ]
                },
                "description": "Applies JSON Patch operations to a threat model; restricted to writer/owner roles"
              },
              "response": [
                {
                  "name": "Threat model updated successfully",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json-patch+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"Value to apply\"\n    }\n  },\n  {\n    \"op\": \"copy\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"Value to apply\"\n    }\n  }\n]",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"name\": \"Q\",\n  \"owner\": \"jGY\",\n  \"authorization\": [\n    {\n      \"subject\": \"$}/\",\n      \"role\": \"writer\"\n    },\n    {\n      \"subject\": \"F?nLj$,HM\",\n      \"role\": \"writer\"\n    }\n  ],\n  \"threat_model_framework\": \"<string>\",\n  \"description\": \";P,Vwt\",\n  \"issue_url\": \"<uri>\",\n  \"metadata\": [\n    {\n      \"key\": \"b08t\",\n      \"value\": \"pUy\"\n    },\n    {\n      \"key\": \"4aHe5G\",\n      \"value\": \"E$/\"\n    }\n  ],\n  \"id\": \"<uuid>\",\n  \"created_at\": \"<dateTime>\",\n  \"modified_at\": \"<dateTime>\",\n  \"created_by\": \"v4-txU#}r\",\n  \"documents\": [\n    {\n      \"name\": \"7Zwyf]cP)@\",\n      \"url\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"description\": \"<string>\",\n      \"metadata\": [\n        {\n          \"key\": \"BgRO1h4PC_5\",\n          \"value\": \"D~6\"\n        },\n        {\n          \"key\": \"cLoDAHnn3\",\n          \"value\": \"%I)g:d\"\n        }\n      ]\n    },\n    {\n      \"name\": \",-3p#XQ\",\n      \"url\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"description\": \"<string>\",\n      \"metadata\": [\n        {\n          \"key\": \"wpvLmZ\",\n          \"value\": \" \"\n        },\n        {\n          \"key\": \"9LgikCWLn2Q\",\n          \"value\": \"|%W2e}^?\"\n        }\n      ]\n    }\n  ],\n  \"sourceCode\": [\n    {\n      \"url\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"type\": \"mercurial\",\n      \"parameters\": {\n        \"refType\": \"branch\",\n        \"refValue\": \"<string>\",\n        \"subPath\": \"<string>\"\n      },\n      \"metadata\": [\n        {\n          \"key\": \"Hg5GVJ1\",\n          \"value\": \"8Kmu\"\n        },\n        {\n          \"key\": \"i\",\n          \"value\": \"~kpj$\"\n        }\n      ]\n    },\n    {\n      \"url\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"type\": \"git\",\n      \"parameters\": {\n        \"refType\": \"tag\",\n        \"refValue\": \"<string>\",\n        \"subPath\": \"<string>\"\n      },\n      \"metadata\": [\n        {\n          \"key\": \"WJ3JC\",\n          \"value\": \"W[L\\\"\\\\`\"\n        },\n        {\n          \"key\": \"9fYUfKEbf\",\n          \"value\": \"i7.AY/\"\n        }\n      ]\n    }\n  ],\n  \"diagrams\": [\n    {\n      \"cells\": [\n        {\n          \"height\": \"<number>\",\n          \"id\": \"<uuid>\",\n          \"shape\": \"<string>\",\n          \"width\": \"<number>\",\n          \"x\": \"<number>\",\n          \"y\": \"<number>\",\n          \"zIndex\": 1,\n          \"visible\": true,\n          \"data\": {\n            \"_metadata\": []\n          },\n          \"markup\": [\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": \"string\",\n                \"key_1\": 9981.016711101232\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            },\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": 2092.8267452385917,\n                \"key_1\": true,\n                \"key_2\": 8505\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            }\n          ],\n          \"tools\": [\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 7064,\n                \"key_1\": \"string\"\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": \"string\",\n                \"key_1\": \"string\",\n                \"key_2\": 7010.081917352535\n              }\n            }\n          ],\n          \"angle\": 0,\n          \"attrs\": {\n            \"body\": {\n              \"fill\": \"<string>\",\n              \"stroke\": \"<string>\",\n              \"strokeWidth\": \"<number>\",\n              \"strokeDasharray\": \"<string>\"\n            },\n            \"text\": {\n              \"text\": \"<string>\",\n              \"fontSize\": \"<number>\",\n              \"fill\": \"<string>\",\n              \"fontFamily\": \"<string>\"\n            }\n          },\n          \"ports\": {\n            \"groups\": {\n              \"key_0\": {\n                \"position\": \"top\"\n              },\n              \"key_1\": {\n                \"position\": \"right\"\n              }\n            },\n            \"items\": [\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              }\n            ]\n          },\n          \"parent\": \"<uuid>\",\n          \"label\": \"<string>\",\n          \"position\": {\n            \"x\": \"<number>\",\n            \"y\": \"<number>\"\n          },\n          \"size\": {\n            \"width\": \"<number>\",\n            \"height\": \"<number>\"\n          },\n          \"style\": {\n            \"fill\": \"<string>\",\n            \"stroke\": \"<string>\",\n            \"strokeWidth\": \"<number>\",\n            \"fontSize\": \"<number>\",\n            \"fontColor\": \"<string>\"\n          }\n        },\n        {\n          \"height\": \"<number>\",\n          \"id\": \"<uuid>\",\n          \"shape\": \"<string>\",\n          \"width\": \"<number>\",\n          \"x\": \"<number>\",\n          \"y\": \"<number>\",\n          \"zIndex\": 1,\n          \"visible\": true,\n          \"data\": {\n            \"_metadata\": []\n          },\n          \"markup\": [\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": 6081.632819024727,\n                \"key_1\": false\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            },\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": 8339.284901046247,\n                \"key_1\": true\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            }\n          ],\n          \"tools\": [\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 9188\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 5588,\n                \"key_1\": 6081\n              }\n            }\n          ],\n          \"angle\": 0,\n          \"attrs\": {\n            \"body\": {\n              \"fill\": \"<string>\",\n              \"stroke\": \"<string>\",\n              \"strokeWidth\": \"<number>\",\n              \"strokeDasharray\": \"<string>\"\n            },\n            \"text\": {\n              \"text\": \"<string>\",\n              \"fontSize\": \"<number>\",\n              \"fill\": \"<string>\",\n              \"fontFamily\": \"<string>\"\n            }\n          },\n          \"ports\": {\n            \"groups\": {\n              \"key_0\": {\n                \"position\": \"left\"\n              },\n              \"key_1\": {\n                \"position\": \"right\"\n              },\n              \"key_2\": {\n                \"position\": \"top\"\n              }\n            },\n            \"items\": [\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              }\n            ]\n          },\n          \"parent\": \"<uuid>\",\n          \"label\": \"<string>\",\n          \"position\": {\n            \"x\": \"<number>\",\n            \"y\": \"<number>\"\n          },\n          \"size\": {\n            \"width\": \"<number>\",\n            \"height\": \"<number>\"\n          },\n          \"style\": {\n            \"fill\": \"<string>\",\n            \"stroke\": \"<string>\",\n            \"strokeWidth\": \"<number>\",\n            \"fontSize\": \"<number>\",\n            \"fontColor\": \"<string>\"\n          }\n        }\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<uuid>\",\n      \"modified_at\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"type\": \"DFD-1.0.0\",\n      \"metadata\": [\n        {\n          \"key\": \"MqUNurbdM\",\n          \"value\": \"*kbTk-\"\n        },\n        {\n          \"key\": \"g\",\n          \"value\": \" \"\n        }\n      ]\n    },\n    {\n      \"cells\": [\n        {\n          \"height\": \"<number>\",\n          \"id\": \"<uuid>\",\n          \"shape\": \"<string>\",\n          \"width\": \"<number>\",\n          \"x\": \"<number>\",\n          \"y\": \"<number>\",\n          \"zIndex\": 1,\n          \"visible\": true,\n          \"data\": {\n            \"_metadata\": []\n          },\n          \"markup\": [\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": false\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            },\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": 8397.69204088012,\n                \"key_1\": 286.50684430950645,\n                \"key_2\": \"string\",\n                \"key_3\": \"string\"\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            }\n          ],\n          \"tools\": [\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": false,\n                \"key_1\": 1351.664198183047,\n                \"key_2\": 5990,\n                \"key_3\": 1341.9521680920666\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 2837\n              }\n            }\n          ],\n          \"angle\": 0,\n          \"attrs\": {\n            \"body\": {\n              \"fill\": \"<string>\",\n              \"stroke\": \"<string>\",\n              \"strokeWidth\": \"<number>\",\n              \"strokeDasharray\": \"<string>\"\n            },\n            \"text\": {\n              \"text\": \"<string>\",\n              \"fontSize\": \"<number>\",\n              \"fill\": \"<string>\",\n              \"fontFamily\": \"<string>\"\n            }\n          },\n          \"ports\": {\n            \"groups\": {\n              \"key_0\": {\n                \"position\": \"bottom\"\n              }\n            },\n            \"items\": [\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              }\n            ]\n          },\n          \"parent\": \"<uuid>\",\n          \"label\": \"<string>\",\n          \"position\": {\n            \"x\": \"<number>\",\n            \"y\": \"<number>\"\n          },\n          \"size\": {\n            \"width\": \"<number>\",\n            \"height\": \"<number>\"\n          },\n          \"style\": {\n            \"fill\": \"<string>\",\n            \"stroke\": \"<string>\",\n            \"strokeWidth\": \"<number>\",\n            \"fontSize\": \"<number>\",\n            \"fontColor\": \"<string>\"\n          }\n        },\n        {\n          \"height\": \"<number>\",\n          \"id\": \"<uuid>\",\n          \"shape\": \"<string>\",\n          \"width\": \"<number>\",\n          \"x\": \"<number>\",\n          \"y\": \"<number>\",\n          \"zIndex\": 1,\n          \"visible\": true,\n          \"data\": {\n            \"_metadata\": []\n          },\n          \"markup\": [\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": true,\n                \"key_1\": 2979,\n                \"key_2\": true\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            },\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": 3077.954507267864,\n                \"key_1\": false,\n                \"key_2\": 7329\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            }\n          ],\n          \"tools\": [\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 7970.105547641107,\n                \"key_1\": 2526,\n                \"key_2\": \"string\"\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 9324,\n                \"key_1\": false\n              }\n            }\n          ],\n          \"angle\": 0,\n          \"attrs\": {\n            \"body\": {\n              \"fill\": \"<string>\",\n              \"stroke\": \"<string>\",\n              \"strokeWidth\": \"<number>\",\n              \"strokeDasharray\": \"<string>\"\n            },\n            \"text\": {\n              \"text\": \"<string>\",\n              \"fontSize\": \"<number>\",\n              \"fill\": \"<string>\",\n              \"fontFamily\": \"<string>\"\n            }\n          },\n          \"ports\": {\n            \"groups\": {\n              \"key_0\": {\n                \"position\": \"left\"\n              },\n              \"key_1\": {\n                \"position\": \"right\"\n              },\n              \"key_2\": {\n                \"position\": \"left\"\n              },\n              \"key_3\": {\n                \"position\": \"left\"\n              }\n            },\n            \"items\": [\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              }\n            ]\n          },\n          \"parent\": \"<uuid>\",\n          \"label\": \"<string>\",\n          \"position\": {\n            \"x\": \"<number>\",\n            \"y\": \"<number>\"\n          },\n          \"size\": {\n            \"width\": \"<number>\",\n            \"height\": \"<number>\"\n          },\n          \"style\": {\n            \"fill\": \"<string>\",\n            \"stroke\": \"<string>\",\n            \"strokeWidth\": \"<number>\",\n            \"fontSize\": \"<number>\",\n            \"fontColor\": \"<string>\"\n          }\n        }\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<uuid>\",\n      \"modified_at\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"type\": \"DFD-1.0.0\",\n      \"metadata\": [\n        {\n          \"key\": \"NW\",\n          \"value\": \" \"\n        },\n        {\n          \"key\": \"YR8onYto\",\n          \"value\": \"o9xO\\\"AFr2_\"\n        }\n      ]\n    }\n  ],\n  \"threats\": [\n    {\n      \"name\": \"<string>\",\n      \"severity\": \"Low\",\n      \"priority\": \"<string>\",\n      \"mitigated\": \"<boolean>\",\n      \"status\": \"<string>\",\n      \"threat_type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"mitigation\": \"<string>\",\n      \"diagram_id\": \"<uuid>\",\n      \"cell_id\": \"<uuid>\",\n      \"score\": \"<number>\",\n      \"issue_url\": \"<uri>\",\n      \"metadata\": [\n        {\n          \"key\": \"a\",\n          \"value\": \"o[\"\n        },\n        {\n          \"key\": \"sqy\",\n          \"value\": \"E`][i\"\n        }\n      ],\n      \"id\": \"<uuid>\",\n      \"threat_model_id\": \"<uuid>\",\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"severity\": \"Critical\",\n      \"priority\": \"<string>\",\n      \"mitigated\": \"<boolean>\",\n      \"status\": \"<string>\",\n      \"threat_type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"mitigation\": \"<string>\",\n      \"diagram_id\": \"<uuid>\",\n      \"cell_id\": \"<uuid>\",\n      \"score\": \"<number>\",\n      \"issue_url\": \"<uri>\",\n      \"metadata\": [\n        {\n          \"key\": \"46R8kJ03\",\n          \"value\": \"r,D\"\n        },\n        {\n          \"key\": \"D_gkT4\",\n          \"value\": \"5p,R\"\n        }\n      ],\n      \"id\": \"<uuid>\",\n      \"threat_model_id\": \"<uuid>\",\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json-patch+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"Value to apply\"\n    }\n  },\n  {\n    \"op\": \"copy\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"Value to apply\"\n    }\n  }\n]",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json-patch+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"Value to apply\"\n    }\n  },\n  {\n    \"op\": \"copy\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"Value to apply\"\n    }\n  }\n]",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json-patch+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"Value to apply\"\n    }\n  },\n  {\n    \"op\": \"copy\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"Value to apply\"\n    }\n  }\n]",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json-patch+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"Value to apply\"\n    }\n  },\n  {\n    \"op\": \"copy\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"Value to apply\"\n    }\n  }\n]",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json-patch+json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"op\": \"remove\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"Value to apply\"\n    }\n  },\n  {\n    \"op\": \"copy\",\n    \"path\": \"<string>\",\n    \"value\": {\n      \"description\": \"Value to apply\"\n    }\n  }\n]",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is valid\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 401, 403, 404, 500]);",
                      "});",
                      "",
                      "pm.test(\"Response time is less than 1000ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Type header\", function () {",
                      "    pm.response.to.have.header(\"Content-Type\");",
                      "});",
                      "",
                      "pm.test(\"Response is valid JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "pm.test(\"Error response has proper structure\", function () {",
                      "    if (pm.response.code >= 400) {",
                      "        const jsonData = pm.response.json();",
                      "        pm.expect(jsonData).to.have.property(\"error\");",
                      "    }",
                      "});",
                      "",
                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                      "});",
                      "",
                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                      "});",
                      "",
                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "Delete a threat model",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "threat_models",
                    ":threat_model_id"
                  ],
                  "variable": [
                    {
                      "key": "threat_model_id",
                      "value": "<uuid>",
                      "description": "(Required) Unique identifier of the threat model to delete (UUID)"
                    }
                  ]
                },
                "description": "Deletes a threat model; restricted to owner role"
              },
              "response": [
                {
                  "name": "Threat model deleted successfully",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": null
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Error response",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/threat_models/:threat_model_id",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "threat_models",
                        ":threat_model_id"
                      ],
                      "variable": [
                        {
                          "key": "threat_model_id"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is valid\", function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([204, 401, 403, 404, 500]);",
                      "});",
                      "",
                      "pm.test(\"Response time is less than 1000ms\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                      "});",
                      "",
                      "pm.test(\"Response is valid JSON\", function () {",
                      "    pm.response.to.be.json;",
                      "});",
                      "",
                      "pm.test(\"Error response has proper structure\", function () {",
                      "    if (pm.response.code >= 400) {",
                      "        const jsonData = pm.response.json();",
                      "        pm.expect(jsonData).to.have.property(\"error\");",
                      "    }",
                      "});",
                      "",
                      "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-Frame-Options header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                      "});",
                      "",
                      "pm.test(\"Response has X-XSS-Protection header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                      "});",
                      "",
                      "pm.test(\"Response has Content-Security-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                      "});",
                      "",
                      "pm.test(\"Response has Referrer-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                      "});",
                      "",
                      "pm.test(\"Response has Permissions-Policy header\", function () {",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                      "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "List threat models",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/threat_models?limit=20&offset=0&sort=created_at:desc&owner=<string>&name=<string>&description=<string>&issue_url=<string>&created_after=<dateTime>&created_before=<dateTime>&modified_after=<dateTime>&modified_before=<dateTime>",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "threat_models"
              ],
              "query": [
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Number of threat models to return"
                },
                {
                  "key": "offset",
                  "value": "0",
                  "description": "Pagination offset"
                },
                {
                  "key": "sort",
                  "value": "created_at:desc",
                  "description": "Sort order (e.g., created_at:desc, name:asc)"
                },
                {
                  "key": "owner",
                  "value": "<string>",
                  "description": "Filter by owner name or email"
                },
                {
                  "key": "name",
                  "value": "<string>",
                  "description": "Filter by threat model name (partial match)"
                },
                {
                  "key": "description",
                  "value": "<string>",
                  "description": "Filter by threat model description (partial match)"
                },
                {
                  "key": "issue_url",
                  "value": "<string>",
                  "description": "Filter by issue URL (partial match)"
                },
                {
                  "key": "created_after",
                  "value": "<dateTime>",
                  "description": "Filter threat models created after this date (RFC3339 format)"
                },
                {
                  "key": "created_before",
                  "value": "<dateTime>",
                  "description": "Filter threat models created before this date (RFC3339 format)"
                },
                {
                  "key": "modified_after",
                  "value": "<dateTime>",
                  "description": "Filter threat models modified after this date (RFC3339 format)"
                },
                {
                  "key": "modified_before",
                  "value": "<dateTime>",
                  "description": "Filter threat models modified before this date (RFC3339 format)"
                }
              ]
            },
            "description": "Returns a list of threat models accessible to the authenticated user with enhanced metadata and entity counts"
          },
          "response": [
            {
              "name": "Paginated list of threat models with enhanced metadata and entity counts",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/threat_models?limit=20&offset=0&sort=created_at:desc&owner=<string>&name=<string>&description=<string>&issue_url=<string>&created_after=<dateTime>&created_before=<dateTime>&modified_after=<dateTime>&modified_before=<dateTime>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "threat_models"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "20",
                      "description": "Number of threat models to return"
                    },
                    {
                      "key": "offset",
                      "value": "0",
                      "description": "Pagination offset"
                    },
                    {
                      "key": "sort",
                      "value": "created_at:desc",
                      "description": "Sort order (e.g., created_at:desc, name:asc)"
                    },
                    {
                      "key": "owner",
                      "value": "<string>",
                      "description": "Filter by owner name or email"
                    },
                    {
                      "key": "name",
                      "value": "<string>",
                      "description": "Filter by threat model name (partial match)"
                    },
                    {
                      "key": "description",
                      "value": "<string>",
                      "description": "Filter by threat model description (partial match)"
                    },
                    {
                      "key": "issue_url",
                      "value": "<string>",
                      "description": "Filter by issue URL (partial match)"
                    },
                    {
                      "key": "created_after",
                      "value": "<dateTime>",
                      "description": "Filter threat models created after this date (RFC3339 format)"
                    },
                    {
                      "key": "created_before",
                      "value": "<dateTime>",
                      "description": "Filter threat models created before this date (RFC3339 format)"
                    },
                    {
                      "key": "modified_after",
                      "value": "<dateTime>",
                      "description": "Filter threat models modified after this date (RFC3339 format)"
                    },
                    {
                      "key": "modified_before",
                      "value": "<dateTime>",
                      "description": "Filter threat models modified before this date (RFC3339 format)"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"data\": [\n    {\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\",\n      \"owner\": \"<string>\",\n      \"created_by\": \"<string>\",\n      \"threat_model_framework\": \"<string>\",\n      \"document_count\": \"<integer>\",\n      \"source_count\": \"<integer>\",\n      \"diagram_count\": \"<integer>\",\n      \"threat_count\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"issue_url\": \"<uri>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\",\n      \"owner\": \"<string>\",\n      \"created_by\": \"<string>\",\n      \"threat_model_framework\": \"<string>\",\n      \"document_count\": \"<integer>\",\n      \"source_count\": \"<integer>\",\n      \"diagram_count\": \"<integer>\",\n      \"threat_count\": \"<integer>\",\n      \"description\": \"<string>\",\n      \"issue_url\": \"<uri>\"\n    }\n  ],\n  \"pagination\": {\n    \"total\": \"<integer>\",\n    \"limit\": \"<integer>\",\n    \"offset\": \"<integer>\",\n    \"has_more\": \"<boolean>\"\n  }\n}"
            },
            {
              "name": "Error response",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/threat_models?limit=20&offset=0&sort=created_at:desc&owner=<string>&name=<string>&description=<string>&issue_url=<string>&created_after=<dateTime>&created_before=<dateTime>&modified_after=<dateTime>&modified_before=<dateTime>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "threat_models"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "20",
                      "description": "Number of threat models to return"
                    },
                    {
                      "key": "offset",
                      "value": "0",
                      "description": "Pagination offset"
                    },
                    {
                      "key": "sort",
                      "value": "created_at:desc",
                      "description": "Sort order (e.g., created_at:desc, name:asc)"
                    },
                    {
                      "key": "owner",
                      "value": "<string>",
                      "description": "Filter by owner name or email"
                    },
                    {
                      "key": "name",
                      "value": "<string>",
                      "description": "Filter by threat model name (partial match)"
                    },
                    {
                      "key": "description",
                      "value": "<string>",
                      "description": "Filter by threat model description (partial match)"
                    },
                    {
                      "key": "issue_url",
                      "value": "<string>",
                      "description": "Filter by issue URL (partial match)"
                    },
                    {
                      "key": "created_after",
                      "value": "<dateTime>",
                      "description": "Filter threat models created after this date (RFC3339 format)"
                    },
                    {
                      "key": "created_before",
                      "value": "<dateTime>",
                      "description": "Filter threat models created before this date (RFC3339 format)"
                    },
                    {
                      "key": "modified_after",
                      "value": "<dateTime>",
                      "description": "Filter threat models modified after this date (RFC3339 format)"
                    },
                    {
                      "key": "modified_before",
                      "value": "<dateTime>",
                      "description": "Filter threat models modified before this date (RFC3339 format)"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
            },
            {
              "name": "Error response",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/threat_models?limit=20&offset=0&sort=created_at:desc&owner=<string>&name=<string>&description=<string>&issue_url=<string>&created_after=<dateTime>&created_before=<dateTime>&modified_after=<dateTime>&modified_before=<dateTime>",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "threat_models"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "20",
                      "description": "Number of threat models to return"
                    },
                    {
                      "key": "offset",
                      "value": "0",
                      "description": "Pagination offset"
                    },
                    {
                      "key": "sort",
                      "value": "created_at:desc",
                      "description": "Sort order (e.g., created_at:desc, name:asc)"
                    },
                    {
                      "key": "owner",
                      "value": "<string>",
                      "description": "Filter by owner name or email"
                    },
                    {
                      "key": "name",
                      "value": "<string>",
                      "description": "Filter by threat model name (partial match)"
                    },
                    {
                      "key": "description",
                      "value": "<string>",
                      "description": "Filter by threat model description (partial match)"
                    },
                    {
                      "key": "issue_url",
                      "value": "<string>",
                      "description": "Filter by issue URL (partial match)"
                    },
                    {
                      "key": "created_after",
                      "value": "<dateTime>",
                      "description": "Filter threat models created after this date (RFC3339 format)"
                    },
                    {
                      "key": "created_before",
                      "value": "<dateTime>",
                      "description": "Filter threat models created before this date (RFC3339 format)"
                    },
                    {
                      "key": "modified_after",
                      "value": "<dateTime>",
                      "description": "Filter threat models modified after this date (RFC3339 format)"
                    },
                    {
                      "key": "modified_before",
                      "value": "<dateTime>",
                      "description": "Filter threat models modified before this date (RFC3339 format)"
                    }
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is valid\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 401, 500]);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 1000ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                  "});",
                  "",
                  "pm.test(\"Response has Content-Type header\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Response is valid JSON\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Error response has proper structure\", function () {",
                  "    if (pm.response.code >= 400) {",
                  "        const jsonData = pm.response.json();",
                  "        pm.expect(jsonData).to.have.property(\"error\");",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                  "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                  "});",
                  "",
                  "pm.test(\"Response has X-Frame-Options header\", function () {",
                  "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                  "});",
                  "",
                  "pm.test(\"Response has X-XSS-Protection header\", function () {",
                  "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                  "});",
                  "",
                  "pm.test(\"Response has Content-Security-Policy header\", function () {",
                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                  "});",
                  "",
                  "pm.test(\"Response has Referrer-Policy header\", function () {",
                  "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                  "});",
                  "",
                  "pm.test(\"Response has Permissions-Policy header\", function () {",
                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Create a threat model",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"threat_model_framework\": \"<string>\",\n  \"issue_url\": \"<uri>\",\n  \"authorization\": [\n    {\n      \"subject\": \",`a+{pkP\",\n      \"role\": \"reader\"\n    },\n    {\n      \"subject\": \"Q;cNXnx/w\",\n      \"role\": \"reader\"\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"Ei18RuMr\",\n      \"value\": \"R\"\n    },\n    {\n      \"key\": \"Dg2bJ2FqdeG\",\n      \"value\": \"+_xU5zdfUl\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/threat_models",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "threat_models"
              ]
            },
            "description": "Creates a new threat model with the authenticated user as owner"
          },
          "response": [
            {
              "name": "Threat model created successfully",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"threat_model_framework\": \"<string>\",\n  \"issue_url\": \"<uri>\",\n  \"authorization\": [\n    {\n      \"subject\": \",`a+{pkP\",\n      \"role\": \"reader\"\n    },\n    {\n      \"subject\": \"Q;cNXnx/w\",\n      \"role\": \"reader\"\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"Ei18RuMr\",\n      \"value\": \"R\"\n    },\n    {\n      \"key\": \"Dg2bJ2FqdeG\",\n      \"value\": \"+_xU5zdfUl\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/threat_models",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "threat_models"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Location",
                  "value": "<string>",
                  "description": {
                    "content": "URL of the new threat model",
                    "type": "text/plain"
                  }
                }
              ],
              "cookie": [],
              "body": "{\n  \"name\": \"Q\",\n  \"owner\": \"jGY\",\n  \"authorization\": [\n    {\n      \"subject\": \"$}/\",\n      \"role\": \"writer\"\n    },\n    {\n      \"subject\": \"F?nLj$,HM\",\n      \"role\": \"writer\"\n    }\n  ],\n  \"threat_model_framework\": \"<string>\",\n  \"description\": \";P,Vwt\",\n  \"issue_url\": \"<uri>\",\n  \"metadata\": [\n    {\n      \"key\": \"b08t\",\n      \"value\": \"pUy\"\n    },\n    {\n      \"key\": \"4aHe5G\",\n      \"value\": \"E$/\"\n    }\n  ],\n  \"id\": \"<uuid>\",\n  \"created_at\": \"<dateTime>\",\n  \"modified_at\": \"<dateTime>\",\n  \"created_by\": \"v4-txU#}r\",\n  \"documents\": [\n    {\n      \"name\": \"7Zwyf]cP)@\",\n      \"url\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"description\": \"<string>\",\n      \"metadata\": [\n        {\n          \"key\": \"BgRO1h4PC_5\",\n          \"value\": \"D~6\"\n        },\n        {\n          \"key\": \"cLoDAHnn3\",\n          \"value\": \"%I)g:d\"\n        }\n      ]\n    },\n    {\n      \"name\": \",-3p#XQ\",\n      \"url\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"description\": \"<string>\",\n      \"metadata\": [\n        {\n          \"key\": \"wpvLmZ\",\n          \"value\": \" \"\n        },\n        {\n          \"key\": \"9LgikCWLn2Q\",\n          \"value\": \"|%W2e}^?\"\n        }\n      ]\n    }\n  ],\n  \"sourceCode\": [\n    {\n      \"url\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"type\": \"mercurial\",\n      \"parameters\": {\n        \"refType\": \"branch\",\n        \"refValue\": \"<string>\",\n        \"subPath\": \"<string>\"\n      },\n      \"metadata\": [\n        {\n          \"key\": \"Hg5GVJ1\",\n          \"value\": \"8Kmu\"\n        },\n        {\n          \"key\": \"i\",\n          \"value\": \"~kpj$\"\n        }\n      ]\n    },\n    {\n      \"url\": \"<uri>\",\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"type\": \"git\",\n      \"parameters\": {\n        \"refType\": \"tag\",\n        \"refValue\": \"<string>\",\n        \"subPath\": \"<string>\"\n      },\n      \"metadata\": [\n        {\n          \"key\": \"WJ3JC\",\n          \"value\": \"W[L\\\"\\\\`\"\n        },\n        {\n          \"key\": \"9fYUfKEbf\",\n          \"value\": \"i7.AY/\"\n        }\n      ]\n    }\n  ],\n  \"diagrams\": [\n    {\n      \"cells\": [\n        {\n          \"height\": \"<number>\",\n          \"id\": \"<uuid>\",\n          \"shape\": \"<string>\",\n          \"width\": \"<number>\",\n          \"x\": \"<number>\",\n          \"y\": \"<number>\",\n          \"zIndex\": 1,\n          \"visible\": true,\n          \"data\": {\n            \"_metadata\": []\n          },\n          \"markup\": [\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": \"string\",\n                \"key_1\": 9981.016711101232\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            },\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": 2092.8267452385917,\n                \"key_1\": true,\n                \"key_2\": 8505\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            }\n          ],\n          \"tools\": [\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 7064,\n                \"key_1\": \"string\"\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": \"string\",\n                \"key_1\": \"string\",\n                \"key_2\": 7010.081917352535\n              }\n            }\n          ],\n          \"angle\": 0,\n          \"attrs\": {\n            \"body\": {\n              \"fill\": \"<string>\",\n              \"stroke\": \"<string>\",\n              \"strokeWidth\": \"<number>\",\n              \"strokeDasharray\": \"<string>\"\n            },\n            \"text\": {\n              \"text\": \"<string>\",\n              \"fontSize\": \"<number>\",\n              \"fill\": \"<string>\",\n              \"fontFamily\": \"<string>\"\n            }\n          },\n          \"ports\": {\n            \"groups\": {\n              \"key_0\": {\n                \"position\": \"top\"\n              },\n              \"key_1\": {\n                \"position\": \"right\"\n              }\n            },\n            \"items\": [\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              }\n            ]\n          },\n          \"parent\": \"<uuid>\",\n          \"label\": \"<string>\",\n          \"position\": {\n            \"x\": \"<number>\",\n            \"y\": \"<number>\"\n          },\n          \"size\": {\n            \"width\": \"<number>\",\n            \"height\": \"<number>\"\n          },\n          \"style\": {\n            \"fill\": \"<string>\",\n            \"stroke\": \"<string>\",\n            \"strokeWidth\": \"<number>\",\n            \"fontSize\": \"<number>\",\n            \"fontColor\": \"<string>\"\n          }\n        },\n        {\n          \"height\": \"<number>\",\n          \"id\": \"<uuid>\",\n          \"shape\": \"<string>\",\n          \"width\": \"<number>\",\n          \"x\": \"<number>\",\n          \"y\": \"<number>\",\n          \"zIndex\": 1,\n          \"visible\": true,\n          \"data\": {\n            \"_metadata\": []\n          },\n          \"markup\": [\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": 6081.632819024727,\n                \"key_1\": false\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            },\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": 8339.284901046247,\n                \"key_1\": true\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            }\n          ],\n          \"tools\": [\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 9188\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 5588,\n                \"key_1\": 6081\n              }\n            }\n          ],\n          \"angle\": 0,\n          \"attrs\": {\n            \"body\": {\n              \"fill\": \"<string>\",\n              \"stroke\": \"<string>\",\n              \"strokeWidth\": \"<number>\",\n              \"strokeDasharray\": \"<string>\"\n            },\n            \"text\": {\n              \"text\": \"<string>\",\n              \"fontSize\": \"<number>\",\n              \"fill\": \"<string>\",\n              \"fontFamily\": \"<string>\"\n            }\n          },\n          \"ports\": {\n            \"groups\": {\n              \"key_0\": {\n                \"position\": \"left\"\n              },\n              \"key_1\": {\n                \"position\": \"right\"\n              },\n              \"key_2\": {\n                \"position\": \"top\"\n              }\n            },\n            \"items\": [\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              }\n            ]\n          },\n          \"parent\": \"<uuid>\",\n          \"label\": \"<string>\",\n          \"position\": {\n            \"x\": \"<number>\",\n            \"y\": \"<number>\"\n          },\n          \"size\": {\n            \"width\": \"<number>\",\n            \"height\": \"<number>\"\n          },\n          \"style\": {\n            \"fill\": \"<string>\",\n            \"stroke\": \"<string>\",\n            \"strokeWidth\": \"<number>\",\n            \"fontSize\": \"<number>\",\n            \"fontColor\": \"<string>\"\n          }\n        }\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<uuid>\",\n      \"modified_at\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"type\": \"DFD-1.0.0\",\n      \"metadata\": [\n        {\n          \"key\": \"MqUNurbdM\",\n          \"value\": \"*kbTk-\"\n        },\n        {\n          \"key\": \"g\",\n          \"value\": \" \"\n        }\n      ]\n    },\n    {\n      \"cells\": [\n        {\n          \"height\": \"<number>\",\n          \"id\": \"<uuid>\",\n          \"shape\": \"<string>\",\n          \"width\": \"<number>\",\n          \"x\": \"<number>\",\n          \"y\": \"<number>\",\n          \"zIndex\": 1,\n          \"visible\": true,\n          \"data\": {\n            \"_metadata\": []\n          },\n          \"markup\": [\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": false\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            },\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": 8397.69204088012,\n                \"key_1\": 286.50684430950645,\n                \"key_2\": \"string\",\n                \"key_3\": \"string\"\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            }\n          ],\n          \"tools\": [\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": false,\n                \"key_1\": 1351.664198183047,\n                \"key_2\": 5990,\n                \"key_3\": 1341.9521680920666\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 2837\n              }\n            }\n          ],\n          \"angle\": 0,\n          \"attrs\": {\n            \"body\": {\n              \"fill\": \"<string>\",\n              \"stroke\": \"<string>\",\n              \"strokeWidth\": \"<number>\",\n              \"strokeDasharray\": \"<string>\"\n            },\n            \"text\": {\n              \"text\": \"<string>\",\n              \"fontSize\": \"<number>\",\n              \"fill\": \"<string>\",\n              \"fontFamily\": \"<string>\"\n            }\n          },\n          \"ports\": {\n            \"groups\": {\n              \"key_0\": {\n                \"position\": \"bottom\"\n              }\n            },\n            \"items\": [\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              }\n            ]\n          },\n          \"parent\": \"<uuid>\",\n          \"label\": \"<string>\",\n          \"position\": {\n            \"x\": \"<number>\",\n            \"y\": \"<number>\"\n          },\n          \"size\": {\n            \"width\": \"<number>\",\n            \"height\": \"<number>\"\n          },\n          \"style\": {\n            \"fill\": \"<string>\",\n            \"stroke\": \"<string>\",\n            \"strokeWidth\": \"<number>\",\n            \"fontSize\": \"<number>\",\n            \"fontColor\": \"<string>\"\n          }\n        },\n        {\n          \"height\": \"<number>\",\n          \"id\": \"<uuid>\",\n          \"shape\": \"<string>\",\n          \"width\": \"<number>\",\n          \"x\": \"<number>\",\n          \"y\": \"<number>\",\n          \"zIndex\": 1,\n          \"visible\": true,\n          \"data\": {\n            \"_metadata\": []\n          },\n          \"markup\": [\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": true,\n                \"key_1\": 2979,\n                \"key_2\": true\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            },\n            {\n              \"tagName\": \"<string>\",\n              \"selector\": \"<string>\",\n              \"attrs\": {\n                \"key_0\": 3077.954507267864,\n                \"key_1\": false,\n                \"key_2\": 7329\n              },\n              \"children\": [\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                },\n                {\n                  \"value\": \"<Circular reference to #/components/schemas/MarkupElement detected>\"\n                }\n              ]\n            }\n          ],\n          \"tools\": [\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 7970.105547641107,\n                \"key_1\": 2526,\n                \"key_2\": \"string\"\n              }\n            },\n            {\n              \"name\": \"<string>\",\n              \"args\": {\n                \"key_0\": 9324,\n                \"key_1\": false\n              }\n            }\n          ],\n          \"angle\": 0,\n          \"attrs\": {\n            \"body\": {\n              \"fill\": \"<string>\",\n              \"stroke\": \"<string>\",\n              \"strokeWidth\": \"<number>\",\n              \"strokeDasharray\": \"<string>\"\n            },\n            \"text\": {\n              \"text\": \"<string>\",\n              \"fontSize\": \"<number>\",\n              \"fill\": \"<string>\",\n              \"fontFamily\": \"<string>\"\n            }\n          },\n          \"ports\": {\n            \"groups\": {\n              \"key_0\": {\n                \"position\": \"left\"\n              },\n              \"key_1\": {\n                \"position\": \"right\"\n              },\n              \"key_2\": {\n                \"position\": \"left\"\n              },\n              \"key_3\": {\n                \"position\": \"left\"\n              }\n            },\n            \"items\": [\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              },\n              {\n                \"id\": \"<string>\",\n                \"group\": \"<string>\"\n              }\n            ]\n          },\n          \"parent\": \"<uuid>\",\n          \"label\": \"<string>\",\n          \"position\": {\n            \"x\": \"<number>\",\n            \"y\": \"<number>\"\n          },\n          \"size\": {\n            \"width\": \"<number>\",\n            \"height\": \"<number>\"\n          },\n          \"style\": {\n            \"fill\": \"<string>\",\n            \"stroke\": \"<string>\",\n            \"strokeWidth\": \"<number>\",\n            \"fontSize\": \"<number>\",\n            \"fontColor\": \"<string>\"\n          }\n        }\n      ],\n      \"created_at\": \"<dateTime>\",\n      \"id\": \"<uuid>\",\n      \"modified_at\": \"<dateTime>\",\n      \"name\": \"<string>\",\n      \"type\": \"DFD-1.0.0\",\n      \"metadata\": [\n        {\n          \"key\": \"NW\",\n          \"value\": \" \"\n        },\n        {\n          \"key\": \"YR8onYto\",\n          \"value\": \"o9xO\\\"AFr2_\"\n        }\n      ]\n    }\n  ],\n  \"threats\": [\n    {\n      \"name\": \"<string>\",\n      \"severity\": \"Low\",\n      \"priority\": \"<string>\",\n      \"mitigated\": \"<boolean>\",\n      \"status\": \"<string>\",\n      \"threat_type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"mitigation\": \"<string>\",\n      \"diagram_id\": \"<uuid>\",\n      \"cell_id\": \"<uuid>\",\n      \"score\": \"<number>\",\n      \"issue_url\": \"<uri>\",\n      \"metadata\": [\n        {\n          \"key\": \"a\",\n          \"value\": \"o[\"\n        },\n        {\n          \"key\": \"sqy\",\n          \"value\": \"E`][i\"\n        }\n      ],\n      \"id\": \"<uuid>\",\n      \"threat_model_id\": \"<uuid>\",\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"severity\": \"Critical\",\n      \"priority\": \"<string>\",\n      \"mitigated\": \"<boolean>\",\n      \"status\": \"<string>\",\n      \"threat_type\": \"<string>\",\n      \"description\": \"<string>\",\n      \"mitigation\": \"<string>\",\n      \"diagram_id\": \"<uuid>\",\n      \"cell_id\": \"<uuid>\",\n      \"score\": \"<number>\",\n      \"issue_url\": \"<uri>\",\n      \"metadata\": [\n        {\n          \"key\": \"46R8kJ03\",\n          \"value\": \"r,D\"\n        },\n        {\n          \"key\": \"D_gkT4\",\n          \"value\": \"5p,R\"\n        }\n      ],\n      \"id\": \"<uuid>\",\n      \"threat_model_id\": \"<uuid>\",\n      \"created_at\": \"<dateTime>\",\n      \"modified_at\": \"<dateTime>\"\n    }\n  ]\n}"
            },
            {
              "name": "Error response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"threat_model_framework\": \"<string>\",\n  \"issue_url\": \"<uri>\",\n  \"authorization\": [\n    {\n      \"subject\": \",`a+{pkP\",\n      \"role\": \"reader\"\n    },\n    {\n      \"subject\": \"Q;cNXnx/w\",\n      \"role\": \"reader\"\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"Ei18RuMr\",\n      \"value\": \"R\"\n    },\n    {\n      \"key\": \"Dg2bJ2FqdeG\",\n      \"value\": \"+_xU5zdfUl\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/threat_models",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "threat_models"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
            },
            {
              "name": "Error response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"threat_model_framework\": \"<string>\",\n  \"issue_url\": \"<uri>\",\n  \"authorization\": [\n    {\n      \"subject\": \",`a+{pkP\",\n      \"role\": \"reader\"\n    },\n    {\n      \"subject\": \"Q;cNXnx/w\",\n      \"role\": \"reader\"\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"Ei18RuMr\",\n      \"value\": \"R\"\n    },\n    {\n      \"key\": \"Dg2bJ2FqdeG\",\n      \"value\": \"+_xU5zdfUl\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/threat_models",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "threat_models"
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
            },
            {
              "name": "Error response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"threat_model_framework\": \"<string>\",\n  \"issue_url\": \"<uri>\",\n  \"authorization\": [\n    {\n      \"subject\": \",`a+{pkP\",\n      \"role\": \"reader\"\n    },\n    {\n      \"subject\": \"Q;cNXnx/w\",\n      \"role\": \"reader\"\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"Ei18RuMr\",\n      \"value\": \"R\"\n    },\n    {\n      \"key\": \"Dg2bJ2FqdeG\",\n      \"value\": \"+_xU5zdfUl\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/threat_models",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "threat_models"
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\",\n  \"error_uri\": \"<uri>\",\n  \"details\": {\n    \"code\": \"<string>\",\n    \"context\": {\n      \"key_0\": \"string\",\n      \"key_1\": \"string\"\n    },\n    \"suggestion\": \"<string>\"\n  }\n}"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is valid\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([201, 400, 401, 500]);",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 1000ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                  "});",
                  "",
                  "pm.test(\"Response has Content-Type header\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Response is valid JSON\", function () {",
                  "    pm.response.to.be.json;",
                  "});",
                  "",
                  "pm.test(\"Error response has proper structure\", function () {",
                  "    if (pm.response.code >= 400) {",
                  "        const jsonData = pm.response.json();",
                  "        pm.expect(jsonData).to.have.property(\"error\");",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Response has X-Content-Type-Options header\", function () {",
                  "    pm.expect(pm.response.headers.get(\"X-Content-Type-Options\")).to.equal(\"nosniff\");",
                  "});",
                  "",
                  "pm.test(\"Response has X-Frame-Options header\", function () {",
                  "    pm.expect(pm.response.headers.get(\"X-Frame-Options\")).to.equal(\"DENY\");",
                  "});",
                  "",
                  "pm.test(\"Response has X-XSS-Protection header\", function () {",
                  "    pm.expect(pm.response.headers.get(\"X-XSS-Protection\")).to.equal(\"1; mode=block\");",
                  "});",
                  "",
                  "pm.test(\"Response has Content-Security-Policy header\", function () {",
                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.exist;",
                  "    pm.expect(pm.response.headers.get(\"Content-Security-Policy\")).to.include(\"default-src\");",
                  "});",
                  "",
                  "pm.test(\"Response has Referrer-Policy header\", function () {",
                  "    pm.expect(pm.response.headers.get(\"Referrer-Policy\")).to.equal(\"strict-origin-when-cross-origin\");",
                  "});",
                  "",
                  "pm.test(\"Response has Permissions-Policy header\", function () {",
                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.exist;",
                  "    pm.expect(pm.response.headers.get(\"Permissions-Policy\")).to.include(\"geolocation=()\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080"
    }
  ]
}
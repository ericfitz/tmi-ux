{
    "openapi": "3.0.3",
    "info": {
        "title": "TMI Threat Modeling Improved API",
        "description": "A RESTful API with WebSocket support for threat modeling with collaborative diagram editing.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://api.example.com",
            "description": "Main production server"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "JWT token for authenticated requests"
            }
        },
        "schemas": {
            "ApiInfo": {
                "type": "object",
                "description": "API information response for the root endpoint",
                "properties": {
                    "status": {
                        "type": "object",
                        "properties": {
                            "code": {
                                "type": "string",
                                "enum": ["OK", "ERROR"],
                                "description": "Status code indicating if the API is functioning correctly"
                            },
                            "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Current server time in UTC, formatted as RFC 3339"
                            }
                        },
                        "required": ["code", "time"]
                    },
                    "service": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the service"
                            },
                            "build": {
                                "type": "string",
                                "description": "Current build number"
                            }
                        },
                        "required": ["name", "build"]
                    },
                    "api": {
                        "type": "object",
                        "properties": {
                            "version": {
                                "type": "string",
                                "description": "API version"
                            },
                            "specification": {
                                "type": "string",
                                "format": "uri",
                                "description": "URL to the API specification"
                            }
                        },
                        "required": ["version", "specification"]
                    },
                    "operator": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Operator name from environment variables"
                            },
                            "contact": {
                                "type": "string",
                                "description": "Operator contact information from environment variables"
                            }
                        },
                        "required": ["name", "contact"]
                    }
                },
                "required": ["status", "service", "api"],
                "example": {
                    "status": {
                        "code": "OK",
                        "time": "2025-04-09T12:00:00Z"
                    },
                    "service": {
                        "name": "TMI",
                        "build": "1.0.0-386eea0"
                    },
                    "api": {
                        "version": "1.0",
                        "specification": "https://github.com/ericfitz/tmi/blob/main/tmi-openapi.json"
                    },
                    "operator": {
                        "name": "Example Organization",
                        "contact": "api-support@example.com"
                    }
                }
            },
            "Diagram": {
                "type": "object",
                "description": "A diagram object supporting collaborative editing",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique identifier for the diagram"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the diagram"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the diagram"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp (ISO8601)"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last modification timestamp (ISO8601)"
                    },
                    "owner": {
                        "type": "string",
                        "description": "Username or identifier of the current owner (may be email address or other format)"
                    },
                    "authorization": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Authorization"
                        },
                        "description": "List of users and their roles for this diagram"
                    },
                    "metadata": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Metadata"
                        },
                        "description": "Key-value pairs for additional diagram metadata"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DiagramComponent"
                        },
                        "description": "List of diagram components (maxGraph cells)"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "created_at",
                    "modified_at",
                    "owner",
                    "authorization"
                ],
                "example": {
                    "id": "123e4567-e89b-12d3-a456-426614174000",
                    "name": "Workflow Diagram",
                    "description": "A process workflow",
                    "created_at": "2025-04-06T12:00:00Z",
                    "modified_at": "2025-04-06T12:30:00Z",
                    "owner": "user@example.com",
                    "authorization": [
                        {
                            "subject": "user@example.com",
                            "role": "owner"
                        }
                    ],
                    "metadata": [],
                    "components": [
                        {
                            "id": "987fcdeb-12d3-4567-a890-426614174000",
                            "type": "vertex",
                            "data": {
                                "label": "Start",
                                "x": 100,
                                "y": 100
                            },
                            "metadata": []
                        }
                    ]
                }
            },
            "DiagramComponent": {
                "type": "object",
                "description": "A component within a diagram, based on maxGraph cells",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique identifier for the component"
                    },
                    "type": {
                        "type": "string",
                        "description": "Component type (e.g., vertex, edge)"
                    },
                    "data": {
                        "type": "object",
                        "description": "Component properties (e.g., position, label)"
                    },
                    "metadata": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Metadata"
                        },
                        "description": "Key-value pairs for component metadata"
                    }
                },
                "required": [
                    "id",
                    "type",
                    "data"
                ]
            },
            "ThreatModel": {
                "type": "object",
                "description": "A threat model object for documenting threats",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique identifier for the threat model"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the threat model"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the threat model"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp (ISO8601)"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last modification timestamp (ISO8601)"
                    },
                    "owner": {
                        "type": "string",
                        "description": "Username or identifier of the current owner (may be email address or other format)"
                    },
                    "authorization": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Authorization"
                        },
                        "description": "List of users and their roles for this threat model"
                    },
                    "metadata": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Metadata"
                        },
                        "description": "Key-value pairs for additional threat model metadata"
                    },
                    "diagrams": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "description": "UUID of a related diagram"
                        },
                        "description": "List of diagram UUIDs associated with this threat model"
                    },
                    "threats": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Threat"
                        },
                        "description": "List of threats within the threat model"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "created_at",
                    "modified_at",
                    "owner",
                    "authorization"
                ],
                "example": {
                    "id": "550e8400-e29b-41d4-a716-446655440000",
                    "name": "System Threat Model",
                    "description": "Threats for system X",
                    "created_at": "2025-04-06T12:00:00Z",
                    "modified_at": "2025-04-06T12:00:00Z",
                    "owner": "user@example.com",
                    "authorization": [
                        {
                            "subject": "user@example.com",
                            "role": "owner"
                        }
                    ],
                    "metadata": [],
                    "diagrams": [
                        "123e4567-e89b-12d3-a456-426614174000"
                    ],
                    "threats": [
                        {
                            "id": "6ba7b810-9dad-11d1-80b4-00c04fd430c8",
                            "threat_model_id": "550e8400-e29b-41d4-a716-446655440000",
                            "name": "Data Breach",
                            "description": "Unauthorized data access",
                            "created_at": "2025-04-06T12:01:00Z",
                            "modified_at": "2025-04-06T12:01:00Z",
                            "metadata": []
                        }
                    ]
                }
            },
            "Threat": {
                "type": "object",
                "description": "A threat within a threat model",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique identifier for the threat"
                    },
                    "threat_model_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "UUID of the parent threat model"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the threat"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the threat"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp (ISO8601)"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last modification timestamp (ISO8601)"
                    },
                    "metadata": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Metadata"
                        },
                        "description": "Key-value pairs for additional threat metadata"
                    }
                },
                "required": [
                    "id",
                    "threat_model_id",
                    "name",
                    "created_at",
                    "modified_at"
                ]
            },
            "Authorization": {
                "type": "object",
                "description": "A user-role pair defining access permissions",
                "properties": {
                    "subject": {
                        "type": "string",
                        "description": "Username or identifier of the user (may be email address or other format)"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "reader",
                            "writer",
                            "owner"
                        ],
                        "description": "Role: reader (view), writer (edit), owner (full control)"
                    }
                },
                "required": [
                    "subject",
                    "role"
                ]
            },
            "Metadata": {
                "type": "object",
                "description": "A key-value pair for extensible metadata",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "Metadata key"
                    },
                    "value": {
                        "type": "string",
                        "description": "Metadata value"
                    }
                },
                "required": [
                    "key",
                    "value"
                ]
            },
            "Error": {
                "type": "object",
                "description": "Standard error response format",
                "properties": {
                    "error": {
                        "type": "string",
                        "description": "Error code"
                    },
                    "message": {
                        "type": "string",
                        "description": "Error description"
                    }
                },
                "required": [
                    "error",
                    "message"
                ],
                "example": {
                    "error": "unauthorized",
                    "message": "Invalid or expired token"
                }
            },
            "CollaborationSession": {
                "type": "object",
                "description": "Details of an active collaboration session for a diagram",
                "properties": {
                    "session_id": {
                        "type": "string",
                        "description": "Unique identifier for the session"
                    },
                    "diagram_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "UUID of the associated diagram"
                    },
                    "participants": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "description": "A participant in the session",
                            "properties": {
                                "user_id": {
                                    "type": "string",
                                    "description": "Username or identifier of the participant (may be email address or other format)"
                                },
                                "joined_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Join timestamp"
                                }
                            }
                        },
                        "description": "List of active participants"
                    },
                    "websocket_url": {
                        "type": "string",
                        "description": "WebSocket URL for real-time updates"
                    }
                },
                "required": [
                    "session_id",
                    "diagram_id",
                    "participants",
                    "websocket_url"
                ],
                "example": {
                    "session_id": "abc123-session-uuid",
                    "diagram_id": "123e4567-e89b-12d3-a456-426614174000",
                    "participants": [
                        {
                            "user_id": "user@example.com",
                            "joined_at": "2025-04-06T12:02:00Z"
                        }
                    ],
                    "websocket_url": "wss://api.example.com/diagrams/123e4567-e89b-12d3-a456-426614174000/ws"
                }
            },
            "ListItem": {
                "type": "object",
                "description": "A simplified item for list endpoints, containing name and ID",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the resource"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique identifier of the resource"
                    }
                },
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "responses": {
            "Error": {
                "description": "Error response",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            }
        }
    },
    "paths": {
        "/": {
            "get": {
                "summary": "Get API information",
                "description": "Returns service, API, and operator information without authentication",
                "operationId": "getApiInfo",
                "responses": {
                    "200": {
                        "description": "Service and API information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiInfo"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "get": {
                "summary": "Initiate OAuth login",
                "description": "Redirects the user to an OAuth provider for authentication",
                "parameters": [
                    {
                        "name": "redirect_uri",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Optional URI to redirect to after login"
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to OAuth provider",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "URL of the OAuth provider's authorization endpoint"
                            }
                        }
                    }
                },
                "example": {
                    "request": "GET /auth/login?redirect_uri=https://client.example.com/callback",
                    "response": {
                        "status": 302,
                        "headers": {
                            "Location": "https://oauth-provider.com/auth?client_id=abc&response_type=code&redirect_uri=https://client.example.com/callback"
                        }
                    }
                }
            }
        },
        "/auth/callback": {
            "get": {
                "summary": "Handle OAuth callback",
                "description": "Exchanges an OAuth authorization code for a JWT",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Authorization code from the OAuth provider"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Optional state parameter for CSRF protection"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT issued successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "description": "JWT for authentication"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "description": "Expiration time in seconds"
                                        }
                                    },
                                    "required": [
                                        "token",
                                        "expires_in"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/Error"
                    },
                    "401": {
                        "$ref": "#/components/responses/Error"
                    }
                },
                "example": {
                    "request": "GET /auth/callback?code=abc123&state=xyz789",
                    "response": {
                        "status": 200,
                        "body": {
                            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                            "expires_in": 3600
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "summary": "Logout user",
                "description": "Invalidates the user's JWT and ends the session",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Session ended successfully"
                    },
                    "401": {
                        "$ref": "#/components/responses/Error"
                    }
                },
                "example": {
                    "request": "POST /auth/logout\nAuthorization: Bearer <JWT>",
                    "response": {
                        "status": 204
                    }
                }
            }
        },
        "/diagrams": {
            "get": {
                "summary": "List diagrams",
                "description": "Returns a list of diagrams accessible to the authenticated user as name-ID pairs",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 20
                        },
                        "description": "Number of diagrams to return"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 0
                        },
                        "description": "Pagination offset"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "created_at:desc"
                        },
                        "description": "Sort order (e.g., created_at:desc, name:asc)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of diagrams as name-ID pairs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ListItem"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Error"
                    }
                },
                "example": {
                    "request": "GET /diagrams?limit=2&offset=0\nAuthorization: Bearer <JWT>",
                    "response": {
                        "status": 200,
                        "body": [
                            {
                                "name": "Workflow Diagram",
                                "id": "123e4567-e89b-12d3-a456-426614174000"
                            },
                            {
                                "name": "System Overview",
                                "id": "456e7890-e12f-34d5-a678-426614174001"
                            }
                        ]
                    }
                }
            },
            "post": {
                "summary": "Create a diagram",
                "description": "Creates a new diagram with the authenticated user as owner",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the diagram"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "Description of the diagram"
                                    }
                                },
                                "required": [
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Diagram created successfully",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "URL of the new diagram"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Diagram"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/Error"
                    },
                    "401": {
                        "$ref": "#/components/responses/Error"
                    }
                },
                "example": {
                    "request": "POST /diagrams\nAuthorization: Bearer <JWT>\nContent-Type: application/json\n{\"name\": \"New Diagram\", \"description\": \"A test diagram\"}",
                    "response": {
                        "status": 201,
                        "headers": {
                            "Location": "/diagrams/123e4567-e89b-12d3-a456-426614174000"
                        },
                        "body": {
                            "id": "123e4567-e89b-12d3-a456-426614174000",
                            "name": "New Diagram",
                            "description": "A test diagram",
                            "created_at": "2025-04-06T12:00:00Z",
                            "modified_at": "2025-04-06T12:00:00Z",
                            "owner": "user@example.com",
                            "authorization": [
                                {
                                    "subject": "user@example.com",
                                    "role": "owner"
                                }
                            ],
                            "metadata": [],
                            "components": []
                        }
                    }
                }
            }
        },
        "/diagrams/{id}": {
            "get": {
                "summary": "Retrieve a diagram",
                "description": "Retrieves the full details of a specific diagram if the user has access",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "UUID of the diagram to retrieve"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Full diagram details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Diagram"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Error"
                    },
                    "403": {
                        "$ref": "#/components/responses/Error"
                    },
                    "404": {
                        "$ref": "#/components/responses/Error"
                    }
                },
                "example": {
                    "request": "GET /diagrams/123e4567-e89b-12d3-a456-426614174000\nAuthorization: Bearer <JWT>",
                    "response": {
                        "status": 200,
                        "body": {
                            "id": "123e4567-e89b-12d3-a456-426614174000",
                            "name": "Workflow Diagram",
                            "description": "A process workflow",
                            "created_at": "2025-04-06T12:00:00Z",
                            "modified_at": "2025-04-06T12:30:00Z",
                            "owner": "user@example.com",
                            "authorization": [
                                {
                                    "subject": "user@example.com",
                                    "role": "owner"
                                }
                            ],
                            "metadata": [],
                            "components": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a diagram",
                "description": "Fully updates a diagram; restricted to writer/owner roles",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "UUID of the diagram to update"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Diagram"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Diagram updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Diagram"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/Error"
                    },
                    "401": {
                        "$ref": "#/components/responses/Error"
                    },
                    "403": {
                        "$ref": "#/components/responses/Error"
                    },
                    "404": {
                        "$ref": "#/components/responses/Error"
                    }
                },
                "example": {
                    "request": "PUT /diagrams/123e4567-e89b-12d3-a456-426614174000\nAuthorization: Bearer <JWT>\nContent-Type: application/json\n{\"id\": \"123e4567-e89b-12d3-a456-426614174000\", \"name\": \"Updated Diagram\", \"description\": \"Updated description\", \"created_at\": \"2025-04-06T12:00:00Z\", \"modified_at\": \"2025-04-06T12:00:00Z\", \"owner\": \"user@example.com\", \"authorization\": [{\"subject\": \"user@example.com\", \"role\": \"owner\"}], \"metadata\": [], \"components\": []}",
                    "response": {
                        "status": 200,
                        "body": {
                            "id": "123e4567-e89b-12d3-a456-426614174000",
                            "name": "Updated Diagram",
                            "description": "Updated description",
                            "created_at": "2025-04-06T12:00:00Z",
                            "modified_at": "2025-04-06T12:45:00Z",
                            "owner": "user@example.com",
                            "authorization": [
                                {
                                    "subject": "user@example.com",
                                    "role": "owner"
                                }
                            ],
                            "metadata": [],
                            "components": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Partially update a diagram",
                "description": "Applies JSON Patch operations to a diagram; restricted to writer/owner roles",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "UUID of the diagram to update"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "op": {
                                            "type": "string",
                                            "enum": [
                                                "add",
                                                "replace",
                                                "remove",
                                                "move",
                                                "copy",
                                                "test"
                                            ],
                                            "description": "Patch operation type"
                                        },
                                        "path": {
                                            "type": "string",
                                            "description": "JSON path to target"
                                        },
                                        "value": {
                                            "description": "Value to apply"
                                        }
                                    },
                                    "required": [
                                        "op",
                                        "path"
                                    ]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Diagram updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Diagram"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/Error"
                    },
                    "401": {
                        "$ref": "#/components/responses/Error"
                    },
                    "403": {
                        "$ref": "#/components/responses/Error"
                    },
                    "404": {
                        "$ref": "#/components/responses/Error"
                    }
                },
                "example": {
                    "request": "PATCH /diagrams/123e4567-e89b-12d3-a456-426614174000\nAuthorization: Bearer <JWT>\nContent-Type: application/json\n[{\"op\": \"replace\", \"path\": \"/name\", \"value\": \"Patched Diagram\"}]",
                    "response": {
                        "status": 200,
                        "body": {
                            "id": "123e4567-e89b-12d3-a456-426614174000",
                            "name": "Patched Diagram",
                            "description": "A process workflow",
                            "created_at": "2025-04-06T12:00:00Z",
                            "modified_at": "2025-04-06T12:45:00Z",
                            "owner": "user@example.com",
                            "authorization": [
                                {
                                    "subject": "user@example.com",
                                    "role": "owner"
                                }
                            ],
                            "metadata": [],
                            "components": []
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a diagram",
                "description": "Deletes a diagram; restricted to owner role",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "UUID of the diagram to delete"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Diagram deleted successfully"
                    },
                    "401": {
                        "$ref": "#/components/responses/Error"
                    },
                    "403": {
                        "$ref": "#/components/responses/Error"
                    },
                    "404": {
                        "$ref": "#/components/responses/Error"
                    }
                },
                "example": {
                    "request": "DELETE /diagrams/123e4567-e89b-12d3-a456-426614174000\nAuthorization: Bearer <JWT>",
                    "response": {
                        "status": 204
                    }
                }
            }
        },
        "/diagrams/{id}/collaborate": {
            "get": {
                "summary": "Get collaboration session status",
                "description": "Returns details of an active collaboration session for a diagram",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "UUID of the diagram"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollaborationSession"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Error"
                    },
                    "403": {
                        "$ref": "#/components/responses/Error"
                    },
                    "404": {
                        "$ref": "#/components/responses/Error"
                    }
                },
                "example": {
                    "request": "GET /diagrams/123e4567-e89b-12d3-a456-426614174000/collaborate\nAuthorization: Bearer <JWT>",
                    "response": {
                        "status": 200,
                        "body": {
                            "session_id": "abc123-session-uuid",
                            "diagram_id": "123e4567-e89b-12d3-a456-426614174000",
                            "participants": [
                                {
                                    "user_id": "user@example.com",
                                    "joined_at": "2025-04-06T12:02:00Z"
                                }
                            ],
                            "websocket_url": "wss://api.example.com/diagrams/123e4567-e89b-12d3-a456-426614174000/ws"
                        }
                    }
                }
            },
            "post": {
                "summary": "Join or start collaboration session",
                "description": "Joins an existing session or starts a new one; writers/owners can start, readers can only join",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "UUID of the diagram"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session joined or started successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollaborationSession"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Error"
                    },
                    "403": {
                        "$ref": "#/components/responses/Error"
                    },
                    "404": {
                        "$ref": "#/components/responses/Error"
                    }
                },
                "example": {
                    "request": "POST /diagrams/123e4567-e89b-12d3-a456-426614174000/collaborate\nAuthorization: Bearer <JWT>",
                    "response": {
                        "status": 200,
                        "body": {
                            "session_id": "abc123-session-uuid",
                            "diagram_id": "123e4567-e89b-12d3-a456-426614174000",
                            "participants": [
                                {
                                    "user_id": "user@example.com",
                                    "joined_at": "2025-04-06T12:02:00Z"
                                }
                            ],
                            "websocket_url": "wss://api.example.com/diagrams/123e4567-e89b-12d3-a456-426614174000/ws"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Leave collaboration session",
                "description": "Removes the user from an active collaboration session",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "UUID of the diagram"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Left session successfully"
                    },
                    "401": {
                        "$ref": "#/components/responses/Error"
                    },
                    "403": {
                        "$ref": "#/components/responses/Error"
                    },
                    "404": {
                        "$ref": "#/components/responses/Error"
                    }
                },
                "example": {
                    "request": "DELETE /diagrams/123e4567-e89b-12d3-a456-426614174000/collaborate\nAuthorization: Bearer <JWT>",
                    "response": {
                        "status": 204
                    }
                }
            }
        },
        "/threat_models": {
            "get": {
                "summary": "List threat models",
                "description": "Returns a list of threat models accessible to the authenticated user as name-ID pairs",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 20
                        },
                        "description": "Number of threat models to return"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 0
                        },
                        "description": "Pagination offset"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "created_at:desc"
                        },
                        "description": "Sort order (e.g., created_at:desc, name:asc)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of threat models as name-ID pairs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ListItem"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Error"
                    }
                },
                "example": {
                    "request": "GET /threat_models?limit=1\nAuthorization: Bearer <JWT>",
                    "response": {
                        "status": 200,
                        "body": [
                            {
                                "name": "System Threat Model",
                                "id": "550e8400-e29b-41d4-a716-446655440000"
                            }
                        ]
                    }
                }
            },
            "post": {
                "summary": "Create a threat model",
                "description": "Creates a new threat model with the authenticated user as owner",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of the threat model"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "Description of the threat model"
                                    }
                                },
                                "required": [
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Threat model created successfully",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "URL of the new threat model"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ThreatModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/Error"
                    },
                    "401": {
                        "$ref": "#/components/responses/Error"
                    }
                },
                "example": {
                    "request": "POST /threat_models\nAuthorization: Bearer <JWT>\nContent-Type: application/json\n{\"name\": \"System Threat Model\", \"description\": \"Threats for system X\"}",
                    "response": {
                        "status": 201,
                        "headers": {
                            "Location": "/threat_models/550e8400-e29b-41d4-a716-446655440000"
                        },
                        "body": {
                            "id": "550e8400-e29b-41d4-a716-446655440000",
                            "name": "System Threat Model",
                            "description": "Threats for system X",
                            "created_at": "2025-04-06T12:00:00Z",
                            "modified_at": "2025-04-06T12:00:00Z",
                            "owner": "user@example.com",
                            "authorization": [
                                {
                                    "subject": "user@example.com",
                                    "role": "owner"
                                }
                            ],
                            "metadata": [],
                            "diagrams": [],
                            "threats": []
                        }
                    }
                }
            }
        },
        "/threat_models/{id}": {
            "get": {
                "summary": "Retrieve a threat model",
                "description": "Retrieves the full details of a specific threat model if the user has access",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "UUID of the threat model to retrieve"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Full threat model details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ThreatModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Error"
                    },
                    "403": {
                        "$ref": "#/components/responses/Error"
                    },
                    "404": {
                        "$ref": "#/components/responses/Error"
                    }
                },
                "example": {
                    "request": "GET /threat_models/550e8400-e29b-41d4-a716-446655440000\nAuthorization: Bearer <JWT>",
                    "response": {
                        "status": 200,
                        "body": {
                            "id": "550e8400-e29b-41d4-a716-446655440000",
                            "name": "System Threat Model",
                            "description": "Threats for system X",
                            "created_at": "2025-04-06T12:00:00Z",
                            "modified_at": "2025-04-06T12:00:00Z",
                            "owner": "user@example.com",
                            "authorization": [
                                {
                                    "subject": "user@example.com",
                                    "role": "owner"
                                }
                            ],
                            "metadata": [],
                            "diagrams": [],
                            "threats": []
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a threat model",
                "description": "Fully updates a threat model; restricted to writer/owner roles",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "UUID of the threat model to update"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ThreatModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Threat model updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ThreatModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/Error"
                    },
                    "401": {
                        "$ref": "#/components/responses/Error"
                    },
                    "403": {
                        "$ref": "#/components/responses/Error"
                    },
                    "404": {
                        "$ref": "#/components/responses/Error"
                    }
                },
                "example": {
                    "request": "PUT /threat_models/550e8400-e29b-41d4-a716-446655440000\nAuthorization: Bearer <JWT>\nContent-Type: application/json\n{\"id\": \"550e8400-e29b-41d4-a716-446655440000\", \"name\": \"Updated Threat Model\", \"description\": \"Updated threats\", \"created_at\": \"2025-04-06T12:00:00Z\", \"modified_at\": \"2025-04-06T12:00:00Z\", \"owner\": \"user@example.com\", \"authorization\": [{\"subject\": \"user@example.com\", \"role\": \"owner\"}], \"metadata\": [], \"diagrams\": [], \"threats\": []}",
                    "response": {
                        "status": 200,
                        "body": {
                            "id": "550e8400-e29b-41d4-a716-446655440000",
                            "name": "Updated Threat Model",
                            "description": "Updated threats",
                            "created_at": "2025-04-06T12:00:00Z",
                            "modified_at": "2025-04-06T12:45:00Z",
                            "owner": "user@example.com",
                            "authorization": [
                                {
                                    "subject": "user@example.com",
                                    "role": "owner"
                                }
                            ],
                            "metadata": [],
                            "diagrams": [],
                            "threats": []
                        }
                    }
                }
            },
            "patch": {
                "summary": "Partially update a threat model",
                "description": "Applies JSON Patch operations to a threat model; restricted to writer/owner roles",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "UUID of the threat model to update"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "op": {
                                            "type": "string",
                                            "enum": [
                                                "add",
                                                "replace",
                                                "remove",
                                                "move",
                                                "copy",
                                                "test"
                                            ],
                                            "description": "Patch operation type"
                                        },
                                        "path": {
                                            "type": "string",
                                            "description": "JSON path to target"
                                        },
                                        "value": {
                                            "description": "Value to apply"
                                        }
                                    },
                                    "required": [
                                        "op",
                                        "path"
                                    ]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Threat model updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ThreatModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/Error"
                    },
                    "401": {
                        "$ref": "#/components/responses/Error"
                    },
                    "403": {
                        "$ref": "#/components/responses/Error"
                    },
                    "404": {
                        "$ref": "#/components/responses/Error"
                    }
                },
                "example": {
                    "request": "PATCH /threat_models/550e8400-e29b-41d4-a716-446655440000\nAuthorization: Bearer <JWT>\nContent-Type: application/json\n[{\"op\": \"add\", \"path\": \"/threats/-\", \"value\": {\"id\": \"6ba7b810-9dad-11d1-80b4-00c04fd430c8\", \"threat_model_id\": \"550e8400-e29b-41d4-a716-446655440000\", \"name\": \"Data Breach\", \"description\": \"Unauthorized access\", \"created_at\": \"2025-04-06T12:01:00Z\", \"modified_at\": \"2025-04-06T12:01:00Z\", \"metadata\": []}}]",
                    "response": {
                        "status": 200,
                        "body": {
                            "id": "550e8400-e29b-41d4-a716-446655440000",
                            "name": "System Threat Model",
                            "description": "Threats for system X",
                            "created_at": "2025-04-06T12:00:00Z",
                            "modified_at": "2025-04-06T12:01:00Z",
                            "owner": "user@example.com",
                            "authorization": [
                                {
                                    "subject": "user@example.com",
                                    "role": "owner"
                                }
                            ],
                            "metadata": [],
                            "diagrams": [],
                            "threats": [
                                {
                                    "id": "6ba7b810-9dad-11d1-80b4-00c04fd430c8",
                                    "threat_model_id": "550e8400-e29b-41d4-a716-446655440000",
                                    "name": "Data Breach",
                                    "description": "Unauthorized access",
                                    "created_at": "2025-04-06T12:01:00Z",
                                    "modified_at": "2025-04-06T12:01:00Z",
                                    "metadata": []
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a threat model",
                "description": "Deletes a threat model; restricted to owner role",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "UUID of the threat model to delete"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Threat model deleted successfully"
                    },
                    "401": {
                        "$ref": "#/components/responses/Error"
                    },
                    "403": {
                        "$ref": "#/components/responses/Error"
                    },
                    "404": {
                        "$ref": "#/components/responses/Error"
                    }
                },
                "example": {
                    "request": "DELETE /threat_models/550e8400-e29b-41d4-a716-446655440000\nAuthorization: Bearer <JWT>",
                    "response": {
                        "status": 204
                    }
                }
            }
        }
    }
}
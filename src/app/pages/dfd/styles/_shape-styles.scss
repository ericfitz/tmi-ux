// Shape styles for DFD components
// These styles are used by the shape definitions

// Common label styles mixin for all shapes
@mixin shape-label-styles {
  fill: #333;
  font-size: 12px;
  font-family: 'Roboto Condensed', Arial, sans-serif;
  text-anchor: middle;
  dominant-baseline: middle;
  pointer-events: none;
}

// Actor shape styles
.actor-shape {
  fill: #fff;
  stroke: #333;
  stroke-width: 2;
  opacity: 1;
}

.actor-label {
  @include shape-label-styles;
}

// Process shape styles
.process-shape {
  fill: #fff;
  stroke: #333;
  stroke-width: 2;
  opacity: 1;
}

.process-label {
  @include shape-label-styles;
}

// Store shape styles
.store-shape {
  fill: #fff;
  stroke: transparent;
  opacity: 1;
}

.store-top-line,
.store-bottom-line {
  stroke: #333;
  stroke-width: 2;
}

.store-label {
  @include shape-label-styles;
}

// Security Boundary shape styles
.security-boundary-shape {
  fill: #fff;
  stroke: #333;
  stroke-width: 2;
  stroke-dasharray: 5, 5;
  rx: 10;
  ry: 10;
  opacity: 1;
}

.security-boundary-label {
  @include shape-label-styles;
}

// Textbox shape styles
.textbox-shape {
  fill: #fff;
  stroke: #333;
  stroke-width: 1;
  stroke-dasharray: 2, 2;
  opacity: 0.8;
  rx: 4;
  ry: 4;
}

.textbox-content {
  width: 100%;
  height: 100%;
  padding: 5px;
  box-sizing: border-box;
  font-size: 12px;
  color: #333;
  overflow: auto;
  word-wrap: break-word;
  text-align: left;
  font-family: 'Roboto Condensed', Arial, sans-serif;
}

// Generic dfd-label class used by all shapes
.dfd-label {
  @include shape-label-styles;
}

// More specific selectors to override inline styles
.x6-graph text.actor-label,
.x6-graph text.process-label,
.x6-graph text.store-label,
.x6-graph text.security-boundary-label,
.x6-graph text.dfd-label {
  font-family: 'Roboto Condensed', Arial, sans-serif;
}

// Target SVG text elements with font-family attribute
svg text[font-family] {
  font-family: 'Roboto Condensed', Arial, sans-serif;
}

// Port visibility rules
// Hide all ports by default with high specificity
.x6-graph .x6-node .x6-port-body {
  stroke: #000;
  fill: #fff;
  visibility: hidden;
  opacity: 0;
}

// Show ports on hover or when connected
.x6-graph .x6-node.is-hovered .x6-port-body, /* Show on node hover */
.x6-graph .x6-node .x6-port-body.port-visible, /* Show when port-visible class is applied */
.x6-graph .x6-node .x6-port-body.port-connected /* Show when port is connected */ {
  display: block; /* Ensure it's block for layout */
  pointer-events: all; /* Ensure it's clickable when visible */
  visibility: visible;
  opacity: 1;
}

// Node states
// 1. Selected state
.selected-node {
  stroke: #47c769;
  stroke-width: 2.5;
}

// 2. Node state classes for consistent styling
.x6-node {
  &.is-selected {
    .body {
      stroke: #47c769;
      stroke-width: 2.5;
    }
  }

  &.is-hovered {
    .body {
      stroke-width: 2;
      filter: brightness(1.05);
    }
  }
}

// Z-index hierarchy
.x6-graph {
  .security-boundary-shape {
    z-index: 0; // Security boundaries at the bottom
  }

  .x6-node {
    z-index: 10; // Regular nodes above boundaries

    &.is-selected {
      z-index: 20; // Selected nodes above regular nodes
    }
  }

  .x6-edge {
    z-index: 5; // Edges between boundaries and nodes

    &.is-selected {
      z-index: 15; // Selected edges above regular nodes
    }
  }
}
